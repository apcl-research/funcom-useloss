TDAT: public boolean is bigger than ( fraction function other ) {  <NL> if ( root node . equals ( other . root node ) = = false )  <NL> throw new illegal argument exception ( " cannot compare functions with different roots " ) ;  <NL> iterator < string > it = state space . state iterator ( root node ) ;  <NL> while ( it . has next ( ) ) {  <NL> string s = it . next ( ) ;  <NL> if ( other . values . get ( s ) . is possibly greater or equal ( this . values . get ( s ) ) )  <NL> return false ;  <NL>  }  <NL> return ! other . below fraction . is possibly greater or equal ( this . below fraction ) ;  <NL>  }  COM: <s> tests if this fraction function is guaranteed bigger than the argument </s>