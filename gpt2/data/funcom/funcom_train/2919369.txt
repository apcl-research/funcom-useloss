TDAT: public grammar ast find first type ( int ttype ) {  <NL>  / / check this node ( the root ) first <NL> if ( this . get type ( ) = = ttype ) {  <NL> return this ;  <NL>  }  <NL>  / / else check children <NL> grammar ast child = ( grammar ast ) this . get first child ( ) ;  <NL> while ( child ! = null ) {  <NL> grammar ast result = child . find first type ( ttype ) ;  <NL> if ( result ! = null ) {  <NL> return result ;  <NL>  }  <NL> child = ( grammar ast ) child . get next sibling ( ) ;  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> return a reference to the first node depth first that has </s>