TDAT: public void take ( final execution execution , final collection < sequence flow > outgoing ) {  <NL> switch ( outgoing . size ( ) ) {  <NL> case 0 : break ;  <NL> case 1 : outgoing . iterator ( ) . next ( ) . fire ( execution ) ; break ;  <NL> default :  <NL> for ( final sequence flow transition : outgoing ) {  <NL> executor . execute ( new runnable ( ) {  <NL> public void run ( ) {  <NL> notify new thread ( execution ) ;  <NL> transition . fire ( execution . create child ( ) ) ;  <NL>  }  <NL>  } ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> takes the given execution over the outgoing transitions splitting them into </s>