TDAT: public message get message ( ) {  <NL> int size = message backlog . size ( ) ;  <NL>  <NL> while ( 0 = = size & & ! shutdown ) {  <NL> try {  <NL> lo gall . debug ( " async sender waits for a new message ! " ) ;  <NL> synchronized ( this ) {  <NL> wait ( ) ;  <NL>  }  <NL>  }  <NL> catch ( interrupted exception ie ) { }  <NL> lo gall . debug ( " async sender awakens ! " ) ;  <NL> size = message backlog . size ( ) ;  <NL>  }  <NL>  <NL> if ( shutdown ) {  <NL> return null ;  <NL>  }  <NL> message m = null ;  <NL> synchronized ( message backlog ) { / / lock the msg queue while we retrieve a message <NL> m = ( message backlog . remove ( 0 ) ) . get message ( ) ;  <NL>  }  <NL> return m ;  <NL>  }  COM: <s> get the message </s>