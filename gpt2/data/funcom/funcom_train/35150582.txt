TDAT: private void mock fields ( class < ? > clazz , object test ) throws exception {  <NL> list < object > _ mocks = new array list < object > ( ) ;  <NL> for ( field field : clazz . get declared fields ( ) ) {  <NL> if ( field . get annotation ( mock . class ) ! = null ) {  <NL> try {  <NL> field . set accessible ( true ) ;  <NL> object o = create mock ( field . get type ( ) ) ;  <NL> field . set ( test , o ) ;  <NL>  _ mocks . add ( o ) ;  <NL>  } catch ( illegal argument exception e ) {  <NL> throw new exception ( e . get message ( ) , e ) ;  <NL>  }  <NL>  }  <NL>  }  <NL> mocks = _ mocks . to array ( ) ;  <NL>  }  COM: <s> reflect itself get annotate fields that dynamic assigned to mock objects </s>