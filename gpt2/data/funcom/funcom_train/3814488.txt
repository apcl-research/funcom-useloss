TDAT: public void add ( grammar node node , float log probability ) {  <NL>  / / if we are an empty node , a loopback makes no sense .  <NL>  / / this construct can be generated when dealing with recursive <NL>  / / grammars , so we check for them and toss them out .  <NL>  / /  <NL> if ( is empty ( ) & & this = = node ) {  <NL> return ;  <NL>  }  <NL> arc list . add ( new grammar arc ( node , log probability ) ) ;  <NL>  }  COM: <s> adds an arc to the given node </s>