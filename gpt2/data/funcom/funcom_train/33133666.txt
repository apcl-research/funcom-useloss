TDAT: private void arg smashed ( throwable t ) {  <NL> synchronized ( lock ) {  <NL> if ( t = = null ) {  <NL> t = new null pointer exception (  <NL>  " buffering proxy is smashed with null " ) ;  <NL>  }  <NL> state = promise . smashed ;  <NL> if ( first message ! = null ) {  <NL> smash message ( first message ) ;  <NL> first message = null ;  <NL> if ( other messages ! = null ) {  <NL> for ( iterator i = other messages . iterator ( ) ; i . has next ( ) ; ) {  <NL> message base other message = ( message base ) i . next ( ) ;  <NL> smash message ( other message ) ;  <NL>  }  <NL> other messages = null ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> this method is resovled when promise is smashed </s>