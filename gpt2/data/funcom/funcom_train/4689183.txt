TDAT: protected statement method block ( framework method method ) {  <NL> object test ;  <NL> try {  <NL> test = new reflective callable ( ) {  <NL>  @ override <NL> protected object run reflective call ( ) throws throwable {  <NL> return create test ( ) ;  <NL>  }  <NL>  } . run ( ) ;  <NL>  } catch ( throwable e ) {  <NL> return new fail ( e ) ;  <NL>  }  <NL>  <NL> statement statement = method invoker ( method , test ) ;  <NL> statement = possibly expecting exceptions ( method , test , statement ) ;  <NL> statement = with potential timeout ( method , test , statement ) ;  <NL> statement = with befores ( method , test , statement ) ;  <NL> statement = with afters ( method , test , statement ) ;  <NL> return statement ;  <NL>  }  COM: <s> returns a statement that when executed either returns normally if </s>