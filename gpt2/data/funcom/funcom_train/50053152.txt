TDAT: private void generate circle ( ) {  <NL> float step = 1 . 0f / arc _ resolution ;  <NL> for ( float v = 0 . 0f ; v < = 1 . 0f ; v + = step ) {  <NL> indices circle . put ( vertices circle . position ( ) / 3 ) ;  <NL> if ( v + step < 1 . 0f )  <NL> indices circle . put ( vertices circle . position ( ) / 3 + 1 ) ;  <NL>  <NL> float phi = 2 . 0f * ( float ) math . pi * v ;  <NL> vertices circle . put ( ( float ) math . cos ( phi ) ) ;  <NL> vertices circle . put ( ( float ) math . sin ( phi ) ) ;  <NL> vertices circle . put ( 0 . 0f ) ;  <NL>  }  <NL> indices circle . put ( 0 ) ;  <NL>  }  COM: <s> utility function creates a simple 2 d circle </s>