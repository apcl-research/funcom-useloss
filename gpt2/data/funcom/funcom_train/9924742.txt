TDAT: protected void disassemble operand ( opcode desc op , int rand index )  <NL>  { operand desc am = find operand ( op , rand index ) ;  <NL> if ( am ! = no show rand )  <NL>  { if ( am = = null ) line . append ( " ? ? ? " ) ;  <NL> else expand syntax ( am , am . syntax , big integer . zero , false ) ;  <NL> line . append ( ' , ' ) ;  <NL>  }  <NL> operand set ams = op . operand sets [ rand index ] ;  <NL> if ( ams . following pseudo ops ! = null ) / / op followed by certain pseudo - ops <NL> decoder queue . add ( new decoder ( ams . following pseudo ops , operand . get context ( ) ) ) ;  <NL>  }  COM: <s> process one instruction operand by reconstructing its assembly language syntax </s>