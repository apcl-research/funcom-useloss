TDAT: public int delete ( iterator < ? > it , transaction t ) {  <NL>  <NL> trans wrapper wrap = init trans if required ( t ) ;  <NL>  <NL> try {  <NL> spi transaction trans = wrap . transaction ;  <NL> int delete count = 0 ;  <NL> while ( it . has next ( ) ) {  <NL> object bean = it . next ( ) ;  <NL> persister . delete ( bean , trans ) ;  <NL> delete count + + ;  <NL>  }  <NL>  <NL> wrap . commit if created ( ) ;  <NL>  <NL> return delete count ;  <NL>  <NL>  } catch ( runtime exception e ) {  <NL> wrap . rollback if created ( ) ;  <NL> throw e ;  <NL>  }  <NL>  }  COM: <s> delete all the beans in the iterator with an explicit transaction </s>