TDAT: public interval intersect ( final interval that ) {  <NL> if ( ! intersects ( that ) ) throw new illegal argument exception ( that + " does not intersect " + this ) ;  <NL> return new interval ( this . sequence ,  <NL> math . max ( this . start , that . start ) ,  <NL> math . min ( this . end , that . end ) ,  <NL> this . negative strand ,  <NL> this . name + " intersection " + that . name ) ;  <NL>  }  COM: <s> returns a new interval that represents the intersection between the two intervals </s>