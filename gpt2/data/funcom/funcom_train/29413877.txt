TDAT: public void run ( ) {  <NL> this . finished = false ;  <NL>  <NL> object output = this . source ;  <NL>  <NL> for ( i component link : components ) {  <NL> link . init ( ) ;  <NL>  <NL> try {  <NL> link . transform input ( output ) ;  <NL>  <NL> link . invoke ( ) ;  <NL>  <NL> output = link . transform output ( ) ;  <NL>  <NL> if ( output = = null )  <NL> throw new protocol exception (  <NL>  " output source must not be null " ) ;  <NL>  } catch ( protocol exception e1 ) {  <NL> protocol . get logger ( ) . error ( " " , e1 ) ;  <NL>  <NL> if ( continue though exception ( link , e1 ) ) {  <NL> link . finish ( ) ;  <NL> continue ;  <NL>  } else {  <NL> break ;  <NL>  }  <NL>  }  <NL>  <NL> link . finish ( ) ;  <NL>  }  <NL>  <NL> if ( this . return to sender after finish ( ) )  <NL> this . handle return ( output ) ;  <NL>  <NL> this . finished = true ;  <NL>  }  COM: <s> this is the core method of the protocol </s>