TDAT: public void out a multiplicative expression ( a multiplicative expression node ) {  <NL>  <NL> node prim expr = node . get unary expression ( ) ;  <NL> instance value = annotated value ( prim expr ) ;  <NL> iterator mults = node . get multiplication ( ) . iterator ( ) ;  <NL>  <NL> while ( mults . has next ( ) ) {  <NL>  <NL> a multiplication mult = ( a multiplication ) mults . next ( ) ;  <NL> node op = mult . get multiply operator ( ) ;  <NL> value = invoke operator ( value , op , mult . get unary expression ( ) ) ;  <NL>  <NL>  }  <NL>  <NL> annotate ( node , value ) ;  <NL>  <NL>  }  COM: <s> evaluates and annotates the value s of a multiplicative expression </s>