TDAT: public void out a match comparison ( a match comparison node ) {  <NL> try {  <NL> string regexp = ( string ) val stack . pop ( ) ;  <NL> string val = val stack . pop ( ) . to string ( ) ;  <NL>  <NL> re re = new re ( regexp compiler . compile ( regexp ) ) ;  <NL>  <NL> push result ( " = ~ " , re . match ( val ) ) ;  <NL>  } catch ( re syntax exception e ) {  <NL> throw new wrapper exception ( " match syntax error " , e ) ;  <NL>  }  <NL>  }  COM: <s> pops the last two values from the stack and tries to compile </s>