TDAT: public string wrapline ( int columns )  <NL>  { int n = n , good = n ;  <NL> string s = " " ;  <NL> while ( n < l )  <NL>  { if ( c [ n ] = = ' \n ' )  <NL>  { if ( n > n ) s = new string ( c , n , n - n ) ;  <NL> n = n + 1 ;  <NL> break ;  <NL>  }  <NL> if ( c [ n ] = = ' ' || c [ n ] = = ' \t ' || c [ n ] = = ' \n ' )  <NL>  { good = n ;  <NL>  }  <NL> n + + ;  <NL> if ( n - n > = columns & & good > n )  <NL>  { s = new string ( c , n , good - n ) ;  <NL> n = good + 1 ;  <NL> break ;  <NL>  }  <NL> if ( n > = l )  <NL>  { if ( n > n ) s = new string ( c , n , n - n ) ;  <NL> n = n ;  <NL> break ;  <NL>  }  <NL>  }  <NL> if ( n > = l ) error = true ;  <NL> return s ;  <NL>  }  COM: <s> return a string which is parsed from words with limited length </s>