TDAT: public double get length ( ) {  <NL> if ( shape = = null ) return 0 . 0 ;  <NL> rectangle2d r2d = shape . get bounds2d ( ) ;  <NL> double w = r2d . get width ( ) ;  <NL> double h = r2d . get height ( ) ;  <NL> if ( w = = 0 & & h = = 0 ) return 0 . 0 ;  <NL> path iterator p iter ;  <NL> flatten = true ;  <NL> if ( flatten ) p iter = get flattening path iterator ( shape , flatness ) ;  <NL> else p iter = shape . get path iterator ( new affine transform ( ) ) ;  <NL> double [ ] par = new double [ 1 ] ;  <NL> parse path ( p iter , par , null , null , null ) ;  <NL> flatten = false ;  <NL> return par [ 0 ] ;  <NL>  }  COM: <s> returns the length of this shape perimeter if shape is closed </s>