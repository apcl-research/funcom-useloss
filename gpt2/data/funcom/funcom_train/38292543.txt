TDAT: private void set active state ( int new state ) {  <NL> synchronized ( state lock ) {  <NL> if ( my life cycle = = my active life cycle ) {  <NL> int old state = my life cycle . get state ( ) ;  <NL> if ( new state ! = old state ) {  <NL>  ( ( active life cycle ) my life cycle ) . set state ( new state ) ;  <NL>  / / # midp _ exclude _ begin <NL> notify changed agent state ( old state , new state ) ;  <NL>  / / # midp _ exclude _ end <NL>  }  <NL>  }  <NL> else {  <NL>  / / a change state request arrived in the meanwhile .  <NL>  / / let it take place .  <NL> throw new interrupted ( ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> the active life cycle handles different internal states initiated </s>