TDAT: public writer write ( writer writer ) throws json exception {  <NL> try {  <NL> boolean commanate = false ;  <NL> iterator < string > keys = this . keys ( ) ;  <NL> writer . write ( ' { ' ) ;  <NL>  <NL> while ( keys . has next ( ) ) {  <NL> if ( commanate ) {  <NL> writer . write ( ' , ' ) ;  <NL>  }  <NL> object key = keys . next ( ) ;  <NL> writer . write ( quote ( key . to string ( ) ) ) ;  <NL> writer . write ( ' : ' ) ;  <NL> object value = this . map . get ( key ) ;  <NL> if ( value instanceof json object ) {  <NL>  ( ( json object ) value ) . write ( writer ) ;  <NL>  } else if ( value instanceof json array ) {  <NL>  ( ( json array ) value ) . write ( writer ) ;  <NL>  } else {  <NL> writer . write ( value to string ( value ) ) ;  <NL>  }  <NL> commanate = true ;  <NL>  }  <NL> writer . write ( ' } ' ) ;  <NL> return writer ;  <NL>  } catch ( io exception exception ) {  <NL> throw new json exception ( exception ) ;  <NL>  }  <NL>  }  COM: <s> write the contents of the jsonobject as json text to a writer </s>