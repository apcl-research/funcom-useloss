TDAT: public boolean create dictionary ( ) {  <NL> try {  <NL> db manager dbm = db manager . get instance ( ) ;  <NL> result set result = dbm <NL>  . query ( " select value from token where value not like ' % < p > % ' ; " ) ;  <NL> string token = " " ;  <NL>  <NL>  / / clear the dictionary content <NL> dictionary . clear ( ) ;  <NL>  <NL> if ( ! result . next ( ) ) {  <NL> debug . print warning ( " nothing in the dictionary . " ,  <NL> debug type . hc _ sphinx _ gui ) ;  <NL> dbm . disconnect ( ) ;  <NL> return false ;  <NL>  }  <NL>  <NL>  / / creates the new dictionary <NL> do {  <NL> token = result . get string ( " value " ) ;  <NL> dictionary . add ( token . to lower case ( ) ) ;  <NL>  } while ( result . next ( ) ) ;  <NL> dbm . disconnect ( ) ;  <NL> return true ;  <NL>  } catch ( sql exception e ) {  <NL> e . print stack trace ( ) ;  <NL>  }  <NL> return false ;  <NL>  }  COM: <s> extract tokens from the database and create the base dictionary </s>