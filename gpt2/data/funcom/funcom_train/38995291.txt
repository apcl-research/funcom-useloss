TDAT: public delp argument get disagreement subargument ( fol formula lit , defeasible logic program delp ) {  <NL> set < delp argument > arguments = delp . get arguments ( ) ;  <NL> iterator < delp argument > it = arguments . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> delp argument argument = ( delp argument ) it . next ( ) ;  <NL> if ( argument . is subargument of ( this ) ) {  <NL> set < fol formula > literals = new hash set < fol formula > ( ) ;  <NL> literals . add ( lit ) ;  <NL> literals . add ( argument . get conclusion ( ) ) ;  <NL> if ( delp . disagree ( literals ) )  <NL> return argument ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> computes the disagreement subargument of this argument for the given literal </s>