TDAT: public visual edge get edge by opposite node ( visual node n , boolean incoming ) {  <NL> list < visual edge > edges = get edges ( incoming ) ;  <NL> visual edge found = null ;  <NL> for ( visual edge ve : edges ) {  <NL> if ( ve . get opposite node ( this ) = = n ) {  <NL> if ( found ! = null ) {  <NL> throw new illegal state exception ( " there are more than one edges between the nodes " ) ;  <NL>  }  <NL> found = ve ;  <NL>  }  <NL>  }  <NL> return found ;  <NL>  }  COM: <s> throws an exception if there is more than one such node </s>