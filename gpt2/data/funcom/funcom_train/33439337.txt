TDAT: private void interrupt idle workers ( boolean only one ) {  <NL> final reentrant lock main lock = this . main lock ;  <NL> main lock . lock ( ) ;  <NL> try {  <NL> iterator it = workers . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> worker w = ( worker ) it . next ( ) ;  <NL> thread t = w . thread ;  <NL> if ( ! t . is interrupted ( ) & & w . try lock ( ) ) {  <NL> try {  <NL> t . interrupt ( ) ;  <NL>  } catch ( security exception ignore ) {  <NL>  } finally {  <NL> w . unlock ( ) ;  <NL>  }  <NL>  }  <NL> if ( only one )  <NL> break ;  <NL>  }  <NL>  } finally {  <NL> main lock . unlock ( ) ;  <NL>  }  <NL>  }  COM: <s> interrupts threads that might be waiting for tasks as indicated by </s>