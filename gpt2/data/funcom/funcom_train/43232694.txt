TDAT: public void check for role in use ( final role role ) throws consistency exception {  <NL> if ( this . model . get all roles ( ) . contains ( role ) ) {  <NL> final vector < person > p = role . get persons ( ) ;  <NL> if ( p ! = null & & ! p . is empty ( ) ) {  <NL> throw new consistency exception ( fhdw . ipscrum . shared . constants . exception constants . role _ still _ in _ use _ error ) ;  <NL>  }  <NL>  } else {  <NL> throw new consistency exception ( fhdw . ipscrum . shared . constants . exception constants . role _ not _ found _ error ) ;  <NL>  }  <NL>  }  COM: <s> helper method to ensure that no roles use will could be removed </s>