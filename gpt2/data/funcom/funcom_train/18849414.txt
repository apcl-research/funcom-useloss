TDAT: private void wait all workers ( ) {  <NL> iterator it ;  <NL> synchronized ( workers list ) {  <NL> it = workers list . iterator ( ) ;  <NL>  }  <NL> do {  <NL> try {  <NL> while ( it . has next ( ) ) {  <NL> final requisition worker worker = ( requisition worker ) it . next ( ) ;  <NL> synchronized ( worker ) {  <NL> worker . notify ( ) ;  <NL> worker . interrupt ( ) ;  <NL>  }  <NL> try {  <NL> worker . join ( ) ;  <NL>  } catch ( interrupted exception e ) {  <NL>  / / ignores <NL>  }  <NL>  }  <NL> it = null ;  <NL>  } catch ( concurrent modification exception e ) {  <NL> synchronized ( workers list ) {  <NL> it = workers list . iterator ( ) ;  <NL>  }  <NL>  }  <NL>  } while ( it ! = null ) ;  <NL> workers list . clear ( ) ;  <NL>  }  COM: <s> waits for all workers to die </s>