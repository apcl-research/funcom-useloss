TDAT: int k ) {  <NL> boolean value = true ;  <NL> int size of component = 1 ;  <NL> clear visited ( ) ;  <NL> array list < vertex > stack = new array list < vertex > ( ) ;  <NL> vertex current node = new vertex ( ) ;  <NL> stack . add ( v ) ;  <NL> do {  <NL> current node = stack . get ( 0 ) ;  <NL> stack . remove ( 0 ) ;  <NL> if ( ! current node . get visited ( ) ) {  <NL> current node . set visited ( true ) ;  <NL> for ( vertex w : current node . get neighbor list ( ) ) {  <NL> if ( ! w . get visited ( ) ) {  <NL> stack . add ( 0 , w ) ;  <NL> size of component + + ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  <NL> while ( ! ( stack . is empty ( ) ) & & size of component < k ) ;  <NL> if ( size of component < k ) value = false ;  <NL> return value ;  <NL>  }  COM: <s> check that the vertex v is a member of connected component of </s>