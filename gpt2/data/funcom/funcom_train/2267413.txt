TDAT: protected object run ( transaction runnable transaction runnable ) {  <NL> transaction t = null ;  <NL> session s = null ;  <NL> try {  <NL> s = get session ( ) ;  <NL> t = begin transaction ( s ) ;  <NL> object obj = transaction runnable . run ( s ) ;  <NL> commit transaction ( t ) ;  <NL> return obj ;  <NL>  }  <NL> catch ( throwable throwable ) {  <NL> if ( null ! = t ) {  <NL> try {  <NL> t . rollback ( ) ;  <NL>  }  <NL> catch ( hibernate exception e ) { handle error ( e ) ; }  <NL>  }  <NL> if ( transaction runnable instanceof transaction fail handler ) {  <NL> try {  <NL>  ( ( transaction fail handler ) transaction runnable ) . on fail ( s ) ;  <NL>  }  <NL> catch ( throwable e ) { handle error ( e ) ; }  <NL>  }  <NL> throw exception ( throwable ) ;  <NL> return null ;  <NL>  }  <NL> finally {  <NL> close session ( s ) ;  <NL>  }  <NL>  }  COM: <s> execute the given transaction runnable </s>