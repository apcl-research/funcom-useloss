TDAT: public string to string ( ) {  <NL> final int count = _ patterns . size ( ) ;  <NL> final string buffer result = new string buffer ( ) ;  <NL>  <NL> for ( int i = 0 ; i < count ; i + + ) {  <NL> final location path pattern pattern =  <NL>  ( location path pattern ) _ patterns . element at ( i ) ;  <NL>  <NL> if ( i = = 0 ) {  <NL> result . append ( " testseq for kernel " + _ kernel type )  <NL>  . append ( ' \n ' ) ;  <NL>  }  <NL> result . append ( " pattern " + i + " : " )  <NL>  . append ( pattern . to string ( ) )  <NL>  . append ( ' \n ' ) ;  <NL>  }  <NL> return result . to string ( ) ;  <NL>  }  COM: <s> returns a string representation of this test sequence </s>