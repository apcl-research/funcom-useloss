TDAT: public formula loopless path ( ) {  <NL> final variable t1 = variable . unary ( " t " ) ;  <NL> final variable t2 = variable . unary ( " t ' " ) ;  <NL>  / / all t , t ' : time | some t & t ' || ! ( to send . t = to send . tï¿½ )  <NL> final formula f1 = t1 . intersection ( t2 ) . some ( ) . or ( to send . join ( t1 ) . eq ( to send . join ( t2 ) ) . not ( ) ) ;  <NL> return f1 . for all ( t1 . one of ( time ) . and ( t2 . one of ( time ) ) ) ;  <NL>  }  COM: <s> returns the loopless path predicate </s>