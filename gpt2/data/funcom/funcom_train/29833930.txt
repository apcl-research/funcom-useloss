TDAT: public void transaction started ( object source ) {  <NL> post debug transaction started ( source ) ;  <NL> transaction event event = new transaction event ( source ) ;  <NL> this . transactions active + + ;  <NL>  <NL> iterator < ? > m iter = new multiple iterator ( new iterator [ ] {  <NL> delayed node listener list . iterator ( ) ,  <NL> delayed edge listener list . iterator ( ) ,  <NL> delayed attribute listener list . iterator ( ) ,  <NL> delayed graph listener list . iterator ( ) ,  <NL> alltime node listener list . iterator ( ) ,  <NL> alltime edge listener list . iterator ( ) ,  <NL> alltime attribute listener list . iterator ( ) ,  <NL> alltime graph listener list . iterator ( ) } ) ;  <NL>  <NL> while ( m iter . has next ( ) ) {  <NL>  ( ( transaction listener ) m iter . next ( ) ) . transaction started ( event ) ;  <NL>  }  <NL>  }  COM: <s> called when a transaction has started </s>