TDAT: public conditional get conditional ( arg object antecedent , arg object consequent ) {  <NL> int i , new val ;  <NL> boolean did change ;  <NL> enumeration keys ;  <NL> arg object cur statement ;  <NL>  <NL> keys = statements . keys ( ) ;  <NL> while ( keys . has more elements ( ) ) {  <NL> cur statement = ( arg object ) keys . next element ( ) ;  <NL> if ( cur statement instanceof conditional ) {  <NL> if ( ( ( conditional ) cur statement ) . get antecedent ( ) = = antecedent & & ( ( conditional ) cur statement ) . get consequent ( ) = = consequent ) {  <NL> return ( conditional ) cur statement ;  <NL>  }  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> returns the conditional within this theory with the given antecedent </s>