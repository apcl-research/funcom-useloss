TDAT: private object invoke0 ( method method , object [ ] args ) {  <NL> try {  <NL> write fields ( m _ superclass , m _ source , m _ delegate ) ;  <NL> method . set accessible ( true ) ;  <NL> object result = method . invoke ( m _ delegate , args ) ;  <NL> write fields ( m _ superclass , m _ delegate , m _ source ) ;  <NL> return result ;  <NL>  } catch ( runtime exception e ) {  <NL> throw e ;  <NL>  } catch ( invocation target exception e ) {  <NL> throw new delegation exception ( e . get cause ( ) ) ;  <NL>  } catch ( exception e ) {  <NL> throw new delegation exception ( e ) ;  <NL>  }  <NL>  }  COM: <s> internal implementation for invocation on delegated class </s>