TDAT: protected coder result encode loop ( char buffer cb , byte buffer bb ) {  <NL> char buffer tmpcb = char buffer . allocate ( cb . remaining ( ) ) ;  <NL> while ( cb . has remaining ( ) ) {  <NL> tmpcb . put ( cb . get ( ) ) ;  <NL>  }  <NL> tmpcb . rewind ( ) ;  <NL> rot13 ( tmpcb ) ;  <NL> base encoder . reset ( ) ;  <NL> coder result cr = base encoder . encode ( tmpcb , bb , true ) ;  <NL>  / / if error or output overflow , we need to adjust <NL>  / / the position of the input buffer to match what <NL>  / / was really consumed from the temp buffer . if <NL>  / / underflow ( all input consumed ) , this is a no - op .  <NL> cb . position ( cb . position ( ) - tmpcb . remaining ( ) ) ;  <NL> return ( cr ) ;  <NL>  }  COM: <s> implementation of the encoding loop </s>