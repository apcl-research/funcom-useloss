TDAT: public transformation substem position ( transformation trf , double where ) {  <NL> if ( lpar . n curve v > = 0 ) { / / normal segment <NL> return trf . translate ( transf . get z ( ) . mul ( where * length ) ) ;  <NL>  }  <NL>  / / helix <NL>  / / get index of the subsegment <NL> int i = ( int ) ( where * ( subsegments . size ( ) - 1 ) ) ;  <NL>  / / interpolate position <NL> vector p1 = subsegments . element at ( i ) . pos ;  <NL> vector p2 = subsegments . element at ( i + 1 ) . pos ;  <NL> vector pos = p1 . add ( p2 . sub ( p1 ) . mul ( where - i / ( subsegments . size ( ) - 1 ) ) ) ;  <NL> return trf . translate ( pos . sub ( pos from ( ) ) ) ;  <NL>  }  COM: <s> calcs the position of a substem in the segment given </s>