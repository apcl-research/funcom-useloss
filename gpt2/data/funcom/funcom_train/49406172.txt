TDAT: private void add grammatical constraint ( sn actellon schema actellon schema , string constraint ) {  <NL> final resource node node = qn resolver . resolve ( constraint ) ;  <NL> if ( node = = null || ! stereotype checker . is class ( node ) ) {  <NL> throw new illegal argument exception ( " unexpected constraint : " + constraint ) ;  <NL>  }  <NL> sn class classifier = node . as resource ( ) . as class ( ) ;  <NL> if ( classifier . is specialization of ( apriori . casus ) ) {  <NL> association . create ( context , actellon schema , node , aras . has _ casus _ constraint ) ;  <NL>  } else if ( classifier . is specialization of ( apriori . pronoun ) ) {  <NL> association . create ( context , actellon schema , node , aras . has _ pronoun _ constraint ) ;  <NL>  }  <NL>  }  COM: <s> add the named constraint to the given schema </s>