TDAT: public branch and bound ( graph g ) {  <NL> super ( g , " branch and bound " ) ;  <NL> start = ts problem model . get instance ( ) . get source node index ( ) ;  <NL> goal = ts problem model . get instance ( ) . get client ( 0 ) ;  <NL> visual feedback = ts problem model . get instance ( ) . is visual feedback ( ) ;  <NL> measure execution = ts problem model . get instance ( ) . is execution measure ( ) ;  <NL> open nodes = new linked list ( ) ;  <NL> closed nodes = new linked list ( ) ;  <NL> shortest path = max _ path _ length ;  <NL>  <NL> if ( measure execution ) {  <NL> execution trace = execution trace . get instance ( ) ;  <NL>  }  <NL>  }  COM: <s> creates an instance of this algorithm </s>