TDAT: protected void create module objects ( ) {  <NL>  <NL> object obj = null ;  <NL>  <NL> for ( string current : module classes ) {  <NL>  <NL> if ( current ! = null & & ! current . equals ( " " ) ) {  <NL>  <NL> try {  <NL> class < ? > [ ] classargs = { editor . class } ;  <NL> object [ ] args = { editor } ;  <NL>  <NL>  / / creates instances of each static module <NL> obj = class . for name ( current ) . get constructor ( classargs ) . new instance ( args ) ;  <NL>  <NL>  / / if it is a shape module , it is added to the list of the shape module <NL> if ( obj instanceof abstract shape ) {  <NL>  <NL> shape modules . add ( ( abstract shape ) obj ) ;  <NL>  }  <NL>  <NL> modules . add ( ( module ) obj ) ;  <NL>  } catch ( exception ex ) { ex . print stack trace ( ) ; }  <NL>  }  <NL>  }  <NL>  }  COM: <s> creates the objects corresponding to the modules </s>