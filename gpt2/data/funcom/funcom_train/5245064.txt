TDAT: public boolean import annots ( pred p ) {  <NL> boolean imported = false ;  <NL> if ( p . has annot ( ) ) {  <NL> iterator < term > i = p . get annots ( ) . iterator ( ) ;  <NL> while ( i . has next ( ) ) {  <NL> term t = i . next ( ) ;  <NL>  / / p will only contain the annots actually added ( for event )  <NL> if ( ! has annot ( t ) ) {  <NL> add annot ( ( term ) t . clone ( ) ) ;  <NL> imported = true ;  <NL>  } else {  <NL>  / / remove what is not new from p <NL> i . remove ( ) ;  <NL>  }  <NL>  }  <NL>  }  <NL> return imported ;  <NL>  }  COM: <s> import annotations from another predicate i p i </s>