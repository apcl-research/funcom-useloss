TDAT: protected void fire component changed ( component model cm , int what ) {  <NL> iterator it = listeners . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> component change listener listener =  <NL>  ( component change listener ) it . next ( ) ;  <NL>  / * new thread ( ) {  <NL> component change listener listener ;  <NL> int what ;  <NL> component model cm ;  <NL> public thread set l ( component change listener l ,  <NL> int what , component model cm ) {  <NL> this . what = what ;  <NL> listener = l ;  <NL> this . cm = cm ;  <NL> return this ;  <NL>  }  <NL> public void run ( ) {  <NL>  * / try {  <NL> listener . component changed (  <NL> cm , what ) ;  <NL>  } catch ( invalid what exception iwe ) {  <NL> system . out . println ( " this did not happen ? " ) ;  <NL>  }  <NL>  / * }  <NL>  } . set l ( listener , what , cm ) . start ( ) ; * /  <NL>  }  <NL>  }  COM: <s> tell listeners that weve had a change </s>