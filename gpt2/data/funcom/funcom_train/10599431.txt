TDAT: public void put into pool ( final object poolable ) {  <NL> this . entering pool ( poolable ) ;  <NL>  <NL> synchronized ( this . semaphore ) {  <NL> if ( this . size < = this . max ) {  <NL> this . ready . add last ( poolable ) ;  <NL> this . ready size + + ;  <NL>  } else {  <NL>  / / more poolables were created than can be held in the pool , so remove .  <NL> this . permanently remove poolable ( poolable ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> returns a poolable to the pool </s>