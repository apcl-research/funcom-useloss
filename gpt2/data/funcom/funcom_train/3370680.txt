TDAT: private object get archivable expanded state ( ) {  <NL> tree model model = get model ( ) ;  <NL>  <NL> if ( model ! = null ) {  <NL> enumeration paths = expanded state . keys ( ) ;  <NL>  <NL> if ( paths ! = null ) {  <NL> vector state = new vector ( ) ;  <NL>  <NL> while ( paths . has more elements ( ) ) {  <NL> tree path path = ( tree path ) paths . next element ( ) ;  <NL> object archive path ;  <NL>  <NL> try {  <NL> archive path = get model indexs for path ( path ) ;  <NL>  } catch ( error error ) {  <NL> archive path = null ;  <NL>  }  <NL> if ( archive path ! = null ) {  <NL> state . add element ( archive path ) ;  <NL> state . add element ( expanded state . get ( path ) ) ;  <NL>  }  <NL>  }  <NL> return state ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> returns an object that can be archived indicating what nodes are </s>