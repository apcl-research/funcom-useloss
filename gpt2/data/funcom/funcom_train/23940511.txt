TDAT: private vector position ( disk d , double dt ) {  <NL> double translate = dt * ( d . momentum . abs ( ) / d . get mass ( ) )  <NL>  / this . terrain . sphere . rad ;  <NL>  <NL> vector direction = new vector ( d . momentum ) . mul ( d . position ) ;  <NL> vector axis = vector . vec ( d . position . c , direction ) ; / / axis = = 0 ? - >  <NL>  / / matrix . rot ( . . . ) = 1 !  <NL>  <NL> return vector . mul ( d . position . c , matrix . rot ( axis , translate ) ) ;  <NL>  }  COM: <s> calculates the anticipated position of a disk assuming that there is no </s>