TDAT: private void export ( ) {  <NL> production [ ] p = editing grammar model . get productions ( ) ;  <NL>  / * system . out . println ( " printtitting " ) ;  <NL> for ( int i = 0 ; i < p . length ; i + + )  <NL>  {  <NL> system . out . println ( p [ i ] ) ;  <NL>  } * /  <NL> try {  <NL> p = cnf converter . convert ( p ) ;  <NL>  } catch ( unsupported operation exception e ) {  <NL> j option pane . show message dialog ( this , e . get message ( ) , " export error " ,  <NL> j option pane . error _ message ) ;  <NL> return ;  <NL>  }  <NL> try {  <NL> grammar g = ( grammar ) grammar . get class ( ) . new instance ( ) ;  <NL> g . add productions ( p ) ;  <NL> g . set start variable ( grammar . get start variable ( ) ) ;  <NL> frame factory . create frame ( g ) ;  <NL>  } catch ( throwable e ) {  <NL> system . err . println ( e ) ;  <NL>  }  <NL>  }  COM: <s> takes the grammar and attempts to export it </s>