TDAT: public polynomial mod ( polynomial that ) {  <NL> big integer da = this . degree ( ) ;  <NL> big integer db = that . degree ( ) ;  <NL> polynomial register = new polynomial ( this . degrees ) ;  <NL> for ( big integer i = da . subtract ( db ) ; i . compare to ( big integer . zero ) > = 0 ; i = i . subtract ( big integer . one ) ) {  <NL> if ( register . has degree ( i . add ( db ) ) ) {  <NL> polynomial shifted = that . shift left ( i ) ;  <NL> register = register . xor ( shifted ) ;  <NL>  }  <NL>  }  <NL> return register ;  <NL>  }  COM: <s> computes this mod that in gf 2 k using synthetic division </s>