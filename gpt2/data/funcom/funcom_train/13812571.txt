TDAT: public string to string ( ) {  <NL> string retval = " " ;  <NL> enumeration e ;  <NL> e = originating rules . get rules ( ) ;  <NL> while ( e . has more elements ( ) ) {  <NL> precedence pair pp = ( precedence pair ) e . next element ( ) ;  <NL> retval = retval + ( " originating| " + pp . to string ( ) + " \n " ) ;  <NL>  }  <NL> e = terminating rules . get rules ( ) ;  <NL> while ( e . has more elements ( ) ) {  <NL> precedence pair pp = ( precedence pair ) e . next element ( ) ;  <NL> retval = retval + ( " terminating| " + pp . to string ( ) + " \n " ) ;  <NL>  }  <NL> return retval ;  <NL>  }  COM: <s> represent a precedence object as a string by enumerating in text its constituent </s>