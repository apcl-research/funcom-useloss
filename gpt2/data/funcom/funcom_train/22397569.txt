TDAT: public void invoke ( method invocation mi ) {  <NL> for ( int i = 0 ; i < get number of expectations ( ) ; i + + ) {  <NL> get expectation ( i ) . invoke ( mi ) ;  <NL> if ( mi . is evaluated ( ) ) {  <NL> return ;  <NL>  }  <NL> if ( this . is strict ) {  <NL> try {  <NL> get expectation ( i ) . verify ( ) ;  <NL>  } catch ( hammock exception he ) {  <NL> set verification exception ( new hammock exception ( mi <NL>  . get method ( ) , method _ invoked _ out _ of _ sequence ) ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  <NL> this . set verification exception ( new hammock exception ( mi . get method ( ) ,  <NL> method _ cannot _ be _ evaluated ) ) ;  <NL>  }  COM: <s> called by a test double when a method is invoked </s>