TDAT: public void visit ( relation predicate pred ) {  <NL> if ( visited ( pred ) ) return ;  <NL> pred . relation ( ) . accept ( this ) ;  <NL> if ( pred . name ( ) = = relation predicate . name . function ) {  <NL> final relation predicate . function fp = ( relation predicate . function ) pred ;  <NL> fp . domain ( ) . accept ( this ) ;  <NL> fp . range ( ) . accept ( this ) ;  <NL>  } else if ( pred . name ( ) = = relation predicate . name . total _ ordering ) {  <NL> final relation predicate . total ordering tp = ( relation predicate . total ordering ) pred ;  <NL> tp . ordered ( ) . accept ( this ) ;  <NL> tp . first ( ) . accept ( this ) ;  <NL> tp . last ( ) . accept ( this ) ;  <NL>  }  <NL>  }  COM: <s> visits the children of the predicate if </s>