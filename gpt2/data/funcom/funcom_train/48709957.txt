TDAT: public graph transpose ( graph graph ) {  <NL> if ( graph . get type ( ) = = graph . type . directed ) {  <NL> graph transposed graph = new graph ( graph . type . directed ) ;  <NL>  <NL> vertex [ ] [ ] adjacency list = graph . get adjacency list ( ) ;  <NL>  <NL> for ( vertex [ ] vertices : adjacency list ) {  <NL> if ( vertices . length > 0 ) {  <NL> vertex from = vertices [ 0 ] ;  <NL> for ( int i = 1 ; i < vertices . length ; i + + ) {  <NL> vertex to = vertices [ i ] ;  <NL> transposed graph . add edge ( to , from ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  <NL> return transposed graph ;  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> returns a new graph which is the transpose of the given one </s>