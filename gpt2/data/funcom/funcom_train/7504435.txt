TDAT: private void write dictionary file ( list < huffman data > datas ) {  <NL> buffered writer out = null ;  <NL> try {  <NL> out = file util . get writer ( configuration . get output dictionary file name ( ) ) ;  <NL> for ( huffman data data : datas ) {  <NL> string value ;  <NL>  <NL> switch ( data . get value ( ) ) {  <NL> case ' \n ' :  <NL> value = " \\n " ;  <NL> break ;  <NL> case ' \r ' :  <NL> value = " \\r " ;  <NL> break ;  <NL> case ' \t ' :  <NL> value = " \\t " ;  <NL> break ;  <NL> default :  <NL> value = data . get value ( ) + " " ;  <NL>  }  <NL>  <NL> string line = value + " : " + data . get index ( ) + ' \n ' ;  <NL> out . write ( line ) ;  <NL>  }  <NL>  } catch ( io exception e ) {  <NL> e . print stack trace ( ) ;  <NL>  } finally {  <NL> file util . close ( out ) ;  <NL>  }  <NL>  }  COM: <s> write dictionary file </s>