TDAT: private void process incoming message ( ) {  <NL> message msg ;  <NL> synchronized ( messages ) {  <NL> msg = messages . remove ( 0 ) ;  <NL>  }  <NL> string target = null ;  <NL> int type = 0 ;  <NL> int mask = 0 ;  <NL> try {  <NL> target = msg . get target ( ) ;  <NL> type = msg . get type ( ) ;  <NL> if ( target . equals ( message types . sendtoall ) ) {  <NL> for ( notifiable entity entry : listeners ) {  <NL> mask = entry . get sense ( ) ;  <NL> if ( ( mask & type ) = = type ) { entry . update ( msg ) ; }  <NL>  }  <NL>  } else {  <NL> for ( notifiable entity entry : listeners ) {  <NL> mask = entry . get sense ( ) ;  <NL> if ( entry . get id ( ) . equals ( target ) & & ( mask & type ) = = type ) {  <NL> entry . update ( msg ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  } catch ( remote exception e ) {  <NL> e . print stack trace ( ) ;  <NL>  }  <NL>  }  COM: <s> process the incoming message remove the first message from </s>