TDAT: public object decode ( protocol state state , io buffer in ) throws protocol exception {  <NL> int start = in . position ( ) ;  <NL> log . debug ( " start : { } " , start ) ;  <NL> try {  <NL> final rtmp rtmp = ( rtmp ) state ;  <NL> switch ( rtmp . get state ( ) ) {  <NL> case rtmp . state _ connected :  <NL> return decode packet ( rtmp , in ) ;  <NL> case rtmp . state _ connect :  <NL> case rtmp . state _ handshake :  <NL> return decode handshake ( rtmp , in ) ;  <NL> case rtmp . state _ error :  <NL>  / / attempt to correct error <NL> default :  <NL> return null ;  <NL>  }  <NL>  } catch ( protocol exception pe ) {  <NL>  / / raise to caller unmodified <NL> throw pe ;  <NL>  } catch ( runtime exception e ) {  <NL> throw new protocol exception ( " error during decoding " , e ) ;  <NL>  }  <NL>  }  COM: <s> decodes the buffer data </s>