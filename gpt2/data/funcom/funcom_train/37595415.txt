TDAT: public type meet ( iterable < ? extends type > ts ) {  <NL> set < ? extends type > to meet = collect util . as set ( ts ) ;  <NL> switch ( to meet . size ( ) ) {  <NL> case 0 : return top ;  <NL> case 1 : return iter util . first ( to meet ) ;  <NL> default : return new intersection type ( iter util . snapshot ( to meet ) ) ;  <NL>  }  <NL>  }  COM: <s> simple meet implementation construct an intersection if there are more than two </s>