TDAT: public void test2 ( ) throws interrupted exception , execution exception {  <NL>  <NL> final latch latch = new latch ( ) ;  <NL>  <NL> final callable < ? > r = new callable < void > ( ) {  <NL>  <NL> public void call ( ) throws exception {  <NL>  <NL> latch . inc ( ) ;  <NL>  <NL> if ( ! latch . await ( 100 , time unit . milliseconds ) )  <NL> throw new timeout exception ( ) ;  <NL>  <NL> return null ;  <NL>  <NL>  }  <NL>  <NL>  } ;  <NL>  <NL> final executor service service = executors <NL>  . new single thread executor ( daemon thread factory <NL>  . default thread factory ( ) ) ;  <NL>  <NL> try {  <NL>  <NL> final future < ? > future = service . submit ( r ) ;  <NL>  <NL> thread . sleep ( 50 ) ;  <NL>  <NL> latch . dec ( ) ;  <NL>  <NL> future . get ( ) ;  <NL>  <NL>  } finally {  <NL>  <NL> service . shutdown now ( ) ;  <NL>  <NL>  }  <NL>  <NL>  }  COM: <s> basic tests releasing blocked threads </s>