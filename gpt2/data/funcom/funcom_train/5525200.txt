TDAT: public string expand ( string s )  <NL>  { try <NL>  { string buffer b = new string buffer ( ) ;  <NL> string tokenizer t = new string tokenizer ( s , " \\ ( ) " , true ) ;  <NL> while ( t . has more tokens ( ) )  <NL>  { string a = t . next token ( ) ;  <NL> if ( a . equals ( " ( " ) )  <NL>  { string b = t . next token ( ) ;  <NL> string c = t . next token ( ) ;  <NL> if ( ! c . equals ( " ) " ) ) return null ;  <NL> position range p =  <NL>  ( position range ) e . element at ( integer . parse int ( b ) ) ;  <NL> b . append ( new string ( a , p . start ( ) , p . end ( ) - p . start ( ) ) ) ;  <NL>  }  <NL> else if ( a . equals ( " \\ " ) )  <NL>  { a = t . next token ( ) ;  <NL> b . append ( a ) ;  <NL>  }  <NL> else b . append ( a ) ;  <NL>  }  <NL> return b . to string ( ) ;  <NL>  }  <NL> catch ( exception e )  <NL>  { return null ;  <NL>  }  <NL>  }  COM: <s> expand the replacement string and change 1 2 </s>