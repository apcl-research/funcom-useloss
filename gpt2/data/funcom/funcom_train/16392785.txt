TDAT: public list get root ( ) {  <NL> iterator iterator ;  <NL> list root vertices ;  <NL>  <NL> root vertices = new array list ( ) ;  <NL>  <NL> iterator = m _ graph . get vertices iterator ( ) ;  <NL> while ( iterator . has next ( ) ) {  <NL> vertex v = ( vertex ) iterator . next ( ) ;  <NL> if ( m _ graph . get incoming edges ( v ) . size ( ) = = 0 ) {  <NL> root vertices . add ( v ) ;  <NL>  }  <NL>  }  <NL>  <NL> return collections . unmodifiable list ( root vertices ) ;  <NL>  }  COM: <s> implementation for directed acyclic graph </s>