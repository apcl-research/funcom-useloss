TDAT: public static stm to stm ( list < stm > list ) {  <NL> if ( list = = null ) return null ;  <NL> int size = list . size ( ) ;  <NL> if ( size = = 0 ) { return null ; }  <NL> else if ( size = = 1 ) { return list . get ( 0 ) ; }  <NL> else { / / divide and conquer <NL> stm hce = list . get ( 0 ) ;  <NL> tree factory tf = hce . get factory ( ) ;  <NL> return new seq ( tf , hce ,  <NL> to stm ( list . sub list ( 0 , size / 2 ) ) ,  <NL> to stm ( list . sub list ( size / 2 , list . size ( ) ) ) ) ;  <NL>  }  <NL>  }  COM: <s> returns a tree based representation of code list code </s>