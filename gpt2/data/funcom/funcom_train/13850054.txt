TDAT: public void run ( ) {  <NL> try {  <NL> to monitor tm ;  <NL> for ( ; ; ) {  <NL> synchronized ( this ) {  <NL>  <NL>  / / sleep if nothing is pending .  <NL> while ( pending . is empty ( ) & & ! die )  <NL> wait ( ) ;  <NL>  <NL> if ( die )  <NL> return ;  <NL>  <NL> tm = ( to monitor ) pending . remove first ( ) ;  <NL>  }  <NL>  <NL> logger . log ( level . finer , " creating monitor tasks for { 0 } " ,  <NL> tm . query ) ;  <NL>  <NL> iterator it = tm . txns . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> txn txn = ( txn ) it . next ( ) ;  <NL> txn monitor task task = task for ( txn ) ;  <NL> task . add ( tm . query ) ;  <NL>  }  <NL>  }  <NL>  } catch ( interrupted exception e ) {  <NL> return ;  <NL>  }  <NL>  }  COM: <s> take pending monitor requests off the queue creating the </s>