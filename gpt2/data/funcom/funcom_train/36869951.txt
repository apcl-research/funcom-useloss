TDAT: public void remove neighbor ( node node ) throws interrupted exception <NL>  {  <NL> boolean root access = true ;  <NL>  <NL> if ( this . equals ( node . get parent ( root access ) ) )  <NL>  {  <NL> node list nei = node . get neighbours ( root access ) ;  <NL> this . get up pointers ( root access ) . add all ( nei ) ;  <NL> this . get up pointers ( root access ) . remove ( this ) ;  <NL> this . set state ( up state . get state ( ) ) ;  <NL>  }  <NL> else <NL>  {  <NL> this . get down pointers ( root access ) . add ( node . get parent ( root access ) ) ;  <NL> this . set state ( down state . get state ( ) ) ;  <NL>  <NL>  }  <NL>  <NL> this . get neighbours ( root access ) . remove ( node ) ;  <NL>  <NL>  <NL> renew state ( ) ;  <NL>  <NL>  }  COM: <s> removes the node from this list of neighbours </s>