TDAT: protected void gen lookahead set for alt ( alternative alt ) {  <NL> if ( doing lex rules & & alt . cache [ 1 ] . contains epsilon ( ) ) {  <NL> println ( " matches all " ) ;  <NL> return ;  <NL>  }  <NL> int depth = alt . lookahead depth ;  <NL> if ( depth = = grammar analyzer . nondeterministic ) {  <NL>  / / if the decision is nondeterministic , do the best we can : ll ( k )  <NL>  / / any predicates that are around will be generated later .  <NL> depth = grammar . maxk ;  <NL>  }  <NL> for ( int i = 1 ; i < = depth ; i + + )  <NL>  {  <NL> lookahead lookahead = alt . cache [ i ] ;  <NL> print set ( depth , i , lookahead ) ;  <NL>  }  <NL>  }  COM: <s> generate the lookahead set for an alternate </s>