TDAT: public item gen expr ( tree tree , type pt ) {  <NL> type prev pt = this . pt ;  <NL> try {  <NL> if ( tree . type . const value ! = null ) {  <NL> check string constant ( tree . pos , tree . type . const value ) ;  <NL> result = items . make immediate item ( tree . type ,  <NL> tree . type . const value ) ;  <NL>  } else {  <NL> this . pt = pt ;  <NL> tree . accept ( this ) ;  <NL>  }  <NL> return result . coerce ( pt ) ;  <NL>  } catch ( completion failure ex ) {  <NL> chk . completion error ( tree . pos , ex ) ;  <NL> return items . make stack item ( pt ) ;  <NL>  } finally {  <NL> this . pt = prev pt ;  <NL>  }  <NL>  }  COM: <s> visitor method generate code for an expression catching and reporting </s>