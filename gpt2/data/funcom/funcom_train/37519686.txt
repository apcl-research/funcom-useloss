TDAT: public void visit char literal ( / * @ non _ null @ * / j char literal self ) {  <NL> character ch value = ( character ) self . get value ( ) ;  <NL> char value ;  <NL> if ( ch value ! = null ) {  <NL> value = ch value . char value ( ) ;  <NL>  } else {  <NL> value = self . image ( ) . char at ( 0 ) ; / / ! ! ! false <NL>  }  <NL> switch ( value ) {  <NL> case ' \b ' :  <NL> print ( " ' \\b ' " ) ;  <NL> break ;  <NL> case ' \r ' :  <NL> print ( " ' \\r ' " ) ;  <NL> break ;  <NL> case ' \t ' :  <NL> print ( " ' \\t ' " ) ;  <NL> break ;  <NL> case ' \n ' :  <NL> print ( " ' \\n ' " ) ;  <NL> break ;  <NL> case ' \f ' :  <NL> print ( " ' \\f ' " ) ;  <NL> break ;  <NL> case ' \\ ' :  <NL> print ( " ' \\\\ ' " ) ;  <NL> break ;  <NL> case ' \ ' ' :  <NL> print ( " ' \\ ' ' " ) ;  <NL> break ;  <NL> case ' \ " ' :  <NL> print ( " ' \\\ " ' " ) ;  <NL> break ;  <NL> default :  <NL> print ( " ' " + value + " ' " ) ;  <NL>  }  <NL>  }  COM: <s> prints a character literal </s>