TDAT: public void undo ( ) {  <NL> try {  <NL>  / / undo the latest step first :  <NL> iterator < step > iterator = _ steps . descending iterator ( ) ;  <NL> while ( iterator . has next ( ) ) {  <NL> step step = iterator . next ( ) ;  <NL>  <NL> if ( step . _ type = = step . type . insert ) {  <NL>  _ annotations . remove last occurrence ( step . _ annotation ) ;  <NL>  }  <NL> else if ( step . _ type = = step . type . remove ) {  <NL>  _ annotations . add ( step . _ index , step . _ annotation ) ;  <NL>  }  <NL>  }  <NL>  } catch ( index out of bounds exception e ) {  <NL> throw new illegal state exception ( ) ;  <NL>  }  <NL>  }  COM: <s> undoes this action </s>