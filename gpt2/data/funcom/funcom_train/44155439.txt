TDAT: private void update ( ) {  <NL> assert thread . holds lock ( s _ dirties monitor ) ;  <NL> switch ( m _ currency ) {  <NL> case dirty :  <NL> for ( observable value < ? > o : m _ dependencies ) {  <NL> o . unsubscribe ( this ) ;  <NL>  }  <NL> m _ dependencies = new array list < observable value < ? > > ( ) ;  <NL>  <NL> live value < ? > previously updating = s _ updating ;  <NL> m _ currency = currency . updating ;  <NL> s _ updating = this ;  <NL>  <NL> t v = is ( ) ;  <NL>  <NL> m _ currency = currency . current ;  <NL> s _ updating = previously updating ;  <NL>  <NL> set ( v ) ;  <NL> break ;  <NL> case updating :  <NL> assert false ;  <NL> break ;  <NL> case current :  <NL> break ;  <NL> default :  <NL> assert false ;  <NL>  }  <NL>  }  COM: <s> updates the cached result </s>