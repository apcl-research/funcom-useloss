TDAT: private void combine ( node u , node v ) {  <NL> if ( v . is freeze work l ( ) ) {  <NL> freeze _ worklist . remove ( v ) ;  <NL>  } else {  <NL> spill _ worklist . remove ( v ) ;  <NL>  }  <NL> coalesced _ nodes . add ( v ) ;  <NL> v . alias = u ;  <NL>  <NL> enable moves ( v ) ;  <NL> u . moves . append ( v . moves ) ;  <NL>  <NL> for ( node iter adj = adjacent ( v ) ; adj . has next ( ) ; ) {  <NL> node t = adj . next ( ) ;  <NL> add edge ( t , u ) ;  <NL> decrement degree ( t , v ) ;  <NL>  }  <NL>  <NL> if ( u . degree > = k & & u . is freeze work l ( ) ) {  <NL> freeze _ worklist . remove ( u ) ;  <NL> spill _ worklist . add ( u ) ;  <NL>  }  <NL>  }  COM: <s> modifies freeze worklist spill worklist </s>