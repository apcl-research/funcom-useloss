TDAT: private void parse actions ( string actions ) {  <NL> mask = 0 ;  <NL>  <NL> if ( actions ! = null ) {  <NL> string tokenizer tokenizer = new string tokenizer ( actions , " , \t " ) ;  <NL> while ( tokenizer . has more tokens ( ) ) {  <NL> string token = tokenizer . next token ( ) ;  <NL> if ( token . equals ( read _ action ) )  <NL> mask | = read ;  <NL> else if ( token . equals ( write _ action ) )  <NL> mask | = write ;  <NL> else if ( token . equals ( execute _ action ) )  <NL> mask | = execute ;  <NL> else if ( token . equals ( create _ action ) )  <NL> mask | = create ;  <NL> else if ( token . equals ( delete _ action ) )  <NL> mask | = delete ;  <NL> else if ( token . equals ( deploy _ action ) )  <NL> mask | = deploy ;  <NL> else if ( token . equals ( confirm _ action ) )  <NL> mask | = confirm ;  <NL> else <NL> throw new illegal argument exception ( " unknown action : " + token ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> p parses the actions string </s>