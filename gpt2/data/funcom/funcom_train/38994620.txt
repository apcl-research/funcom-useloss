TDAT: public boolean exists directed path ( t node1 , t node2 ) {  <NL> if ( ! this . nodes . contains ( node1 ) || ! this . nodes . contains ( node2 ) )  <NL> throw new illegal argument exception ( " the nodes are not in this graph . " ) ;  <NL> if ( node1 = = node2 )  <NL> return true ;  <NL>  / / we perform a dfs .  <NL> stack < t > stack = new stack < t > ( ) ;  <NL> stack . add all ( this . get children ( node1 ) ) ;  <NL> while ( ! stack . is empty ( ) ) {  <NL> t node = stack . pop ( ) ;  <NL> if ( node = = node2 )  <NL> return true ;  <NL> stack . add all ( this . get children ( node ) ) ;  <NL>  }  <NL> return false ;  <NL>  }  COM: <s> checks whether there is a directed path from node1 to node2 </s>