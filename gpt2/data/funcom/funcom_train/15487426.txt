TDAT: public common ast update reg ex tree ( ) {  <NL> string reader sr = new string reader ( " ( " + this . get regular expression ( ) + " ) " ) ;  <NL> expression lexer lexer = new	expression lexer ( sr ) ;  <NL> expression parser parser = new expression parser ( lexer ) ;  <NL> common ast new tree = null ;  <NL>  <NL> try {  <NL> parser . regular _ expression ( ) ;  <NL> new tree = ( common ast ) parser . get ast ( ) ;  <NL>  } catch ( exception e ) {  <NL> system . out . println ( " error building tree from reg ex : " + e ) ;  <NL>  }  <NL>  <NL> if ( new tree ! = null )  <NL> this . reg ex tree = new tree ;  <NL>  <NL> return reg ex tree ;  <NL>  }  COM: <s> this method creates the reg ex tree from the grammar </s>