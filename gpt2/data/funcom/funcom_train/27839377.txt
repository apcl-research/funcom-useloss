TDAT: protected void print string ( string s , string buffer buffer ) {  <NL>  <NL> if ( this . need normalize ) {  <NL> int len = ( s ! = null ) ? s . length ( ) : 0 ;  <NL> for ( int i = 0 ; i < len ; i + + ) {  <NL> char ch = s . char at ( i ) ;  <NL> switch ( ch ) {  <NL> case ' < ' : {  <NL> buffer . append ( " & lt ; " ) ;  <NL> break ;  <NL>  }  <NL> case ' > ' : {  <NL> buffer . append ( " & gt ; " ) ;  <NL> break ;  <NL>  }  <NL> case ' & ' : {  <NL> buffer . append ( " & amp ; " ) ;  <NL> break ;  <NL>  }  <NL> case ' " ' :  <NL> buffer . append ( " & quot ; " ) ;  <NL> break ;  <NL> case ' \r ' :  <NL> case ' \n ' :  <NL> default : {  <NL> buffer . append ( ch ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  } else {  <NL> buffer . append ( s ) ;  <NL>  }  <NL>  }  COM: <s> normalizes the given string </s>