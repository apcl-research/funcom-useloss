TDAT: private int compute state mask ( string modifiers ) {  <NL> if ( modifiers = = null )  <NL> return - 1 ;  <NL>  <NL> if ( modifiers . length ( ) = = 0 )  <NL> return swt . none ;  <NL>  <NL> int state mask = 0 ;  <NL> string tokenizer modifier tokenizer = new string tokenizer ( modifiers , " , ; . : + - * " ) ; / / $ non - nls - 1 $  <NL> while ( modifier tokenizer . has more tokens ( ) ) {  <NL> int modifier = action . find modifier ( modifier tokenizer . next token ( ) ) ;  <NL> if ( modifier = = 0 || ( state mask & modifier ) = = modifier )  <NL> return - 1 ;  <NL> state mask = state mask | modifier ;  <NL>  }  <NL> return state mask ;  <NL>  }  COM: <s> computes the state mask for the given modifier string </s>