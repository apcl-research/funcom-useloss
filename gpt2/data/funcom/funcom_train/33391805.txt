TDAT: private throwable extract cause ( throwable throwable ) {  <NL> for ( iterator iter = this . extractor map . entry set ( ) . iterator ( ) ; iter . has next ( ) ; ) {  <NL> map . entry entry = ( map . entry ) iter . next ( ) ;  <NL>  <NL> class throwable type = ( class ) entry . get key ( ) ;  <NL> if ( throwable type . is instance ( throwable ) ) {  <NL> throwable cause extractor extractor = ( throwable cause extractor ) entry . get value ( ) ;  <NL> return extractor . extract cause ( throwable ) ;  <NL>  }  <NL>  }  <NL>  <NL> return null ;  <NL>  }  COM: <s> extracts the cause of the given throwable using an appropriate extractor </s>