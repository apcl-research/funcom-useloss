TDAT: public alloy expr visit forall pred ( forall pred all pred ) {  <NL> pair < list < expr var > , alloy expr > decls = process quant pred decls ( all pred ) ;  <NL> alloy expr pred = process quant pred ( all pred , false , decls . get second ( ) ) ;  <NL> return pred . for all ( ( decls . get first ( ) ) ) ;  <NL>  }  COM: <s> uses visit to recurisvely translate variables and predicates </s>