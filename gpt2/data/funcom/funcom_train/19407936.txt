TDAT: public set value difference ( set value v ) {  <NL> if ( ! v . elem type ( ) . is subtype of ( elem type ( ) ) )  <NL> throw new illegal argument exception ( " type mismatch " ) ;  <NL>  <NL> if ( v . is empty ( ) )  <NL> return this ;  <NL>  <NL> set value res = new set value ( elem type ( ) ) ;  <NL>  <NL>  / / add elements of this set to result <NL> iterator it = f elements . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> value elem = ( value ) it . next ( ) ;  <NL> if ( ! v . includes ( elem ) )  <NL> res . f elements . add ( elem ) ;  <NL>  }  <NL> return res ;  <NL>  }  COM: <s> return a new set which is the difference of this and v </s>