TDAT: public void execute ( final instruction context env ) throws j basic exception {  <NL>  <NL> final value value2 = env . pop ( ) ;  <NL> value value1 = env . pop for update ( ) ;  <NL>  <NL> expression . coerce types ( value1 , value2 ) ;  <NL> switch ( value1 . get type ( ) ) {  <NL>  <NL> case value . decimal :  <NL> big decimal d1 = value1 . get decimal ( ) ;  <NL> big decimal d2 = value2 . get decimal ( ) ;  <NL>  <NL> value1 . set decimal ( d1 . remainder ( d2 ) ) ;  <NL> break ;  <NL>  <NL> case value . double :  <NL> value1 . set double ( value1 . get double ( ) % value2 . get double ( ) ) ;  <NL> break ;  <NL>  <NL> case value . integer :  <NL> value1 . set integer ( value1 . get integer ( ) % value2 . get integer ( ) ) ;  <NL> break ;  <NL>  <NL> default :  <NL> throw new j basic exception ( status . typemismatch ) ;  <NL>  <NL>  }  <NL> env . push ( value1 ) ;  <NL>  }  COM: <s> divide top two items on stack push remainder modulo value back on the </s>