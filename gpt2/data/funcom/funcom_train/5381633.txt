TDAT: private thread resolution candidate ( thread [ ] candidates ) {  <NL>  / / first look for a candidate that has no scheduling rules <NL> for ( int i = 0 ; i < candidates . length ; i + + ) {  <NL> if ( ! owns rule locks ( candidates [ i ] ) )  <NL> return candidates [ i ] ;  <NL>  }  <NL>  / / next look for any candidate with a real lock ( a lock that can be suspended )  <NL> for ( int i = 0 ; i < candidates . length ; i + + ) {  <NL> if ( owns real locks ( candidates [ i ] ) )  <NL> return candidates [ i ] ;  <NL>  }  <NL>  / / unnecessary , return the first entry in the array by default <NL> return candidates [ 0 ] ;  <NL>  }  COM: <s> get the thread whose locks can be suspended </s>