TDAT: protected void visit ( i visitor simple < virtual directory visitor context > visitor , i virtual artifact artifact ) {  <NL> if ( artifact ! = this . visitable ) visitor . visit ( this . set visited ( artifact ) ) ;  <NL>  <NL> if ( this . aborted || this . skip ) return ;  <NL>  <NL> if ( artifact instanceof i virtual directory ) {  <NL> iterator < i virtual artifact > artifacts = ( ( i virtual directory ) artifact ) . get artifacts ( ) ;  <NL> while ( artifacts . has next ( ) ) {  <NL> this . visit ( visitor , artifacts . next ( ) ) ;  <NL> if ( this . aborted ) break ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> this will call itself recursively for all children of </s>