TDAT: private void close ( boolean check abort ) throws io exception {  <NL> synchronized ( out lock ) {  <NL> synchronized ( state lock ) {  <NL> if ( check abort & & aborted ) {  <NL> throw new io exception ( " request aborted " ) ;  <NL>  } else if ( out state = = closed ) {  <NL> return ;  <NL>  } else if ( out state = = invalid ) {  <NL> throw out exception ;  <NL>  }  <NL>  }  <NL> try {  <NL> if ( out state = = unused ) {  <NL> start output ( ) ;  <NL>  }  <NL> end output ( ) ;  <NL>  } catch ( throwable th ) {  <NL> invalidate ( th ) ;  <NL>  }  <NL> synchronized ( state lock ) {  <NL> out state = closed ;  <NL> if ( in state > = eof ) {  <NL> done ( in state = = invalid ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> attempts to close stream </s>