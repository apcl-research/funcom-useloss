TDAT: private triple adopt ( triple triple ) {  <NL> node subject = triple . get subject ( ) ;  <NL> boolean modified = false ;  <NL> if ( subject instanceof functionally grounded node ) {  <NL> subject = adopt ( ( functionally grounded node ) subject ) ;  <NL> modified = true ;  <NL>  }  <NL> node object = triple . get object ( ) ;  <NL> if ( object instanceof functionally grounded node ) {  <NL> object = adopt ( ( functionally grounded node ) object ) ;  <NL> modified = true ;  <NL>  }  <NL> if ( modified ) {  <NL> return new triple impl ( subject , triple . get predicate ( ) , object ) ;  <NL>  } else {  <NL> return triple ;  <NL>  }  <NL>  }  COM: <s> adoptd subject and or object if functionally grounded </s>