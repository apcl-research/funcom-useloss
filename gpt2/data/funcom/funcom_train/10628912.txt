TDAT: private long value exact ( int bit length of type ) {  <NL> big integer big integer = to big integer exact ( ) ;  <NL>  <NL> if ( big integer . bit length ( ) < bit length of type ) {  <NL>  / / it fits in the primitive type <NL> return big integer . long value ( ) ;  <NL>  }  <NL>  / / math . 08 = rounding necessary <NL> throw new arithmetic exception ( messages . get string ( " math . 08 " ) ) ; / / $ non - nls - 1 $  <NL>  }  COM: <s> if code int val code has a fractional part throws an exception </s>