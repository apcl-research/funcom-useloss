TDAT: public object invoke ( method invocation invocation ) throws throwable {  <NL> contract set contract set = build contract set for ( invocation ) ;  <NL> evaluator . evaluate ( contract set . get preconditions ( ) ) ;  <NL> object return value = invocation . proceed ( ) ;  <NL> evaluator . evaluate ( contract set . get invariants ( ) ) ;  <NL> for ( contract descriptor descriptor : contract set . get postconditions ( ) )  <NL> descriptor . get context ( ) . put ( context constants . return _ value _ alias , return value ) ;  <NL> evaluator . evaluate ( contract set . get postconditions ( ) ) ;  <NL> return return value ;  <NL>  }  COM: <s> here the intercept is applied delegating contract evaluation to the </s>