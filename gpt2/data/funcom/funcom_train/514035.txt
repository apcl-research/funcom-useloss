TDAT: public object new instance ( class pv class ) {  <NL> interceptor handler . fire before new instance ( pv class ) ;  <NL> object lv proxy object = null ;  <NL> try {  <NL> lv proxy object = proxy . new instance ( pv class ) ;  <NL>  } catch ( exception e ) {  <NL> interceptor handler . fire on error ( e ) ;  <NL> throw new invocation exception ( " error in proxy decorator . new instance with proxy : " + proxy <NL>  + " ( " + pv class + " ) " + e , e ) ;  <NL>  }  <NL> finally {  <NL> interceptor handler . fire after new instance ( pv class , lv proxy object ) ;  <NL>  }  <NL> return lv proxy object ;  <NL>  }  COM: <s> intercept the method and delegate method to proxy </s>