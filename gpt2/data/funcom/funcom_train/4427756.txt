TDAT: private sequential pattern find loop pattern ( sequential pattern old pattern ) {  <NL> iterator < execution pattern > it = old pattern . iterator ( ) ;  <NL> if ( it . has next ( ) ) {  <NL> sequential pattern new pattern = new sequential pattern ( ) ;  <NL> execution pattern previous = it . next ( ) ;  <NL> int iterations = 1 ;  <NL>  <NL> while ( it . has next ( ) ) {  <NL> execution pattern next = it . next ( ) ;  <NL> if ( previous . equals ( next ) ) {  <NL> iterations + + ;  <NL>  } else {  <NL> add pattern ( new pattern , iterations , previous ) ;  <NL> previous = next ;  <NL> iterations = 1 ;  <NL>  }  <NL>  }  <NL>  <NL> if ( iterations > 0 ) {  <NL> add pattern ( new pattern , iterations , previous ) ;  <NL>  }  <NL>  <NL> return new pattern ;  <NL>  } else {  <NL> return old pattern ;  <NL>  }  <NL>  }  COM: <s> finds a loop pattern in the given sequential pattern </s>