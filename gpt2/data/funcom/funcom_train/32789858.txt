TDAT: private runnable dequeue task ( ) {  <NL> synchronized ( get tasks lock ( ) ) {  <NL> while ( true ) {  <NL> check for death ( ) ; / / may throw thread death <NL>  <NL> if ( m _ lr tasks . size ( ) > 0 ) {  <NL> return ( runnable ) m _ lr tasks . remove ( 0 ) ;  <NL>  }  <NL> else {  <NL> try {  <NL> get tasks lock ( ) . wait ( ) ;  <NL>  }  <NL> catch ( interrupted exception ie ) { / / ignore <NL>  }  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> used internally by pooled thread to dequeue the next task </s>