TDAT: public void run ( ) {  <NL> try {  <NL> while ( true ) {  <NL>  <NL> evendec event = null ;  <NL> byte [ ] buf = new byte [ 2048 ] ;  <NL>  <NL>  / / decide what kind of event it is and how to process it <NL>  <NL> byte type = i . read byte ( ) ;  <NL>  <NL> event = event type identifier . get evendec ( type ) ;  <NL>  <NL>  / / get all of the rawdata into buffer <NL>  <NL> int m = i . read ( buf ) ;  <NL> byte [ ] dat = new byte [ m + 1 ] ;  <NL> system . arraycopy ( buf , 0 , dat , 1 , m ) ;  <NL> dat [ 0 ] = type ;  <NL> buf = dat ;  <NL>  <NL>  / / process event <NL> al . process event ( event . decode ( buf ) ) ;  <NL>  <NL> thread . sleep ( 50 ) ;  <NL>  }  <NL>  } catch ( exception ex ) {  <NL> ex . print stack trace ( ) ;  <NL>  } finally {  <NL> listener = null ;  <NL> try {  <NL> o . close ( ) ;  <NL>  } catch ( io exception ex ) {  <NL> ex . print stack trace ( ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> polls the socket for info to output </s>