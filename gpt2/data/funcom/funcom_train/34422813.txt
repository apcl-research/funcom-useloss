TDAT: private state parse sum ( ) {  <NL> state left = parse product ( ) ;  <NL> if ( left . ok ) {  <NL> do {  <NL> if ( lexer . accept token ( token type . add ) ) {  <NL> left =  <NL> produce sum ( left , parse expected product ( ) ,  <NL> operation type . addition ) ;  <NL>  } else if ( lexer . accept token ( token type . sub ) ) {  <NL> left =  <NL> produce sum ( left , parse expected product ( ) ,  <NL> operation type . subtraction ) ;  <NL>  } else <NL> break ;  <NL>  } while ( true ) ;  <NL> return left ;  <NL>  }  <NL> return failed _ state ;  <NL>  }  COM: <s> parses the sum </s>