TDAT: protected compound type get top type ( class definition cdef , context stack stack ) {  <NL>  <NL> compound type result = null ;  <NL>  <NL>  / / do we have an interface ?  <NL>  <NL> if ( cdef . is interface ( ) ) {  <NL>  <NL>  / / yes , so first try abstract . . .  <NL>  <NL> result = abstract type . for abstract ( cdef , stack , true ) ;  <NL>  <NL> if ( result = = null ) {  <NL>  <NL>  / / then try remote . . .  <NL>  <NL> result = remote type . for remote ( cdef , stack , false ) ;  <NL>  }  <NL>  } else {  <NL>  <NL>  / / not an interface , so try implementation . . .  <NL>  <NL> result = implementation type . for implementation ( cdef , stack , false ) ;  <NL>  }  <NL>  <NL> return result ;  <NL>  }  COM: <s> create and return a top level type </s>