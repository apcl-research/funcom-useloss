TDAT: private void process pi ( instruction s ) {  <NL> register result = guarded unary . get result ( s ) . get register ( ) ;  <NL> value graph vertex v = find or create vertex ( result ) ;  <NL> operand val = guarded unary . get val ( s ) ;  <NL>  / / bypass move instructions that define the right - hand side <NL> val = bypass moves ( val ) ;  <NL> v . copy vertex ( find or create vertex ( val ) ) ;  <NL>  }  COM: <s> update the value graph to account for a given pi instruction </s>