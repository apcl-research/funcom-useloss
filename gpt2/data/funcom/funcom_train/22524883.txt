TDAT: protected string format text ( string text ) {  <NL> if ( text = = null || text . length ( ) = = 0 ) {  <NL> return text ;  <NL>  }  <NL> string buffer result = new string buffer ( ) ;  <NL> int text size = text . length ( ) ;  <NL> for ( int i = 0 ; i < text size ; i + + ) {  <NL> char ch = text . char at ( i ) ;  <NL> switch ( ch ) {  <NL> case ' \r ' :  <NL> break ;  <NL> case ' \t ' :  <NL> result . append ( ' ' ) ;  <NL> break ;  <NL> case ' \n ' :  <NL> result . append ( encoded _ newline ) ;  <NL> break ;  <NL> case ' \ ' ' :  <NL> result . append ( encoded _ single _ quote ) ;  <NL> break ;  <NL> case ' \\ ' :  <NL> result . append ( " \\\\ " ) ; / / $ non - nls - 1 $  <NL> break ;  <NL> default :  <NL> result . append ( ch ) ;  <NL>  }  <NL>  }  <NL> return result . to string ( ) ;  <NL>  }  COM: <s> formats the text for consumption by the java script dhtml editor </s>