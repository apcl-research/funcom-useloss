TDAT: public string parse join query ( string sql ) {  <NL>  <NL> pattern pattern = pattern . compile ( " select . + ? from\\s + " , pattern . case _ insensitive ) ;  <NL>  <NL> matcher matcher = pattern . matcher ( sql ) ;  <NL>  <NL> string after filter = " " ;  <NL>  <NL> while ( matcher . find ( ) ) {  <NL>  <NL> after filter = matcher . group ( ) . substring ( 6 , matcher . group ( ) . length ( ) - 5 ) ;  <NL> break ;  <NL>  }  <NL>  <NL> string [ ] filter = after filter . split ( " , " ) ;  <NL> string buffer buffer = new string buffer ( ) ;  <NL> for ( int i = 0 ; i < filter . length ; i + + ) {  <NL>  <NL>  / / filter ' as '  <NL> buffer . append ( filter [ i ] . split ( " \\s + as\\s + " ) [ 0 ] . trim ( ) ) ;  <NL>  <NL> if ( i ! = filter . length - 1 )  <NL> buffer . append ( " , " ) ;  <NL>  <NL>  }  <NL>  <NL> return buffer . to string ( ) ;  <NL>  }  COM: <s> retrieve all aliases that defined in the root select statement </s>