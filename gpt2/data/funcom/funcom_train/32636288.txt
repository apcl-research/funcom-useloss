TDAT: public boolean remove ( object obj ) {  <NL> boolean modified = false ;  <NL> try {  <NL> prioritizable t = ( prioritizable ) obj ;  <NL> int priority = t . get priority ( ) ;  <NL> if ( priorities . contains ( priority ) ) {  <NL>  / / find the queue where this prioritizable should be located .  <NL> linked list < t > queue = queues . get ( priority ) ;  <NL> modified = queue . remove ( t ) ;  <NL>  <NL> if ( modified = = true ) {  <NL>  / / if this was the last element in the queue , remove the queue as well .  <NL> if ( queue . is empty ( ) = = true ) {  <NL> queues . remove ( priority ) ;  <NL> priorities . remove ( priority ) ;  <NL>  }  <NL>  / / decrease the size .  <NL> size - - ;  <NL>  }  <NL>  }  <NL>  } catch ( exception e ) {  <NL> modified = false ;  <NL>  }  <NL> return modified ;  <NL>  }  COM: <s> removes the given object from the multi priority queue </s>