TDAT: protected void add effected ( int branch , a term appl node ) {  <NL> if ( branch < = 0 )  <NL> return ;  <NL>  <NL> set inds ;  <NL>  / / add branch pointers back <NL> if ( branch < branch effects . size ( ) ) {  <NL> inds = ( hash set ) branch effects . get ( branch ) ;  <NL> inds . add ( node ) ;  <NL> branch effects . set ( branch , inds ) ;  <NL>  }  <NL> else {  <NL>  / / for ( int i = 0 ; i < branch ; i + + )  <NL> for ( int i = branch effects . size ( ) ; i < branch ; i + + )  <NL> branch effects . add ( new hash set ( ) ) ;  <NL> inds = new hash set ( ) ;  <NL> inds . add ( node ) ;  <NL> branch effects . add ( branch , inds ) ;  <NL>  }  <NL>  }  COM: <s> used to track individuals affect during each branch needed for backjumping </s>