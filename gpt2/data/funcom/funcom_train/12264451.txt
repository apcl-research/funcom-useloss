TDAT: public string to string ( ) {  <NL> string s = " ( { " ;  <NL> for ( element e : extent )  <NL> s = s . concat ( e + " , " ) ;  <NL> if ( s . char at ( s . length ( ) - 1 ) = = ' , ' )  <NL> s = s . substring ( 0 , s . length ( ) - 1 ) ;  <NL> s = s . concat ( " } , { " ) ;  <NL> for ( property p : intent )  <NL> s = s . concat ( p + " , " ) ;  <NL> if ( s . char at ( s . length ( ) - 1 ) = = ' , ' )  <NL> s = s . substring ( 0 , s . length ( ) - 1 ) ;  <NL> s = s . concat ( " } ) " ) ;  <NL> return s ;  <NL>  }  COM: <s> returns a string representation of this concept </s>