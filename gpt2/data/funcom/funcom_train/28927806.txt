TDAT: public boolean accept ( ast visitor < t , n > visitor ) {  <NL> final visitor result outcome = visitor . visit ( this ) ;  <NL> if ( outcome = = visitor result . stop )  <NL> return false ;  <NL> if ( outcome = = visitor result . skip )  <NL> return true ;  <NL> list < ast node < t , n > > children = this . get children ( ) ;  <NL> for ( iterator < ast node < t , n > > iter = children . iterator ( ) ; iter . has next ( ) ; ) {  <NL> ast node < t , n > child = iter . next ( ) ;  <NL> if ( ! child . accept ( visitor ) )  <NL> return false ;  <NL>  }  <NL> return true ;  <NL>  }  COM: <s> visits the current node and its children </s>