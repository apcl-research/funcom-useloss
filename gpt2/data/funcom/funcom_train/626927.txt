TDAT: public void out a ocl expression ( a ocl expression node ) {  <NL> type eval type = this . annotated type ( node . get expression ( ) ) ;  <NL> if ( this . cur stereotype ! = null & & ! eval type . conforms ( type . a boolean ) ) {  <NL>  <NL> token location = node tokenizer . tokenize ( node . get expression ( ) ) [ 0 ] ;  <NL> string msg =  <NL>  " type mismatch : the type of the constraint ( "  <NL>  + eval type <NL>  + " ) does not conform to type boolean " ;  <NL>  <NL> throw new type conformance exception ( location , msg ) ;  <NL>  }  <NL>  }  COM: <s> checks whether invariants pre and postcondition evaluate to </s>