TDAT: protected void before execute ( final thread t , final runnable r ) {  <NL>  <NL>  / / note : [ r ] is the future task .  <NL>  <NL> lock . lock ( ) ;  <NL>  <NL> try {  <NL>  <NL> while ( is paused ( ) ) {  <NL>  <NL> unpaused . await ( ) ;  <NL>  <NL>  }  <NL>  <NL>  } catch ( interrupted exception ie ) {  <NL>  <NL> t . interrupt ( ) ;  <NL>  <NL>  } finally {  <NL>  <NL> lock . unlock ( ) ;  <NL>  <NL>  }  <NL>  <NL> super . before execute ( t , r ) ;  <NL>  <NL>  }  COM: <s> if task execution has been </s>