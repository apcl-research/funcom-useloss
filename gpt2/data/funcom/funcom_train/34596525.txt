TDAT: protected move list entry get transformed move ( move list entry move , boolean enemy ) {  <NL>  / / for now , do this in no particular order .  <NL> synchronized ( m _ statuses ) {  <NL> iterator i = m _ statuses . iterator ( ) ;  <NL> while ( i . has next ( ) ) {  <NL> status effect eff = ( status effect ) i . next ( ) ;  <NL> if ( eff . is active ( ) & & eff . is move transformer ( enemy ) ) {  <NL> move = eff . get move ( this , ( move list entry ) move . clone ( ) ,  <NL> enemy ) ;  <NL> if ( move = = null ) {  <NL> return null ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  <NL> return move ;  <NL>  }  COM: <s> transform a move based on the status effects applied to the pokemon </s>