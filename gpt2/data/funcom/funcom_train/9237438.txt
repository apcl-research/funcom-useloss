TDAT: protected boolean handle send ( ) {  <NL> try {  <NL> final byte [ ] data = new byte [ block size ] ;  <NL> int bytes read = file in . read ( data ) ;  <NL> read size = read size + bytes read ;  <NL>  <NL> if ( bytes read > 0 ) {  <NL> out . write ( data , 0 , bytes read ) ;  <NL> out . flush ( ) ;  <NL>  <NL> if ( ! turbo ) {  <NL> while ( bytes read > 0 ) {  <NL> bytes read = bytes read - in . read int ( ) ;  <NL>  }  <NL>  }  <NL>  <NL> if ( read size = = size ) {  <NL> file in . close ( ) ;  <NL> return false ;  <NL>  } else {  <NL> return true ;  <NL>  }  <NL>  } else if ( bytes read < 0 ) {  <NL> file in . close ( ) ;  <NL> return false ;  <NL>  }  <NL>  } catch ( io exception e ) {  <NL> return false ;  <NL>  }  <NL> return false ;  <NL>  }  COM: <s> handle the socket as a send </s>