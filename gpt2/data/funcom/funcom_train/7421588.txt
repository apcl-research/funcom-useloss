TDAT: private component compute flow ( gateway source , gateway sink ) {  <NL> list < activity > result = get elements between ( source , sink ) ;  <NL> if ( result ! = null ) {  <NL> list < activity > activities = new array list < activity > ( ) ;  <NL> activities . add all ( result ) ;  <NL>  <NL>  / / this condition must be fulfilled too <NL> if ( is only predecessor ( sink , result ) & &  <NL>  ( is only successors ( source , result ) ) ) {  <NL> return new component (  <NL> component . type _ flow ,  <NL> activities ,  <NL> compute transitions ( activities , source , sink ) ,  <NL> source , sink ) ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> computes a component that matches a flow pattern for </s>