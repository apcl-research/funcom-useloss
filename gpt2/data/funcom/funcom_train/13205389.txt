TDAT: public string export ( complex expression expression ) {  <NL> string builder buffer = new string builder ( ) ;  <NL> iterator < expression > it = expression . get subexpressions ( ) . iterator ( ) ;  <NL> if ( expression . get operator ( ) = = operator . not ) {  <NL> buffer . append ( " naf " ) ;  <NL>  }  <NL> while ( it . has next ( ) ) {  <NL> buffer . append ( export ( it . next ( ) ) ) ;  <NL> if ( it . has next ( ) ) {  <NL> buffer . append ( " " ) ;  <NL> buffer . append ( expression . get operator ( ) ) ;  <NL> buffer . append ( " \n\t\t\t\t " ) ;  <NL>  }  <NL>  }  <NL> return buffer . to string ( ) ;  <NL>  }  COM: <s> exports a complex expression to its stringrepresentaion in wsml </s>