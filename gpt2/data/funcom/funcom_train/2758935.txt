TDAT: public template get template ( string render context , entry entry ) {  <NL>  / /  <NL>  / / resolve root template - get the component type <NL> class type = entry . get type ( ) ;  <NL> string buffer name prefix = new string buffer ( ) ;  <NL> while ( type . is array ( ) ) {  <NL> name prefix . append ( " [ " ) ;  <NL> type = type . get component type ( ) ;  <NL>  }  <NL> if ( name prefix . length ( ) > 0 ) {  <NL> name prefix . append ( " l " ) ;  <NL>  }  <NL> template template = get template ( render context , entry , name prefix . to string ( ) ) ;  <NL> if ( template ! = null ) {  <NL> return template ;  <NL>  }  <NL> return get root template ( render context , object . class , " " ) ;  <NL>  }  COM: <s> resolves a template that can be located by the classes on the path </s>