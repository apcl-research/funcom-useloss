TDAT: public void out a compareable expression ( a compareable expression node ) {  <NL> instance value = null ;  <NL>  <NL> node prim expr = node . get additive expression ( ) ;  <NL> a comparison cp = ( a comparison ) node . get comparison ( ) ;  <NL>  <NL> if ( cp ! = null ) {  <NL> node op = cp . get compare operator ( ) ;  <NL> value = invoke operator ( prim expr , op , cp . get additive expression ( ) ) ;  <NL>  <NL>  } else {  <NL> value = annotated value ( prim expr ) ;  <NL>  }  <NL>  <NL> annotate ( node , value ) ;  <NL>  }  COM: <s> evaluates and annotates the value s of a compareable expression </s>