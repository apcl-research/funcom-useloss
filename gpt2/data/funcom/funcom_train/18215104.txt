TDAT: private void evaluate calculated timeseries ( aggregate measurement measurement ) {  <NL> monitor . sub task ( " calculating data " ) ;  <NL>  <NL> array list < timeseries calculated > list = measurement <NL>  . get timeseries calculated ( ) ;  <NL> iterator < timeseries calculated > timeseries iterator = list . iterator ( ) ;  <NL> while ( timeseries iterator . has next ( ) ) {  <NL> evaluate single timeseries ( measurement , timeseries iterator . next ( ) ) ;  <NL>  }  <NL>  <NL>  / *  <NL>  * notify the measurement that something has been changed in the model .  <NL>  * this way all observers that listen for changes in the measurement <NL>  * will receive an update .  <NL>  * /  <NL> evaluation change notification notification = new evaluation change notification (  <NL> evaluation change notification . change _ calculated ) ;  <NL> measurement . e notify ( notification ) ;  <NL>  }  COM: <s> fills the corresponding time series with calculated values </s>