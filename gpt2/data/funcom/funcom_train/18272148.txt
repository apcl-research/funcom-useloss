TDAT: public order next order ( ) {  <NL> order order = new order ( ) ;  <NL>  <NL> try {  <NL> double pref = this . product preference . draw ( ) ;  <NL> int preference = ( int ) math . round ( pref <NL>  * ( this . product type names . length - 1 ) ) ;  <NL> string product type name = this . product type names [ preference ] ;  <NL> product type product type = world . world . get product types ( ) . get (  <NL> product type name ) ;  <NL> order . set product type ( product type ) ;  <NL>  } catch ( exception exception ) {  <NL> exception . print stack trace ( ) ;  <NL> system . exit ( 1 ) ;  <NL>  }  <NL>  / / we assume only whole numbers for now :  <NL> int quantity = ( int ) this . quantity preference . draw ( ) ;  <NL> order . set quantity ( quantity ) ;  <NL>  <NL> return order ;  <NL>  }  COM: <s> generates the next order </s>