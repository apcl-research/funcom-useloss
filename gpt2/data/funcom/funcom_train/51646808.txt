TDAT: private void update parent balance after deletion ( node node , boolean was left child ) {  <NL> while ( node ! = null ) {  <NL> if ( was left child )  <NL> node . balance + + ;  <NL> else <NL> node . balance - - ;  <NL>  <NL> node parent = node . parent ;  <NL> if ( parent ! = null )  <NL> was left child = node = = parent . left ;  <NL>  <NL> switch ( node . balance ) {  <NL> case 1 :  <NL> case - 1 :  <NL> return ; / / done , no tree change <NL> case - 2 :  <NL> if ( rebalance after deletion right ( node . left ) )  <NL> return ;  <NL> break ; / / propagate up <NL> case 2 :  <NL> if ( rebalance after deletion left ( node . right ) )  <NL> return ;  <NL> break ; / / propagate up <NL> case 0 :  <NL> break ; / / propagate up <NL> default :  <NL> if ( assert )  <NL> assert . is true ( false ) ;  <NL>  }  <NL>  <NL> node = parent ;  <NL>  }  <NL>  }  COM: <s> updates the balance information in the parent chain of node </s>