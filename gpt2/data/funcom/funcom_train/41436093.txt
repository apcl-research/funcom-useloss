TDAT: private void pipe stream ( input stream is , output stream os ) throws io exception {  <NL> synchronized ( buffer ) {  <NL> try {  <NL> for ( int bytes read = is . read ( buffer ) ; bytes read ! = - 1 ; bytes read = is <NL>  . read ( buffer ) )  <NL> os . write ( buffer , 0 , bytes read ) ;  <NL> is . close ( ) ;  <NL> os . close ( ) ;  <NL>  } catch ( io exception ioe ) {  <NL> try {  <NL> is . close ( ) ;  <NL>  } catch ( exception ioexc ) { / * do sth ? * /  <NL>  }  <NL> try {  <NL> os . close ( ) ;  <NL>  } catch ( exception ioexc ) { / * do sth ? * /  <NL>  }  <NL> throw ioe ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> pipes data from the input stream into the output stream </s>