TDAT: protected void process ( string expression ) throws io exception {  <NL> string method name = " process " ;  <NL> exception utils . check empty ( method name , " expression " , expression ) ;  <NL> try {  <NL> lexer lexer =  <NL> new lexer ( new pushback reader ( new string reader ( expression ) ) ) ;  <NL> ocl parser parser = new ocl parser ( lexer ) ;  <NL> start start node = parser . parse ( ) ;  <NL> this . translated expression = new expression ( expression ) ;  <NL> start node . apply ( this ) ;  <NL>  } catch ( parser exception ex ) {  <NL> throw new ocl parser exception ( ex . get message ( ) ) ;  <NL>  } catch ( lexer exception ex ) {  <NL> throw new ocl parser exception ( ex . get message ( ) ) ;  <NL>  }  <NL>  }  COM: <s> parses the expression and applies this translator to it </s>