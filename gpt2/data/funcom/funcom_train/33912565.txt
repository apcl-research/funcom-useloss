TDAT: protected void fill buffer ( ) throws exception {  <NL> token t = get token ( ) ;  <NL>  / / boolean pass = false ; / / pass through info for debugging <NL>  / / if ( pass ) { add ( t ) ; return ; }  <NL>  <NL>  / / process tokens after newlin es and leading _ ws and eof <NL> if ( t . get type ( ) = = fire lexer . newline ) {  <NL> add ( t ) ;  <NL> t = get token ( ) ;  <NL> process ( t ) ;  <NL>  } else if ( t . get type ( ) = = fire lexer . leading _ ws <NL> || t . get type ( ) = = fire lexer . eof ) {  <NL> process ( t ) ;  <NL>  } else {  <NL> add ( t ) ;  <NL>  }  <NL>  }  COM: <s> fills up the output buffer by filtering the input buffer from the lexer </s>