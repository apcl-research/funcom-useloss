TDAT: private i visible find active tag ( i tag tag , int direction ) {  <NL> i visible ret node = null ;  <NL>  <NL> iterator iter ;  <NL> if ( direction = = swt . left ) {  <NL> iter = model . get tag container ( ) . rev iterator ( tag ) ;  <NL>  } else {  <NL> iter = model . get tag container ( ) . iterator ( tag ) ;  <NL>  }  <NL> i sortable node ;  <NL> while ( iter . has next ( ) ) {  <NL> node = ( i sortable ) iter . next ( ) ;  <NL>  / / this node must be validate : it means it must occpuy some area in screen canvas .  <NL> if ( node instanceof i visible & & ( ( i visible ) node ) . is active ( ) ) {  <NL> ret node = ( i visible ) node ;  <NL> break ;  <NL>  }  <NL>  }  <NL>  <NL> return ret node ;  <NL>  }  COM: <s> find the next or previous active tag by given direction </s>