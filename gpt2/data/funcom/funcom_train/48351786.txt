TDAT: private boolean contains viable blocks ( list < integer > context , set < integer > new non atomic blocks ) {  <NL> list iterator < integer > it = context . list iterator ( context . size ( ) ) ;  <NL> while ( it . has previous ( ) ) {  <NL> it . previous ( ) ; / / ignore count <NL> integer iid = it . previous ( ) ;  <NL> if ( all blocks . contains ( iid ) & & ! vc non atomic blocks . contains ( iid ) & & ! algo non atomic blocks . contains ( iid ) & & ! new non atomic blocks . contains ( iid ) )  <NL> return true ;  <NL>  }  <NL> return false ;  <NL>  }  COM: <s> finds whether or not this context contains at least </s>