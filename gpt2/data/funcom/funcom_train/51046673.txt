TDAT: protected browser transaction create transaction ( string type ) {  <NL> constructor ctor = ( constructor ) txn ctors . get ( type ) ;  <NL> if ( ctor = = null ) {  <NL> throw new illegal state exception ( " unregistered transaction type : " + type ) ;  <NL>  }  <NL>  <NL> try {  <NL> object [ ] params = new object [ ] {  <NL> new integer ( get next transaction id ( ) ) ,  <NL> type ,  <NL> context <NL>  } ;  <NL> return ( browser transaction ) ctor . new instance ( params ) ;  <NL>  } catch ( exception e ) {  <NL> throw new runtime exception ( " exception creating transaction for type "  <NL>  + type , e ) ;  <NL>  }  <NL>  }  COM: <s> creates a new transaction for this listener and the browser </s>