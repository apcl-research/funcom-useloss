TDAT: private expression parse ft unary not ( ) throws parse exception {  <NL> consume ws ( ) ;  <NL>  <NL> final boolean ftnot = consume ( " ftnot " ) ;  <NL> consume ws ( ) ;  <NL> final expression e = parse ft words ( ) ;  <NL> if ( ! ftnot ) return e ;  <NL>  <NL>  / / ft option to be set for each ft contains <NL> final ft option fto = new ft option ( ) ;  <NL> parse ft match option ( fto ) ;  <NL> return new ft unary not ( new expression [ ] { new ft contains ( e , e , fto ) } ) ;  <NL>  }  COM: <s> parses an ftunary notexprs </s>