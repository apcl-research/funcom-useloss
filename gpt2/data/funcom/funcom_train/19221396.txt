TDAT: public transformation get abstract homomorphic image ( transformation permt ) {  <NL>  / / grasp . out . println ( " checking : " + permt ) ;  <NL> byte [ ] nt = new byte [ n + 1 ] ;  <NL> iterator sets = vtiles . iterator ( ) ;  <NL> int i = 1 ;  <NL> while ( sets . has next ( ) ) {  <NL> tiled set ts = ( tiled set ) sets . next ( ) ;  <NL> tiled set nts = ts . tiled on act ( permt ) ;  <NL> integer value = ( integer ) sets2integers . get ( nts ) ;  <NL> if ( value = = null ) {  <NL> nt [ i + + ] = ( byte ) 0 ;  <NL>  }  <NL> else {  <NL> nt [ i + + ] = ( byte ) value . int value ( ) ;  <NL>  }  <NL>  }  <NL> return new transformation ( nt ) ;  <NL>  }  COM: <s> returns a partial transformation if it does not permute the tiles </s>