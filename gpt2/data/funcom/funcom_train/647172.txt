TDAT: protected string get key ( tst node node ) {  <NL> get key buffer . set length ( 0 ) ;  <NL> get key buffer . append ( node . splitchar ) ;  <NL> tst node current node , last node ;  <NL> current node = node . relatives [ tst node . parent ] ;  <NL> last node = node ;  <NL> while ( current node ! = null ) {  <NL> if ( current node . relatives [ tst node . eqkid ] = = last node ) get key buffer . append ( current node . splitchar ) ;  <NL> last node = current node ;  <NL> current node = current node . relatives [ tst node . parent ] ;  <NL>  }  <NL> get key buffer . reverse ( ) ;  <NL> return get key buffer . to string ( ) ;  <NL>  }  COM: <s> returns the key that indexes the node argument </s>