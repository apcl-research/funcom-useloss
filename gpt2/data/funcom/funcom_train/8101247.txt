TDAT: public double k ( string s , string t ) {  <NL>  / / compute self kernels if not in hashmap <NL> double ss , tt ;  <NL> double sstmp = ( double ) get ( s ) ;  <NL> double tttmp = ( double ) get ( t ) ;  <NL> if ( sstmp = = null ) {  <NL> ss = s k ( s , s , n ) ;  <NL> if ( cache )  <NL> put ( s , new double ( ss ) ) ;  <NL>  }  <NL> else <NL> ss = sstmp . double value ( ) ;  <NL> if ( tttmp = = null ) {  <NL> tt = s k ( t , t , n ) ;  <NL> if ( cache )  <NL> put ( t , new double ( tt ) ) ;  <NL>  }  <NL> else <NL> tt = tttmp . double value ( ) ;  <NL>  <NL> double st = s k ( s , t , n ) ;  <NL>  / / normalize <NL> return st / math . sqrt ( ss * tt ) ;  <NL>  }  COM: <s> computes the normalized string kernel between two strings </s>