TDAT: public void execute ( final instruction context env ) throws j basic exception {  <NL>  <NL> if ( env . code stream . registers = = null )  <NL> throw new j basic exception ( status . fault , new status ( status . regarrsiz , " 0 " ) ) ;  <NL>  <NL> int reg num = env . instruction . integer operand ;  <NL>  <NL> if ( ( reg num < 0 ) | ( reg num > = env . code stream . registers . size ( ) ) )  <NL> throw new j basic exception ( status . fault , new status ( status . regnum , reg num ) ) ;  <NL>  <NL> env . push ( env . code stream . registers . get ( reg num ) . copy ( ) ) ;  <NL>  <NL>  }  COM: <s> fetch a value from a temporary register and store in on the stack </s>