TDAT: public sequences generate ( ) {  <NL> this . error = false ;  <NL> sequences p = new sequences ( ) ;  <NL> try {  <NL> p . add var ( new var ( " analyserfolder " ,  <NL> this . get property ( " analyserfolder " ) . value ) ) ;  <NL> analiser protocol generator ig = new analiser protocol generator ( this ) ;  <NL>  <NL> ig . generate protocol data ( p ) ;  <NL>  <NL> file output file = file . create temp file ( " ing " , " _ output " ) ;  <NL> file output stream fos = new file output stream ( output file ) ;  <NL> fos . write ( p . to string ( ) . get bytes ( ) ) ;  <NL> fos . close ( ) ;  <NL>  <NL>  } catch ( exception exp ) {  <NL> exp . print stack trace ( ) ;  <NL>  }  <NL>  <NL> return p ;  <NL>  }  COM: <s> it produces the data structure needed to produce the templates </s>