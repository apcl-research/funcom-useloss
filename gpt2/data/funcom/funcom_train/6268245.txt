TDAT: public sip header parse ( ) throws parse exception {  <NL> route list route list = new route list ( ) ;  <NL> if ( debug )  <NL> dbg _ enter ( " parse " ) ;  <NL>  <NL> try {  <NL> this . lexer . match ( token types . route ) ;  <NL> this . lexer . s por ht ( ) ;  <NL> this . lexer . match ( ' : ' ) ;  <NL> this . lexer . s por ht ( ) ;  <NL> while ( true ) {  <NL> route route = new route ( ) ;  <NL> super . parse ( route ) ;  <NL> route list . add ( route ) ;  <NL> this . lexer . s por ht ( ) ;  <NL> if ( lexer . look ahead ( 0 ) = = ' , ' ) {  <NL> this . lexer . match ( ' , ' ) ;  <NL> this . lexer . s por ht ( ) ;  <NL>  } else if ( lexer . look ahead ( 0 ) = = ' \n ' )  <NL> break ;  <NL> else <NL> throw create parse exception ( " unexpected char " ) ;  <NL>  }  <NL> return route list ;  <NL>  } finally {  <NL> if ( debug )  <NL> dbg _ leave ( " parse " ) ;  <NL>  }  <NL>  <NL>  }  COM: <s> parse the string message and generate the route list object </s>