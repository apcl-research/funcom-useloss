TDAT: private converter get dynamic converter ( class from type , class to type ) {  <NL> iterator dyn conv iter = _ dynamic converters . iterator ( ) ;  <NL> while ( dyn conv iter . has next ( ) ) {  <NL> dynamic converter set dyn conv set = ( dynamic converter set ) dyn conv iter <NL>  . next ( ) ;  <NL> converter conv = dyn conv set . get converter ( from type , to type ) ;  <NL> if ( conv ! = null ) {  <NL> conv . init ( this , from type , to type ) ;  <NL> add converter ( conv ) ;  <NL> return conv ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> returns a dynamic converter created from the dynamic converter set </s>