TDAT: public void store all ( scru set other ) {  <NL> stepper stepper = other . stepper ( ) ;  <NL> try {  <NL> heaper elem ;  <NL> while ( ( elem = ( heaper ) stepper . fetch ( ) ) ! = null ) {  <NL> store ( elem ) ;  <NL> stepper . step ( ) ;  <NL>  }  <NL>  } finally {  <NL> stepper . destroy ( ) ;  <NL>  }  <NL>  / *  <NL> udanax - top . st : 45856 : mu set methods for : ' operations ' !  <NL>  { void } store all : other { scru set }  <NL>  " sort of union . store into myself all elements from other .  <NL> turn myself into the union of my current self and other . "  <NL> other stepper for each : [ : elem { heaper wimpy } | self store : elem ] !  <NL>  * /  <NL>  }  COM: <s> sort of union </s>