TDAT: protected void handle remove entry ( final bounded cache entry entry , final boolean shuffle ) {  <NL> assertion . valid ( entry ) ;  <NL>  <NL> final bounded cache entry previous = entry . predecessor ;  <NL> final bounded cache entry next = entry . successor ;  <NL>  <NL> if ( ! shuffle ) {  <NL>  <NL> f table . remove ( entry . entry key ) ;  <NL> f space - = entry . entry space ;  <NL>  <NL> handle delete entry ( entry ) ;  <NL>  }  <NL>  <NL> if ( previous = = null ) {  <NL> f head = next ;  <NL>  } else {  <NL> previous . successor = next ;  <NL>  }  <NL>  <NL> if ( next = = null ) {  <NL> f tail = previous ;  <NL>  } else {  <NL> next . predecessor = previous ;  <NL>  }  <NL>  }  COM: <s> handles the remove event </s>