TDAT: protected boolean keep ( constraint variable2 cv1 , constraint variable2 cv2 ) {  <NL> if ( ( cv1 = = null || cv2 = = null ) )  <NL> return false ;  <NL>  <NL> if ( cv1 . equals ( cv2 ) ) {  <NL> if ( cv1 = = cv2 )  <NL> return false ;  <NL> else <NL> assert . is true ( false ) ;  <NL>  }  <NL>  <NL> if ( cv1 instanceof collection element variable2 || cv2 instanceof collection element variable2 )  <NL> return true ;  <NL>  <NL> if ( cv1 instanceof independent type variable2 || cv2 instanceof independent type variable2 )  <NL> return true ;  <NL>  <NL> if ( is a generic type ( cv1 . get type ( ) ) )  <NL> return true ;  <NL>  <NL> if ( is a generic type ( cv2 . get type ( ) ) )  <NL> return true ;  <NL>  <NL> return false ;  <NL>  }  COM: <s> allows for avoiding the creation of simple type constraints based on properties of </s>