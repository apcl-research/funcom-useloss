TDAT: protected string evaluate inside parentisis ( string expression ) throws evaluation exception {  <NL>  <NL> string buffer result = new string buffer ( expression ) ;  <NL>  <NL> int start ;  <NL> while ( ( start = expression . last index of ( " ( " ) ) > - 1 ) {  <NL> int end = expression . index of ( " ) " , start ) ;  <NL>  <NL> if ( end < start )  <NL> throw new evaluation exception ( " unmatched parentisis on expression : " + expression ) ;  <NL>  <NL> result . replace ( start , end + 1 , evaluate ( result . substring ( start + 1 , end ) ) ) ;  <NL> expression = result . to string ( ) ;  <NL>  }  <NL>  <NL> return result . to string ( ) ;  <NL>  }  COM: <s> evaluates all expression inside parentisis and returns the result </s>