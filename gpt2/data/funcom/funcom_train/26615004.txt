TDAT: public void invoke ( object [ ] args ) throws delegate invocation exception <NL>  {  <NL> if ( ! pairs to invoke . is empty ( ) )  <NL>  {  <NL> exception held exception = null ;  <NL>  <NL> iterator iterator = pairs to invoke . iterator ( ) ;  <NL>  <NL> while ( iterator . has next ( ) )  <NL>  {  <NL> try <NL>  {  <NL> delegate pair current pair = ( delegate pair ) iterator . next ( ) ;  <NL> method method to invoke = current pair . get method to invoke ( ) ;  <NL> method to invoke . invoke ( current pair . get target class ( ) , args ) ;  <NL>  }  <NL> catch ( exception e )  <NL>  {  <NL> if ( continue on exception )  <NL>  {  <NL> held exception = e ;  <NL>  }  <NL> else <NL>  {  <NL> throw new delegate invocation exception ( e ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  <NL> if ( held exception ! = null )  <NL>  {  <NL> throw new delegate invocation exception ( held exception ) ;  <NL>  }  <NL>  <NL>  }  <NL>  }  COM: <s> invokes the list of methods stored with the arguments provided </s>