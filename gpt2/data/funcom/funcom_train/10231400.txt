TDAT: private void add subclass concepts ( ) {  <NL> my logger . info ( " adding subclass concepts as vertices to the network " ) ;  <NL>  <NL>  / / iterate over all formulas <NL> formula formula = new formula ( ) ;  <NL> for ( object formula object : kif parser . formula list ) {  <NL> formula . read ( ( string ) formula object ) ;  <NL>  <NL>  / / subclass formulas <NL> if ( formula . car ( ) . equals ( " subclass " ) ) {  <NL> string label = formula . get argument ( 1 ) ;  <NL> if ( ! label . equals ( " " ) ) {  <NL> if ( ! network . contains vertex ( label ) ) {  <NL> network . add vertex ( label ,  <NL> nl . vu . cs . pato . net . vertex . shape . ellipse ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> adds the concepts that occur as first arguments in subclass formulas to </s>