TDAT: public void clear facts ( ) {  <NL> if ( this . deffact map . size ( ) > 0 ) {  <NL> try {  <NL> list facts = new array list ( this . deffact map . key set ( ) ) ;  <NL> iterator itr = facts . iterator ( ) ;  <NL> while ( itr . has next ( ) ) {  <NL> object obj = itr . next ( ) ;  <NL> if ( obj instanceof equality index ) {  <NL> equality index i = ( equality index ) obj ;  <NL> deffact f = ( deffact ) this . deffact map . get ( i ) ;  <NL> if ( ! ( f . get deftemplate ( ) instanceof initial fact ) ) {  <NL> this . retract fact ( f ) ;  <NL> this . deffact map . remove ( i ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  } catch ( retract exception e ) {  <NL>  <NL>  }  <NL>  }  <NL>  }  COM: <s> clear the deffacts from the working memory </s>