TDAT: protected void dispatch ( handler handler , event event ) {  <NL> try {  <NL> handler . handle ( event ) ;  <NL>  }  <NL> catch ( java . rmi . marshal exception e ) {  <NL> if ( e . detail instanceof java . io . not serializable exception <NL>  & & event . object ! = null )  <NL>  {  <NL> try {  <NL> event . object = default object format . format ( event ) ;  <NL> handler . handle ( event ) ;  <NL>  }  <NL> catch ( exception ee ) {  <NL> log . internal ( " bad connection to handler ; removing : "  <NL>  + ee . get message ( ) ) ;  <NL> remove handler ( handler ) ;  <NL>  }  <NL>  }  <NL>  }  <NL> catch ( exception e ) {  <NL> log . internal ( e ) ;  <NL> log . internal ( " bad connection to handler ; removing . . . " ) ;  <NL> remove handler ( handler ) ;  <NL>  }  <NL>  }  COM: <s> this function calls the handler </s>