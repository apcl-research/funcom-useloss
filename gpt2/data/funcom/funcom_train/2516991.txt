TDAT: private void resolve dependencies ( stack < predecessor reference > predecessor references , map < string , task > project tasks ) {  <NL> while ( predecessor references . size ( ) > 0 ) {  <NL> predecessor reference pref = predecessor references . pop ( ) ;  <NL> atomic task successor = pref . task ;  <NL> task pred = project tasks . get ( pref . reference uid ) ;  <NL> atomic task predecessor = ( pred instanceof atomic task ? ( atomic task ) pred : null ) ;  <NL> if ( predecessor = = null ) {  <NL> logger . warn ( " predecessor " + pref . reference uid + " not found " ) ;  <NL> import results . predecessor not found + + ;  <NL>  }  <NL> successor . add predecessor ( predecessor ) ;  <NL>  }  <NL>  <NL>  }  COM: <s> builds predecessor and successor links from imported predecessor </s>