TDAT: public term head reduce once ( ) {  <NL>  / / xxx this isn ' t lazy hardly at all <NL>  <NL> term rator1 = rator . head reduce once ( ) ;  <NL> term rand1 = rand . head reduce once ( ) ;  <NL>  <NL>  / / is this a redex ?  <NL> if ( rator1 instanceof abstr ) {  <NL> abstr a = ( abstr ) rator1 ;  <NL> return a . s . substitute ( a . x , rand1 ) ; / / yup ; reduce it <NL>  }  <NL>  <NL>  / / otherwise , just use the rator and rand , reduced once <NL> return new appl ( rator1 , rand1 ) ;  <NL>  }  COM: <s> the interesting case for head reduce once </s>