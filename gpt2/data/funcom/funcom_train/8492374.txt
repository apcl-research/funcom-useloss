TDAT: public void regenerate normal ( ) {  <NL> float nx = 0 ;  <NL> float ny = 0 ;  <NL> float nz = 0 ;  <NL> iterator < triangle > iterator = parents . iterator ( ) ;  <NL> if ( parents . size ( ) = = 0 ) {  <NL> system . out . println ( " 3ds damaged ! " ) ;  <NL> nx = 1 ;  <NL>  }  <NL> triangle tri ;  <NL> vector3f wn ;  <NL> while ( iterator . has next ( ) ) {  <NL> tri = iterator . next ( ) ;  <NL> wn = tri . get weighted normal ( ) ;  <NL> nx + = wn . x ;  <NL> ny + = wn . y ;  <NL> nz + = wn . z ;  <NL>  }  <NL>  / / normal = ( vector3f ) new vector3f ( nx , ny , nz ) . normalise ( ) ;  <NL> normal . set ( nx , ny , nz ) ;  <NL> normal . normalise ( ) ;  <NL>  }  COM: <s> generates the normal of the vertex </s>