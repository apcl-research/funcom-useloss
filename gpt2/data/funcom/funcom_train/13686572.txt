TDAT: protected control state write next ( node nd , int tabs , boolean is seq ) throws io exception {  <NL> class < ? extends node > node class = nd . get class ( ) ;  <NL> if ( node class = = control state . class ) {  <NL> return ( control state ) nd ;  <NL>  }  <NL> else if ( node class = = rule . class ) {  <NL> return write rule ( ( rule ) nd , tabs , is seq ) ;  <NL>  }  <NL> else if ( node class = = condition . class ) {  <NL> write condition ( ( condition ) nd , tabs , is seq ) ;  <NL> return null ;  <NL>  }  <NL> else {  <NL> throw new io exception ( " illegal node type : " + node class . to string ( ) ) ;  <NL>  }  <NL>  }  COM: <s> calls the appropriate function to write the next node </s>