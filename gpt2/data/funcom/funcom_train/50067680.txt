TDAT: private type cond type ( int pos , type condtype , type thentype , type elsetype ) {  <NL> type ctype = cond type1 ( pos , condtype , thentype , elsetype ) ;  <NL> return ( ( condtype . const value ! = null ) & & ( thentype . const value ! = null ) & & ( elsetype . const value ! = null ) ) ? cfolder <NL>  . coerce (  <NL>  ( ( ( number ) condtype . const value ) . int value ( ) ! = 0 ) ? thentype <NL>  : elsetype , ctype )  <NL>  : ctype ;  <NL>  }  COM: <s> compute the type of a conditional expression after checking that it </s>