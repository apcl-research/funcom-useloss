TDAT: public value get integer ( int size ) throws j basic exception {  <NL> if ( mode ! = mode _ binary ) {  <NL> last status = new status ( status . notbinary ) ;  <NL> return null ;  <NL>  }  <NL>  <NL> try {  <NL> switch ( size ) {  <NL> case 1 : return new value ( data stream . read ( ) ) ;  <NL> case 2 : return new value ( data stream . read short ( ) ) ;  <NL> case 4 : return new value ( data stream . read int ( ) ) ;  <NL>  }  <NL>  } catch ( final io exception e ) {  <NL> last status = new status ( status . ioerror , e . to string ( ) ) ;  <NL> return null ;  <NL>  }  <NL> throw new j basic exception ( status . invrecdef , " invalid integer size " + size ) ;  <NL>  }  COM: <s> return an integer value from a binary file </s>