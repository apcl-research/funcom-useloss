TDAT: private i type binding get iterable type ( final i type binding iterator ) {  <NL> if ( iterator ! = null ) {  <NL> final i type binding [ ] bindings = iterator . get type arguments ( ) ;  <NL> if ( bindings . length > 0 ) {  <NL> i type binding arg = bindings [ 0 ] ;  <NL> if ( arg . is wildcard type ( ) ) {  <NL> arg = ast resolving . normalize wildcard type ( arg , true , f root . get ast ( ) ) ;  <NL>  }  <NL> return arg ;  <NL>  }  <NL>  }  <NL> return f root . get ast ( ) . resolve well known type ( " java . lang . object " ) ; / / $ non - nls - 1 $  <NL>  }  COM: <s> returns the iterable type from the iterator type binding </s>