TDAT: public template find template ( string name , string context type id ) {  <NL> assert . is not null ( name ) ;  <NL>  <NL> for ( iterator it = f templates . iterator ( ) ; it . has next ( ) ; ) {  <NL> template persistence data data = ( template persistence data ) it . next ( ) ;  <NL> template template = data . get template ( ) ;  <NL> if ( data . is enabled ( ) & & ! data . is deleted ( )  <NL>  & & ( context type id = = null || context type id . equals ( template . get context type id ( ) ) )  <NL>  & & name . equals ( template . get name ( ) ) )  <NL> return template ;  <NL>  }  <NL>  <NL> return null ;  <NL>  }  COM: <s> returns the first enabled template that matches both name and context type id </s>