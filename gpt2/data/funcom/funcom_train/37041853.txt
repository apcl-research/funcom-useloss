TDAT: protected void reinsert ( priority buffer heap , int quantity ) {  <NL>  <NL> while ( quantity > 0 ) {  <NL>  <NL> order top = ( order ) heap . remove ( ) ;  <NL>  <NL> if ( top . get quantity ( ) > quantity ) {  <NL> heap . add ( top . split ( top . get quantity ( ) - quantity ) ) ;  <NL>  }  <NL>  <NL> quantity - = top . get quantity ( ) ;  <NL>  <NL> try {  <NL> if ( top . is bid ( ) ) {  <NL> add bid ( top ) ;  <NL>  } else {  <NL> add ask ( top ) ;  <NL>  }  <NL>  } catch ( duplicate shout exception e ) {  <NL> throw new auction runtime exception ( " invalid market state " ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> remove possibly several shouts from heap such that quantity heap is </s>