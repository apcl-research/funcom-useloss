TDAT: public boolean remove ( e comparable ) {  <NL>  / / check for null <NL> if ( comparable = = null ) return false ;  <NL>  / / check for an empty tree <NL> if ( this . root = = null ) return false ;  <NL>  / / otherwise we need to find and remove the node <NL>  / / retaining any children of the removed node <NL> node node = this . remove ( comparable , this . root ) ;  <NL>  / / see if it was found <NL> return node ! = null ;  <NL>  }  COM: <s> removes the comparable object from the tree returning the node or </s>