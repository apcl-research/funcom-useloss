TDAT: public parsing frame ( string source ) {  <NL> stats . mark it ( - 1 ) ;  <NL> this . source = source ;  <NL> matcher lex matcher = lexeme _ match _ pat . matcher ( source ) ;  <NL> int last suff = - 1 ;  <NL> while ( lex matcher . find ( ) ) {  <NL> if ( last suff < 0 )  <NL> last suff = lex matcher . start ( ) ;  <NL> parsing buffer . add ( new parsing buffer element (  <NL> last suff ,  <NL> lex matcher . end ( 1 ) - lex matcher . start ( 1 ) ,  <NL> lex matcher . end ( 2 ) - lex matcher . start ( 2 ) ,  <NL> lex matcher . group ( 1 ) ,  <NL> lex matcher . start ( ) - last suff ) ) ;  <NL> last suff = lex matcher . end ( 2 ) - lex matcher . start ( 2 ) ;  <NL>  }  <NL>  <NL> stats . mark it ( 7 ) ;  <NL>  }  COM: <s> the constructor parses the source string with the regular expression </s>