TDAT: public void release ( ) {  <NL> synchronized ( this ) {  <NL>  / / get current thread . if ! an owner , throw exception .  <NL> thread t = thread . current thread ( ) ;  <NL> if ( ! _ hash ownership . contains key ( t ) )  <NL> throw ( new illegal argument exception (  <NL>  " only an owning thread may release a semaphore . " ) ) ;  <NL>  <NL>  / / remove owner from list .  <NL>  _ hash ownership . remove ( t ) ;  <NL>  }  <NL>  <NL>  / / if count < max , make signaled .  <NL> if ( _ hash ownership . size ( ) < _ max owners )  <NL> set state ( signaled ) ;  <NL>  <NL> return ;  <NL>  }  COM: <s> use i release i from within an owner thread to release </s>