TDAT: private sym tab ast find left child ( sym tab ast a expression ) {  <NL> sym tab ast left child = ( sym tab ast ) ( a expression . get first child ( ) ) ;  <NL>  / / handle checkstyle grammar <NL> while ( left child . get type ( ) = = token types . lparen ) {  <NL> left child = ( sym tab ast ) left child . get next sibling ( ) ;  <NL>  }  <NL> return left child ;  <NL>  }  COM: <s> finds the left child of a binary operator skipping parentheses </s>