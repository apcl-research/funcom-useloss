TDAT: protected token get token ( final string word ) {  <NL> assertion . valid ( word ) ;  <NL>  <NL> if ( ! f sensitive ) {  <NL>  <NL> string token = null ;  <NL> for ( final iterator < string > iterator = f words . key set ( ) . iterator ( ) ; iterator . has next ( ) ; ) {  <NL>  <NL> token = iterator . next ( ) ;  <NL> if ( word . equals ignore case ( token ) ) {  <NL> return ( token ) f words . get ( token ) ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  <NL> return ( token ) f words . get ( word ) ;  <NL>  }  COM: <s> returns the token associated with the word </s>