TDAT: protected int count adjacent edges ( vertex v ) {  <NL> int edgecount = 0 ;  <NL> set < vertex > n1s = new hash set < vertex > ( v . get neighbours ( ) ) ;  <NL> int n _ neighbours1 = v . get neighbours ( ) . size ( ) ;  <NL> for ( int i1 = 0 ; i1 < n _ neighbours1 ; i1 + + ) {  <NL> vertex n1 = v . get neighbours ( ) . get ( i1 ) ;  <NL> int n _ neighbours2 = n1 . get neighbours ( ) . size ( ) ;  <NL> for ( int i2 = 0 ; i2 < n _ neighbours2 ; i2 + + ) {  <NL> vertex n2 = n1 . get neighbours ( ) . get ( i2 ) ;  <NL> if ( n2 ! = v ) {  <NL> if ( n1s . contains ( n2 ) )  <NL> edgecount + + ;  <NL>  }  <NL>  }  <NL> n1s . remove ( n1 ) ;  <NL>  }  <NL> return edgecount ;  <NL>  }  COM: <s> counts the number of edges that connect neighbors of tt v tt </s>