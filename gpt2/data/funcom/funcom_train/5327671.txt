TDAT: private set initial ( ) {  <NL> set initial = this . initial ;  <NL>  <NL> if ( initial . size = = 0 ) {  <NL> map accepts = this . accepts ;  <NL>  <NL> for ( iterator i = this . terminals . entry set ( ) . iterator ( ) ; i . has next ( ) ; ) {  <NL> map . entry entry = ( map . entry ) i . next ( ) ;  <NL> expression expression = ( expression ) entry . get value ( ) ;  <NL> initial . add ( expression . initial ) ;  <NL> accepts . put ( expression . accept , entry . get key ( ) ) ;  <NL>  }  <NL> closure ( initial ) ;  <NL>  }  <NL> return initial ;  <NL>  }  COM: <s> p returns the initial state of this code lexicon code </s>