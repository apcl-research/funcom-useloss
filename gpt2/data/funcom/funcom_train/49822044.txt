TDAT: protected term eval expression ( term term ) {  <NL> if ( term = = null )  <NL> return null ;  <NL> term val = term . get term ( ) ;  <NL> if ( val instanceof struct ) {  <NL> struct t = ( struct ) val ;  <NL> if ( term ! = t )  <NL> if ( ! t . is primitive ( ) )  <NL> engine . identify functor ( t ) ;  <NL> if ( t . is primitive ( ) ) {  <NL> primitive info bt = t . get primitive ( ) ;  <NL>  / / check for library functors <NL> if ( bt . is functor ( ) )  <NL> return bt . eval as functor ( t ) ;  <NL>  }  <NL>  } else if ( val instanceof number ) {  <NL> return val ;  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> evaluates an expression </s>