TDAT: private boolean apply matcher ( list < exp > conjuncts ) {  <NL> boolean found match = false ;  <NL>  <NL> dummy exp cur exp ;  <NL> while ( cur conjunct < num conjuncts & & ! found match ) {  <NL>  / / the dummy exp is created as a work - around , see the note in the <NL>  / / class comments <NL> cur exp = new dummy exp ( conjuncts . get ( cur conjunct ) ) ;  <NL> found match = apply matcher ( cur exp ) ;  <NL> conjuncts . set ( cur conjunct , cur exp . get wrapped expression ( ) ) ;  <NL>  <NL> if ( found match ) {  <NL> cur application + + ;  <NL>  }  <NL> else {  <NL> cur conjunct + + ;  <NL> cur application = 0 ;  <NL>  }  <NL>  }  <NL>  <NL> return found match ;  <NL>  }  COM: <s> p applies a single replacement in place that is different from any </s>