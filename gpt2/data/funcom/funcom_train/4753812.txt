TDAT: public i expr remove ( final int key ) {  <NL>  <NL> final int hash = hash of ( key ) ;  <NL> int index = hash & mask ;  <NL> if ( contains key ( key , index ) ) {  <NL> return do remove ( index ) ;  <NL>  }  <NL>  <NL> if ( states [ index ] = = free ) {  <NL> return missing entries ;  <NL>  }  <NL>  <NL> int j = index ;  <NL> for ( int perturb = perturb ( hash ) ; states [ index ] ! = free ; perturb > > = perturb _ shift ) {  <NL> j = probe ( perturb , j ) ;  <NL> index = j & mask ;  <NL> if ( contains key ( key , index ) ) {  <NL> return do remove ( index ) ;  <NL>  }  <NL>  }  <NL>  <NL> return missing entries ;  <NL>  <NL>  }  COM: <s> remove the value associated with a key </s>