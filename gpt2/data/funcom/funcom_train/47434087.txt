TDAT: public list preceding ( e object object ) {  <NL> list result = new array list ( ) ;  <NL> list ancestors = ancestor ( object ) ;  <NL> ancestors . add ( object ) ;  <NL>  / / now return all preceding siblings and their respective children . . .  <NL> iterator it = ancestors . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> e object parent = ( e object ) it . next ( ) ;  <NL> if ( parent ! = object )  <NL> result . add ( parent ) ;  <NL> result . add all ( preceding sibling ( parent ) ) ;  <NL> iterator it2 = preceding sibling ( parent ) . iterator ( ) ;  <NL> while ( it2 . has next ( ) ) {  <NL> result . add all ( descendant ( ( e object ) it2 . next ( ) ) ) ;  <NL>  }  <NL>  }  <NL> return result ;  <NL>  }  COM: <s> same meaning as the preceding axe in xpath selects everything in the </s>