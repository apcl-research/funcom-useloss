TDAT: protected void draw cursor ( graphics g ) {  <NL>  <NL> current position = compute current position ( ) ;  <NL>  <NL>  / / drawing the cursor <NL> shape cursor = null ;  <NL>  <NL> if ( is horizontal ) {  <NL>  <NL> cursor = cursor shape . create transformed shape (  <NL> affine transform . get translate instance (  <NL> current position , get height ( ) - cursor shape . get bounds ( ) . height ) ) ;  <NL>  <NL>  } else {  <NL>  <NL> cursor = cursor shape . create transformed shape (  <NL> affine transform . get translate instance (  <NL> get width ( ) - cursor shape . get bounds ( ) . width , current position ) ) ;  <NL>  }  <NL>  <NL>  / / paint the cursor <NL> graphics2d g2 = ( graphics2d ) g . create ( ) ;  <NL> g2 . set color ( fill color cursor ) ;  <NL> g2 . fill ( cursor ) ;  <NL>  <NL> g . dispose ( ) ;  <NL>  }  COM: <s> draws the cursor </s>