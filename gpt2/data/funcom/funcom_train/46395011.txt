TDAT: protected void add to open ( int x , int y , node parent ) {  <NL> node open node = new node ( x , y ) ;  <NL> open node . set parent ( parent ) ;  <NL>  <NL> replacing : for ( iterator < node > i = open . iterator ( ) ; i . has next ( ) ; ) {  <NL> node existing = i . next ( ) ;  <NL> if ( existing . x = = x & & existing . y = = y ) {  <NL> if ( existing . gcost > open node . gcost ) {  <NL> i . remove ( ) ;  <NL> break replacing ;  <NL>  } else {  <NL> return ;  <NL>  }  <NL>  }  <NL>  }  <NL>  <NL> open node . compute heuristic ( ) ;  <NL> open . add ( open node ) ;  <NL>  }  COM: <s> adds the node at </s>