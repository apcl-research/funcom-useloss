TDAT: private double compute def accu ( instances data ) {  <NL> double def accu = 0 ;  <NL> attribute covered = m _ covered ;  <NL> int positive = covered . index of value ( " + " ) ;  <NL> for ( int i = 0 ; i < data . num instances ( ) ; i + + ) {  <NL> instance inst = data . instance ( i ) ;  <NL> float cov = inst . value ( covered ) ;  <NL> boolean not covered = double . is na n ( cov ) || ( int ) cov ! = positive ;  <NL> if ( not covered & & ( int ) inst . class value ( ) = = ( int ) m _ consequent )  <NL> def accu + = inst . weight ( ) ;  <NL>  }  <NL> return def accu ;  <NL>  }  COM: <s> private function to compute default number of accurate instances in the </s>