TDAT: public type find type ( final string name ) {  <NL> checker . not empty ( " parameter : name " , name ) ;  <NL>  <NL> type type = null ;  <NL> while ( true ) {  <NL>  / / check cache first . . .  <NL> type = ( type ) this . get types ( ) . get ( name ) ;  <NL> if ( null ! = type ) {  <NL> break ;  <NL>  }  <NL>  / / iterate thru all types recently created . . .  <NL> type = this . get new type ( name ) ;  <NL> if ( null ! = type ) {  <NL> break ;  <NL>  }  <NL>  <NL>  / / create time . . .  <NL> type = this . create type ( name ) ;  <NL> if ( null = = type ) {  <NL> break ;  <NL>  }  <NL> if ( type instanceof generic type ) {  <NL> break ;  <NL>  }  <NL>  <NL> this . add type ( type ) ;  <NL> break ;  <NL>  }  <NL>  <NL> return type ;  <NL>  }  COM: <s> fetches the type for the given name </s>