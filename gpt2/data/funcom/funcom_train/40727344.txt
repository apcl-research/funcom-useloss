TDAT: public return type get or cancel ( long timeout , time unit unit ) {  <NL> try {  <NL> return f . get ( timeout , unit ) ;  <NL>  } catch ( interrupted exception e ) {  <NL> f . cancel ( true ) ;  <NL>  } catch ( execution exception e ) {  <NL> f . cancel ( true ) ;  <NL>  } catch ( timeout exception e ) {  <NL> f . cancel ( true ) ;  <NL>  } catch ( throwable t ) {  <NL>  / / ignore any exceptions <NL>  }  <NL>  <NL> return this . fecther . get default data ( ) ;  <NL>  }  COM: <s> waits if necessary for at most the given time for the computation </s>