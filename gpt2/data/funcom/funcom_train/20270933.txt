TDAT: private node collapse replacements ( list < node > replacements ) {  <NL> node expr = null ;  <NL> for ( node rep : replacements ) {  <NL> if ( rep . get type ( ) = = token . expr _ result ) {  <NL> rep = rep . get first child ( ) ;  <NL> rep . detach from parent ( ) ;  <NL>  }  <NL>  <NL> if ( expr = = null ) {  <NL> expr = rep ;  <NL>  } else {  <NL> expr = new node ( token . comma , expr , rep ) ;  <NL>  }  <NL>  }  <NL>  <NL> return expr ;  <NL>  }  COM: <s> merge a list of nodes into a single expression </s>