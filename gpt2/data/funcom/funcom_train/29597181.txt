TDAT: protected void fire transform event ( final transform changed event . type type ) {  <NL>  <NL> final transform changed event event = new transform changed event ( this , type ) ;  <NL>  <NL>  / / fire the event ( call - back method )  <NL> for ( final transform changed listener l : listeners . get listeners ( transform changed listener . class ) ) {  <NL> l . handle event ( event ) ;  <NL>  }  <NL> try {  <NL> spyglass environment . set affine transformation ( at ) ;  <NL>  } catch ( final io exception e ) {  <NL> log . error ( " an error occured while trying to store the affine transformation parameters " , e ) ;  <NL>  }  <NL>  }  COM: <s> fires a drawing area transform event </s>