TDAT: public module get common ancestor ( component component ) {  <NL> iterator < module > iter = get lineage ( ) . iterator ( ) ;  <NL> iterator < module > other iter = component . get lineage ( ) . iterator ( ) ;  <NL>  <NL> module common ancestor = null ;  <NL> while ( iter . has next ( ) & & other iter . has next ( ) ) {  <NL> module ancestor = iter . next ( ) ;  <NL> module other ancestor = other iter . next ( ) ;  <NL> if ( ancestor = = other ancestor ) {  <NL> common ancestor = ancestor ;  <NL>  } else {  <NL> break ;  <NL>  }  <NL>  }  <NL> return common ancestor ;  <NL>  }  COM: <s> gets the lowest level module that is an ancestor of both this component </s>