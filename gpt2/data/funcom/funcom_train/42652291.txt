TDAT: public object invoke synchronously ( ) throws timeout exception , execution exception {  <NL> executor service pool = get thread pool ( this . loader ) ;  <NL> future f = pool . submit ( this ) ;  <NL> try {  <NL> return f . get ( timeout , time unit ) ;  <NL>  } catch ( interrupted exception e ) {  <NL>  / / this should not happen <NL> throw new runtime exception ( e ) ;  <NL>  }  <NL>  }  COM: <s> invokes the current callable in a new thread so that it is possible </s>