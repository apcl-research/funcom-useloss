TDAT: public void remove node complete ( node n ) {  <NL> interp . remove ( n . get name ( ) . intern ( ) ) ;  <NL> iterator edges = n . get incident edges ( ) . iterator ( ) ;  <NL> while ( edges . has next ( ) )  <NL> remove edge complete ( ( edge ) edges . next ( ) ) ;  <NL>  <NL> if ( n . get graph ( ) ! = null )  <NL> super . remove vertex ( n ) ;  <NL>  <NL> name to node . remove ( n . get name ( ) ) ;  <NL> storage factory . get sl ( ) . remove complete ( n ) ;  <NL> vis factory . get factory ( ) . remove ( n ) ;  <NL> last mod = system . current time millis ( ) - 1 ;  <NL>  }  COM: <s> removes a node completely node and all edges connected to it </s>