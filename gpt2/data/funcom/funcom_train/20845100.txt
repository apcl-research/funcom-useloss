TDAT: public iterator children from type ( ) {  <NL> if ( type = = null ) return empty structures . empty _ iterator ;  <NL> if ( type . is complex type ( ) ) {  <NL> list list = new linked list ( ) ;  <NL> complex type complex = ( complex type ) type ;  <NL> for ( iterator it = complex . elements ( ) ; it . has next ( ) ; ) {  <NL> element e = ( element ) it . next ( ) ;  <NL> parameter value pv = parameter value . create element value ( e ) ;  <NL> pv . set max occurs ( e . get max occurs ( ) ) ;  <NL> pv . set min occurs ( e . get min occurs ( ) ) ;  <NL> list . add ( pv ) ;  <NL>  }  <NL> return list . iterator ( ) ;  <NL>  <NL>  }  <NL> return empty structures . empty _ iterator ;  <NL>  }  COM: <s> returns an iterator of types for all inner elements </s>