TDAT: private void apply heuristic ( ) {  <NL>  <NL> set keys ;  <NL> string element1 , element2 ;  <NL>  <NL> keys = term list . key set ( ) ;  <NL> for ( iterator j = keys . iterator ( ) ; j . has next ( ) ; )  <NL>  {  <NL> element1 = ( string ) j . next ( ) ;  <NL> for ( iterator i = keys . iterator ( ) ; i . has next ( ) ; )  <NL>  {  <NL> element2 = ( string ) i . next ( ) ;  <NL> if ( element1 . matches ( " ^ \\w + " + element2 + " $ " ) )  <NL>  {  <NL> update evidence ( element1 , element2 , " isa " ) ;  <NL> update evidence ( element2 , element1 , " asi " ) ;  <NL>  / / system . out . print ( " heuristic : isa ( " + element1 + " , " + element2 + " ) \n " ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> applies the heuristic and updates the evidence vector </s>