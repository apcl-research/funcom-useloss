TDAT: private void handle while and synchronized ( block def block ) {  <NL> sym tab ast node = block . get tree node ( ) ;  <NL>  <NL> sym tab ast condition = ( sym tab ast ) ( node . get first child ( ) ) ;  <NL> sym tab ast slist = ( sym tab ast ) ( condition . get next sibling ( ) ) ;  <NL>  <NL> resolve expression ( condition , block , null , true ) ;  <NL> handle s list ( slist , block ) ;  <NL>  }  COM: <s> processes a while loop and resolves references in it </s>