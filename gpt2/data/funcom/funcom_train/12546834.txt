TDAT: private grammar read grammar ( document document ) {  <NL> grammar g = new unbound grammar ( ) ;  <NL> node list list = document . get document element ( ) . get elements by tag name (  <NL> rule _ name ) ;  <NL> for ( int i = 0 ; i < list . get length ( ) ; i + + ) {  <NL> production [ ] p = create rules ( list . item ( i ) ) ;  <NL> for ( int j = 0 ; j < p . length ; j + + )  <NL> g . add production ( p [ j ] ) ;  <NL>  }  <NL> return g ;  <NL>  }  COM: <s> reads the rewriting rules from the dom and returns it as a grammar </s>