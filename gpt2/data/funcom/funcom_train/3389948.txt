TDAT: protected boolean recover statement ( ) throws syntax error , io exception {  <NL> while ( true ) {  <NL> switch ( token ) {  <NL> case eof :  <NL> case rbrace :  <NL> case lbrace :  <NL> case if :  <NL> case for :  <NL> case while :  <NL> case do :  <NL> case try :  <NL> case catch :  <NL> case finally :  <NL> case break :  <NL> case continue :  <NL> case return :  <NL>  / / begin of a statement , return <NL> return true ;  <NL>  <NL> case void :  <NL> case static :  <NL> case public :  <NL> case private :  <NL> case synchronized :  <NL> case interface :  <NL> case class :  <NL> case transient :  <NL>  / / begin of something outside a statement , panic some more <NL> expect ( rbrace ) ;  <NL> return false ;  <NL>  <NL> case lparen :  <NL> match ( lparen , rparen ) ;  <NL> scan ( ) ;  <NL> break ;  <NL>  <NL> case lsqbracket :  <NL> match ( lsqbracket , rsqbracket ) ;  <NL> scan ( ) ;  <NL> break ;  <NL>  <NL> default :  <NL>  / / don ' t know what to do , skip <NL> scan ( ) ;  <NL> break ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> recover after a syntax error in a statement </s>