TDAT: public void invoke ( method invocation mi ) {  <NL> this . invocations . add element ( mi ) ;  <NL>  <NL> for ( int i = 0 ; i < get number of expectations ( ) ; i + + ) {  <NL> get expectation ( i ) . invoke ( mi ) ;  <NL> if ( mi . is evaluated ( ) ) {  <NL> return ;  <NL>  }  <NL>  }  <NL>  <NL> if ( ( mi . get method ( ) . is abstract ( ) ) || ( this . stub concrete methods ) ) {  <NL> mi . set return value ( default values . get default value ( mi . get method ( )  <NL>  . get return class ( ) ) ) ;  <NL>  }  <NL>  }  COM: <s> processes a method invocation on a spy object </s>