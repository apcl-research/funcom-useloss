TDAT: public expression get expression for violating instances ( ) {  <NL> object type t = type factory . mk object type ( f class ) ;  <NL> try {  <NL> expression all instances = new exp all instances ( t ) ;  <NL> var decl decl = new var decl ( ( f var = = null ) ? " self " : f var , t ) ;  <NL> return new exp reject ( decl , all instances , f body ) ;  <NL>  } catch ( exp invalid exception ex ) {  <NL> throw new runtime exception (  <NL>  " get expression for violating instances failed : "  <NL>  + ex . get message ( ) ) ;  <NL>  }  <NL>  }  COM: <s> returns an expression for selecting all instances that violate the </s>