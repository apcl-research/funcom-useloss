TDAT: public void run ( ) {  <NL> debug . enter ( dutl , this , " run ( ) " ) ;  <NL> try {  <NL> set processing status ( proc _ receiving ) ;  <NL> while ( keep processing ) {  <NL> process ( ) ;  <NL> thread . yield ( ) ;  <NL>  }  <NL>  } catch ( exception e ) {  <NL> set term exception ( e ) ;  <NL> debug . write ( " processing thread . run ( ) caught unhadled exception " + e ) ;  <NL> event . write ( e , " processing thread . run ( ) unhadled exception " ) ;  <NL>  } finally {  <NL> set processing status ( proc _ finished ) ;  <NL> debug . exit ( dutl , this ) ;  <NL>  }  <NL>  }  COM: <s> calls code process code in cycle until stopped </s>