TDAT: protected affine transform get matrix ( ) {  <NL>  / / the / real / order of transform is " do it backwards " . yes , rotating comes first ,  <NL>  / / then flipping etc . took awhile , to find it out . no , i don ' t have that linear <NL>  / / algebra paper yet .  <NL> affine transform at = new affine transform ( ) ;  <NL> if ( flip horizontal ) at . scale ( 1 , - 1 ) ;  <NL> if ( flip vertical ) at . scale ( - 1 , 1 ) ;  <NL> if ( rotate by ! = 0 ) at . rotate ( math . to radians ( rotate by ) ) ;  <NL> return at ;  <NL>  }  COM: <s> this method creates the matrix that is needed to perform the various </s>