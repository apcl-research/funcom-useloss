TDAT: public ref like type get exact type ( local local , unit unit ) {  <NL> ref like type type = null ;  <NL> for ( iterator i = local defs . get defs of at ( local , unit ) . iterator ( ) ;  <NL> i . has next ( ) ; ) {  <NL> definition stmt def = ( definition stmt ) i . next ( ) ;  <NL> vs . set result ( null ) ;  <NL> def . get right op ( ) . apply ( vs ) ;  <NL> ref like type type2 = ( ref like type ) vs . get result ( ) ;  <NL> if ( type2 = = null )  <NL> return null ;  <NL> if ( type = = null )  <NL> type = type2 ;  <NL> else if ( ! type . equals ( type2 ) )  <NL> return null ;  <NL>  }  <NL> return type ;  <NL>  }  COM: <s> return the exact type of the reference local def if its a reference </s>