TDAT: public void run ( ) {  <NL> try {  <NL> prepare worker ( ) ;  <NL> while ( is running ( ) ) {  <NL> try {  <NL> while ( true ) {  <NL> if ( ! is running ( ) ) return ;  <NL> synchronized ( get lock ( ) ) {  <NL> if ( is condition ( ) ) break ;  <NL> get lock ( ) . wait ( get timeout ( ) ) ;  <NL>  }  <NL>  }  <NL> work ( ) ;  <NL>  } catch ( interrupted exception ie ) {  <NL> handle error ( ie ) ;  <NL>  } catch ( throwable t ) {  <NL> handle error ( t ) ;  <NL>  }  <NL>  }  <NL>  } catch ( exception we ) {  <NL> handle error ( we ) ;  <NL>  } finally {  <NL> try {  <NL> release worker ( ) ;  <NL>  } catch ( exception we ) {  <NL> handle error ( we ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> concreate implementation of runnable interface </s>