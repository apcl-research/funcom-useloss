TDAT: public void test transactions occured ( ) {  <NL> try {  <NL>  <NL> assert true ( ! auction . transactions occurred ( ) ) ;  <NL> auction . begin ( ) ;  <NL>  <NL> auction . step ( ) ;  <NL> assert true ( ! auction . transactions occurred ( ) ) ;  <NL>  <NL> auction . step ( ) ;  <NL> assert true ( ! auction . transactions occurred ( ) ) ;  <NL>  <NL> auction . step ( ) ;  <NL> assert true ( auction . transactions occurred ( ) ) ;  <NL>  <NL>  } catch ( auction closed exception e ) {  <NL> fail ( " we tried to step through an market past its closure " ) ;  <NL>  } catch ( shouts not visible exception e ) {  <NL> fail ( " test is configured incorrectly : we must use an auctioneer that permits shout visibility " ) ;  <NL>  }  <NL>  }  COM: <s> test that transactions occur only in the final 3rd round </s>