TDAT: private tree node get tree ( string tree [ ] )  <NL>  {  <NL> hashtable table = new hashtable ( ) ;  <NL>  <NL> tree node root = null ;  <NL>  <NL> for ( int i = 0 ; i < tree . length ; i + = 2 )  <NL>  {  <NL> if ( tree [ i ] . equals ( " root " ) )  <NL>  {  <NL> root = new default mutable tree node ( tree [ i + 1 ] ) ;  <NL> table . put ( tree [ i + 1 ] , root ) ;  <NL>  }  <NL> else <NL>  {  <NL> default mutable tree node node = new default mutable tree node ( tree [ i + 1 ] ) ;  <NL> default mutable tree node parent = ( default mutable tree node ) table . get ( tree [ i ] ) ;  <NL> if ( parent ! = null )  <NL> parent . add ( node ) ;  <NL>  <NL> table . put ( tree [ i + 1 ] , node ) ;  <NL>  }  <NL>  }  <NL>  <NL> return root ;  <NL>  }  COM: <s> creates a tree of tree nodes from the specified string array </s>