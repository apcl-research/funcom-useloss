TDAT: public object get includes ( object abase , object aninclusion ) {  <NL> m use case base = ( m use case ) abase ;  <NL> m use case inclusion = ( m use case ) aninclusion ;  <NL> if ( base = = null || inclusion = = null ) {  <NL> return null ;  <NL>  }  <NL> iterator it = inclusion . get includes ( ) . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> m include include = ( m include ) it . next ( ) ;  <NL> if ( include . get base ( ) = = base ) {  <NL> return include ;  <NL>  }  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> returns the include relation between two usecases base and </s>