TDAT: public void remove ( node node ) {  <NL>  / / unhook all directed edges <NL> list < directed edge > out edges = node . get out edges ( ) . get edges ( ) ;  <NL> for ( directed edge de : out edges ) {  <NL> directed edge sym = de . get sym ( ) ;  <NL>  / / remove the diredge that points to this node <NL> if ( sym ! = null )  <NL> remove ( sym ) ;  <NL>  / / remove this diredge from the graph collection <NL> dir edges . remove ( de ) ;  <NL>  <NL> edge edge = de . get edge ( ) ;  <NL> if ( edge ! = null ) {  <NL> edges . remove ( edge ) ;  <NL>  }  <NL>  <NL>  }  <NL>  / / remove the node from the graph <NL> node map . remove ( node . get coordinate ( ) ) ;  <NL> node . remove ( ) ;  <NL>  }  COM: <s> removes a node from the graph along with any associated directed edges </s>