TDAT: public object invoke ( object proxy , method method , object [ ] args ) throws throwable {  <NL> logger . trace ( " source method " + method . get name ( ) + " invoked " ) ;  <NL> logger utils . trace ( logger , " parameter " , args ) ;  <NL>  <NL> method mapper method mapping = method mappings . get ( method ) ;  <NL> if ( method mapping ! = null ) {  <NL> return method mapping . invoke instance method ( target , args ) ;  <NL>  } else {  <NL> string message = " no mapping found for source method " + method . get name ( ) ;  <NL> logger . error ( message ) ;  <NL> throw new unmapped method exception ( message ) ;  <NL>  }  <NL>  }  COM: <s> invoke a method on the target object </s>