TDAT: public undoable action execute ( ) throws action execution exception {  <NL> linked list < undoable action > undos = new linked list < undoable action > ( ) ;  <NL>  <NL> for ( undoable action action : actions ) {  <NL> try {  <NL> undoable action undo = action . execute ( ) ;  <NL> if ( undo ! = null ) {  <NL> undos . add ( undo ) ;  <NL>  }  <NL>  } catch ( action execution exception e ) {  <NL> try {  <NL>  / / do a role back <NL> while ( ! undos . is empty ( ) ) {  <NL> undos . remove first ( ) . execute ( ) ;  <NL>  }  <NL>  } catch ( action execution exception e1 ) {  <NL>  }  <NL> throw e ;  <NL>  <NL>  }  <NL>  }  <NL> collections . reverse ( undos ) ;  <NL> return new composite action ( undos ) ;  <NL>  }  COM: <s> method for executing the composite action </s>