TDAT: private void update waiting threads ( e state ) {  <NL> wait lock . lock ( ) ;  <NL> try {  <NL> int index = 0 ;  <NL> while ( index < wait stubs . size ( ) ) {  <NL> wait stub stub = wait stubs . get ( index ) ;  <NL>  <NL>  / / if the stub has a state match , remove it from the wait stub <NL>  / / list and signal it ' s thread <NL> if ( stub . is waiting for ( state ) ) {  <NL> wait stubs . remove ( index ) ;  <NL> stub . get condition ( ) . signal all ( ) ;  <NL>  } else {  <NL> index + + ;  <NL>  }  <NL>  }  <NL> state change condition . signal all ( ) ;  <NL>  } finally {  <NL> wait lock . unlock ( ) ;  <NL>  }  <NL>  }  COM: <s> called when the current state value has changed </s>