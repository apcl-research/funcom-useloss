TDAT: protected void completed ( ) {  <NL>  <NL> try {  <NL> channel service . run transactional task (  <NL> new abstract kernel runnable ( " mark channel event completed " ) {  <NL> public void run ( ) {  <NL> channel event event = ( channel event )  <NL> get object for id ( event ref id ) ;  <NL> if ( event ! = null ) {  <NL> event . completed ( ) ;  <NL>  } else {  <NL>  / / this shouldn ' t happen <NL> logger . log (  <NL> level . severe ,  <NL>  " channel : { 0 } : event removed before completed " ,  <NL> channel ref id ) ;  <NL>  }  <NL>  }  <NL>  } ) ;  <NL>  } catch ( exception e ) {  <NL>  / / transaction schedule will print out warning .  <NL>  } finally {  <NL> channel service . add service event queue task ( channel ref id ) ;  <NL>  }  <NL>  }  COM: <s> marks the associated event complete and adds a task to </s>