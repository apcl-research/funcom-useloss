TDAT: public boolean await ( final sub monitor progress ) {  <NL> try {  <NL> while ( ! acknowledged . get ( ) & & ! progress . is canceled ( ) )  <NL> thread . sleep ( stop manager . millistowait ) ;  <NL>  } catch ( interrupted exception e ) {  <NL> thread . current thread ( ) . interrupt ( ) ;  <NL> log . error ( " code not designed to be interruptable " , e ) ;  <NL>  }  <NL> if ( progress . is canceled ( ) )  <NL> throw new cancellation exception ( ) ;  <NL>  <NL> return acknowledged . get ( ) ;  <NL>  }  COM: <s> waits until the start handle is acknowledged or the waiting is canceled </s>