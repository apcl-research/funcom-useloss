TDAT: public string parse ( reader a reader ) {  <NL> f buffer = new string buffer ( 2000 ) ;  <NL> f sub rules = new stack ( ) ;  <NL> f current sub rule = new sub rule ( ) ;  <NL>  <NL>  / / parse antlr grammar from given reader <NL> antlr lexer lexer = new antlr lexer ( a reader ) ;  <NL> token buffer token buf = new token buffer ( lexer ) ;  <NL> antlr parser p = new antlr parser ( token buf , this ,  <NL> new overview tool ( ) ) ;  <NL> p . set filename ( " . " ) ;  <NL> try {  <NL> p . grammar ( ) ;  <NL>  }  <NL> catch ( exception e ) {  <NL> antlr core plugin . log ( e ) ;  <NL>  }  <NL>  <NL> string text = f buffer . to string ( ) ;  <NL>  <NL> f buffer = null ;  <NL> f sub rules = null ;  <NL> f current sub rule = null ;  <NL>  <NL> return text ;  <NL>  }  COM: <s> parse a file to generate the overview </s>