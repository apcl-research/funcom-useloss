TDAT: private void tarjan visit ( int i ) {  <NL>  <NL> color [ i ] = counter + + ;  <NL> root [ i ] = i ;  <NL> stack . push ( i ) ;  <NL>  <NL> for ( int j : g . get neighbours ( i ) )  <NL>  {  <NL> if ( color [ j ] = = white )  <NL>  {  <NL> tarjan visit ( j ) ;  <NL>  }  <NL> if ( color [ j ] > 0 & & color [ root [ j ] ] < color [ root [ i ] ] )  <NL>  / / in component is false and have to update root <NL>  {  <NL> root [ i ] = root [ j ] ;  <NL>  }  <NL>  }  <NL>  <NL> int j ;  <NL> if ( root [ i ] = = i ) / / this node is the root of its cluster <NL>  {  <NL> do <NL>  {  <NL> j = stack . pop ( ) ;  <NL> color [ j ] = - color [ j ] ;  <NL> root [ j ] = i ;  <NL>  }  <NL> while ( j ! = i ) ;  <NL>  }  <NL>  }  COM: <s> the recursive part of the tarjan algorithm </s>