TDAT: protected void handle request ( request request ) {  <NL> try {  <NL>  / / todo consider alt lookup by component name <NL> object service = get service ( request ) ;  <NL> method method = get method ( service , request ) ;  <NL> method . invoke ( service , get arguments ( request ) ) ;  <NL>  } catch ( illegal argument exception e ) {  <NL> throw new runtime exception ( e ) ;  <NL>  } catch ( illegal access exception e ) {  <NL> throw new runtime exception ( e ) ;  <NL>  } catch ( invocation target exception e ) {  <NL> throwable t = exception util . get root cause ( e ) ;  <NL> if ( t instanceof runtime exception ) {  <NL> throw ( runtime exception ) t ;  <NL>  } else {  <NL> throw new runtime exception ( t ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> use reflection to invoke the requested method </s>