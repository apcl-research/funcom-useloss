TDAT: public collection get unconnected vertices ( boolean ordered ) {  <NL> collection vertices = get all ( ) ;  <NL> set result = null ;  <NL> if ( ordered & & order ! = null ) {  <NL> result = new tree set ( order ) ;  <NL>  } else {  <NL> result = new linked hash set ( ) ;  <NL>  }  <NL> iterator it = vertices . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> object cell = it . next ( ) ;  <NL>  / / check if cell is unconnected vertex <NL> if ( default graph model . is vertex ( model , cell ) ) {  <NL> object [ ] edges = get edges ( cell ) ;  <NL> if ( edges = = null || edges . length = = 0 ) {  <NL> result . add ( cell ) ;  <NL>  }  <NL>  }  <NL>  }  <NL> return result ;  <NL>  }  COM: <s> returns all unconnected vertices in the graph </s>