TDAT: public void test sequential computations ( ) throws interrupted exception {  <NL> final computation c1 = new test computation ( ) ;  <NL>  / / first computation <NL> sched . submit ( c1 ) ;  <NL> do with time out ( new runnable ( ) {  <NL> public void run ( ) {  <NL> try {  <NL> sched . get result ( c1 ) ;  <NL>  } catch ( exception e ) { }  <NL>  }  <NL>  } ) ;  <NL>  <NL>  / / second computation <NL> final computation c2 = new test computation ( ) ;  <NL> sched . submit ( c2 ) ;  <NL> thread t = new thread ( ) {  <NL> public void run ( ) {  <NL> try {  <NL> sched . get result ( c2 ) ;  <NL>  } catch ( exception e ) { }  <NL>  }  <NL>  } ;  <NL> t . start ( ) ;  <NL> t . join ( timeout ) ;  <NL> assert . assert false ( " scheduler unable to manage " +  <NL>  " two computations sequentially " ,  <NL> t . is alive ( ) ) ;  <NL>  }  COM: <s> check that the code scheduler code is able to manage </s>