TDAT: public app data poll ( int timeout , time unit units ) throws interrupted exception {  <NL> lock . lock interruptibly ( ) ;  <NL> long nanos = units . to nanos ( timeout ) ;  <NL>  <NL> try {  <NL> for ( ; ; ) {  <NL> if ( num valid chunks . get ( ) ! = 0 ) {  <NL> return poll ( ) ;  <NL>  }  <NL> if ( nanos < = 0 )  <NL> return null ;  <NL> try {  <NL> nanos = not empty . await nanos ( nanos ) ;  <NL>  } catch ( interrupted exception ie ) {  <NL> not empty . signal ( ) ; / / propagate to non - interrupted thread <NL> throw ie ;  <NL>  }  <NL>  <NL>  }  <NL>  } finally {  <NL> lock . unlock ( ) ;  <NL>  }  <NL>  }  COM: <s> return a data chunk guaranteed to be in order waiting up to the </s>