TDAT: public object remove _ comparator ( object known , fast linked list comparator llc ) {  <NL> ss linked list element tmp ;  <NL>  <NL> tmp = first ;  <NL> while ( tmp ! = null ) {  <NL> if ( llc . compare ( known , tmp . obj ) ) {  <NL>  <NL>  / / cut it out and return it <NL> if ( tmp = = first ) {  <NL> return this . remove _ head ( ) ;  <NL>  } else if ( tmp = = last ) {  <NL> return this . remove _ tail ( ) ;  <NL>  } else {  <NL>  / / somewhere in middle <NL> object retobj ;  <NL>  <NL>  ( tmp . prev ) . next = tmp . next ;  <NL>  ( tmp . next ) . prev = tmp . prev ;  <NL> num _ in _ list - - ;  <NL> retobj = tmp . obj ;  <NL> free _ lle ( tmp ) ;  <NL> return retobj ;  <NL>  }  <NL>  }  <NL> tmp = tmp . next ;  <NL>  }  <NL> return null ;  <NL>  }  COM: <s> removes the first object to match according to the comparator function </s>