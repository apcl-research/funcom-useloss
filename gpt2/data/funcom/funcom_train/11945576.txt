TDAT: public double length ( double t0 , double t1 , double epsilon ) {  <NL>  / / trivial case <NL> if ( t0 = = t1 )  <NL> return 0 ;  <NL>  <NL> double tm = ( t0 + t1 ) * 0 . 5 ;  <NL> bs point p0 = point at tvalue ( t0 ) ;  <NL> bs point p1 = point at tvalue ( t1 ) ;  <NL> bs point pm = point at tvalue ( tm ) ;  <NL> double d01 = p0 . dist ( p1 ) ;  <NL> double d0m = p0 . dist ( pm ) ;  <NL> double dm1 = pm . dist ( p1 ) ;  <NL> if ( math . abs ( d01 - ( d0m + dm1 ) ) < epsilon )  <NL> return d0m + dm1 ;  <NL> return ( length ( t0 , tm , epsilon ) + length ( tm , t1 , epsilon ) ) ;  <NL>  }  COM: <s> returns the approximation of arc length between t0 and t1 using recursive dichotomie </s>