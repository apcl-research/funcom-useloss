TDAT: public collection get included use cases ( object / * m use case * / ausecase ) {  <NL> if ( ausecase = = null ) {  <NL> return new array list ( ) ;  <NL>  }  <NL> m use case usecase = ( m use case ) ausecase ;  <NL> iterator it = usecase . get includes ( ) . iterator ( ) ;  <NL> list list = new array list ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> m include include = ( m include ) it . next ( ) ;  <NL> m use case addition = include . get base ( ) ;  <NL> list . add ( addition ) ;  <NL>  }  <NL> return list ;  <NL>  }  COM: <s> returns all usecases this usecase includes </s>