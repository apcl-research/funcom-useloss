TDAT: public encrypted integer multiply ( big integer other ) throws big integer class not valid {  <NL> encrypted integer tmp _ int = new encrypted integer ( this ) ;  <NL> big integer c = cipherval ;  <NL> try {  <NL> if ( this . bi cons ! = null )  <NL> c = ( big integer ) this . bi cons . new instance ( cipherval ) ;  <NL>  <NL>  } catch ( exception e ) {  <NL> throw new big integer class not valid ( " could not construct " ) ;  <NL>  }  <NL> big integer tmp = c . mod pow ( other , pub . get n squared ( ) ) ;  <NL>  <NL> tmp _ int . set cipher val ( tmp ) ;  <NL>  <NL> return tmp _ int ;  <NL>  }  COM: <s> multiplies the encrypted integer by a constant </s>