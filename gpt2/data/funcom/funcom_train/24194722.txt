TDAT: protected void internal terminate ( ) {  <NL>  / *  <NL>  * this null check is necessary . keep in mind that the static priority <NL>  * list may not have an active child , since the spawning process may <NL>  * have failed or not started yet . in such a case , if it is terminated ,  <NL>  * " this . active child " will be null .  <NL>  * /  <NL> if ( this . active child ! = null ) {  <NL> this . active child . terminate ( ) ;  <NL>  }  <NL>  <NL>  / * terminate the guards executors . * /  <NL> for ( ibt executor guard executor : this . guards executors ) {  <NL> if ( guard executor ! = null ) {  <NL> guard executor . terminate ( ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> just terminates the currently active child if there is one </s>