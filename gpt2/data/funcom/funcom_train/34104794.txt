TDAT: private lexical token recognize identifier ( string token ) {  <NL>  <NL> if ( token . length ( ) > constants . max _ ident ) {  <NL> return new lexical token ( token . substring ( 0 , constants . max _ ident ) ,  <NL> signal . identifier ) ;  <NL>  }  <NL>  <NL> for ( type type : type . values ( ) ) {  <NL> if ( type . has same token ( token ) ) {  <NL> return new lexical token ( token , signal . type ) ;  <NL>  }  <NL>  }  <NL>  <NL> for ( string palavra : constants . key _ words ) {  <NL> if ( token . equals ( palavra ) ) {  <NL> return new lexical token ( token , signal . key _ word ) ;  <NL>  }  <NL>  }  <NL>  <NL> return new lexical token ( token , signal . identifier ) ;  <NL>  }  COM: <s> recognizes an identifier and returns a lexical token the lexical analyzer output </s>