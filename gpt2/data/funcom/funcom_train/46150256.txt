TDAT: public void run ( ) {  <NL> this . thread = thread . current thread ( ) ;  <NL>  <NL> while ( ! this . is terminated ( ) ) {  <NL> try {  <NL> synchronized ( this . buffer ) {  <NL> while ( this . buffer . is empty ( ) )  <NL> this . buffer . wait ( ) ;  <NL>  <NL> int out = this . buffer . get ( ) ;  <NL>  / / debug . message ( this , " tx : " + out ) ;  <NL> this . out . write ( out ) ;  <NL> this . buffer . notify all ( ) ;  <NL>  }  <NL>  } catch ( io exception e ) {  <NL> e . print stack trace ( ) ;  <NL>  } catch ( interrupted exception e ) {  <NL> log . debug ( " interrupted ! " ) ;  <NL>  }  <NL>  }  <NL>  <NL> this . clean up ( ) ;  <NL>  }  COM: <s> runnable implementation this is where the the buffer is read and stuff </s>