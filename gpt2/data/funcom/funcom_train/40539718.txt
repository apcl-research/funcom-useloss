TDAT: private graph sub graph ( linked list < vertex > h , graph g ) {  <NL> graph sub = new graph ( ) ;  <NL> sub . vert list . add all ( h ) ;  <NL> for ( vertex v : h ) {  <NL> for ( vertex u : g . vert list ) {  <NL> edge e = new edge ( v , u ) ;  <NL> if ( g . edge list . contains ( e ) ) {  <NL> if ( ! sub . edge list . contains ( e ) ) {  <NL> sub . edge list . add ( g . edge list . get ( edge list . index of ( e ) ) ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  <NL> sub . generate adjacency list ( ) ;  <NL>  / / print ( sub ) ;  <NL> return sub ;  <NL>  <NL>  }  COM: <s> takes a list of vertices in g and induces a subgraph </s>