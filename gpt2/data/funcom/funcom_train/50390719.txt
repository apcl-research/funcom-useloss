TDAT: protected void run async ( ) {  <NL> string state = builder . get property ( " state " , new ) ;  <NL> state s = get state ( state ) ;  <NL> do {  <NL> try {  <NL> must save = false ;  <NL> s = s . process ( this ) ;  <NL> state = s . get name ( ) ;  <NL> builder . set property ( " state " , state ) ;  <NL>  } catch ( exception e ) {  <NL> string reason = log . create fault message ( " error occurred processing state < " + s . get name ( ) + " > " , e ) ;  <NL> msg . error ( " error processing . " , e ) ;  <NL> write failed job id file ( reason ) ;  <NL> throw new runtime exception ( reason , e ) ;  <NL>  }  <NL>  } while ( s . auto proceed to next state ( ) ) ;  <NL> if ( ! finished . equals ( state ) ) write job id file ( ) ;  <NL>  }  COM: <s> async processing which progresses the job through a series of states </s>