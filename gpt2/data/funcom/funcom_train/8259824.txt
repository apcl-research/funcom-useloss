TDAT: public void add package ( string package name ) {  <NL> reflections reflection = new reflections ( package name ) ;  <NL> set < class < ? extends rule > > classes =  <NL> reflection . get sub types of ( rule . class ) ;  <NL> for ( class < ? extends rule > rule : classes ) {  <NL> if ( modifier . is abstract ( rule . get modifiers ( ) ) ) {  <NL> continue ;  <NL>  }  <NL> try {  <NL> rule instance = rule . new instance ( ) ;  <NL> add rule ( instance ) ;  <NL>  } catch ( instantiation exception e ) {  <NL> throw new runtime exception ( e ) ;  <NL>  } catch ( illegal access exception e ) {  <NL> throw new runtime exception ( e ) ;  <NL>  }  <NL>  <NL>  }  <NL>  }  COM: <s> add a package containing rule implementations to the evaluator </s>