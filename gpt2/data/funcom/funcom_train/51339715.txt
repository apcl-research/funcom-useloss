TDAT: protected lock read lock ( ) {  <NL>  <NL> final lock read lock = read write lock . read lock ( ) ;  <NL>  <NL> try {  <NL>  <NL> if ( debug ) {  <NL>  <NL> log . debug ( ndx . to string ( )  <NL>  / / , new runtime exception ( )  <NL>  ) ;  <NL>  <NL>  }  <NL>  <NL>  / / read lock . lock ( ) ;  <NL>  <NL> if ( ! read lock . try lock ( lock _ timeout _ millis , time unit . milliseconds ) ) {  <NL>  <NL> throw new runtime exception ( " timeout " ) ;  <NL>  <NL>  }  <NL>  <NL>  } catch ( interrupted exception ex ) {  <NL>  <NL> throw new runtime exception ( ex ) ;  <NL>  <NL>  }  <NL>  <NL> return read lock ;  <NL>  <NL>  }  COM: <s> a shared read lock used in the absence of other concurrency control </s>