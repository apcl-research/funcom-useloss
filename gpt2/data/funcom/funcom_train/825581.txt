TDAT: public collection get next states in flow ( state vertex facade state ) {  <NL> linked list result = new linked list ( ) ;  <NL> collection out trans = state . get outgoing ( ) ;  <NL> for ( iterator it = out trans . iterator ( ) ; it . has next ( ) ; ) {  <NL> transition facade tr = ( transition facade ) it . next ( ) ;  <NL> if ( ! tr . has exact stereotype ( " each time " ) ) {  <NL> result . add ( tr . get target ( ) ) ;  <NL>  }  <NL>  }  <NL> return result ;  <NL>  }  COM: <s> get all states reachable from a state except those reachable via </s>