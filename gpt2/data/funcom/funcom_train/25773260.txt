TDAT: public void run matches ( collection < new match < term type , reasoner state info type > > matches ) throws sql exception {  <NL> set < string > match i ds = new hash set < string > ( ) ;  <NL>  / / schedule matches <NL> for ( new match < term type , reasoner state info type > match : matches ) {  <NL> match i ds . add ( match . get match id ( ) ) ;  <NL> schedule match ( match ) ;  <NL>  }  <NL> try {  <NL>  / / wait for matches to finish <NL> for ( string match id : match i ds ) {  <NL> wait for match ( match id ) ;  <NL>  }  <NL>  } catch ( interrupted exception e ) {  <NL> for ( string match id : match i ds ) {  <NL> delete ( match id ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> schedules the matches and waits until they are finished br </s>