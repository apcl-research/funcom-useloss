TDAT: private void do acquire shared ( int arg ) {  <NL> final node node = add waiter ( node . shared ) ;  <NL> boolean failed = true ;  <NL> try {  <NL> boolean interrupted = false ;  <NL> for ( ; ; ) {  <NL> final node p = node . predecessor ( ) ;  <NL> if ( p = = head ) {  <NL> int r = try acquire shared ( arg ) ;  <NL> if ( r > = 0 ) {  <NL> set head and propagate ( node , r ) ;  <NL> p . next = null ; / / help gc <NL> if ( interrupted )  <NL> self interrupt ( ) ;  <NL> failed = false ;  <NL> return ;  <NL>  }  <NL>  }  <NL> if ( should park after failed acquire ( p , node ) & &  <NL> park and check interrupt ( ) )  <NL> interrupted = true ;  <NL>  }  <NL>  } finally {  <NL> if ( failed )  <NL> cancel acquire ( node ) ;  <NL>  }  <NL>  }  COM: <s> acquires in shared uninterruptible mode </s>