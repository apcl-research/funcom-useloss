TDAT: public double get enum impact var ( int domain var var ) {  <NL> int idx = var . get extension ( abstractvar _ extension ) . get ( ) ;  <NL> if ( idx ! = - 1 ) {  <NL> double imp = 0 . 0 ;  <NL> disposable int iterator it = var . get domain ( ) . get iterator ( ) ;  <NL> int blockadress = data s . blocks [ idx ] - data s . offsets [ idx ] ;  <NL> while ( it . has next ( ) ) {  <NL> int val = it . next ( ) ;  <NL> imp + = 1 - get impact val ( blockadress + val ) ;  <NL>  }  <NL> it . dispose ( ) ;  <NL> return imp ;  <NL>  } else <NL> return 0 ;  <NL>  }  COM: <s> sum over each value of var the remaining search space </s>