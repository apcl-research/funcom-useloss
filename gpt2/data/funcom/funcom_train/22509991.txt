TDAT: protected object call method asynchrone ( string name , long primitives flag , object [ ] parameters ) throws remote exception {  <NL> remote call call = new remote call ( name , primitives flag , parameters ) ;  <NL> this . call queue . add element ( call ) ;  <NL> synchronized ( this . call queue ) {  <NL> this . call queue . notify ( ) ;  <NL>  }  <NL> synchronized ( call ) {  <NL> try {  <NL> call . wait ( ) ;  <NL>  } catch ( interrupted exception e ) {  <NL>  / / ignore <NL>  }  <NL>  }  <NL>  <NL> remote exception remote exception = call . get raised exception ( ) ;  <NL> if ( remote exception ! = null ) {  <NL> throw remote exception ;  <NL>  }  <NL> return call . get return value ( ) ;  <NL>  }  COM: <s> calls a remote method in a separate thread </s>