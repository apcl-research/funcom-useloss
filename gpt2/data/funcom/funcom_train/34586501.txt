TDAT: public graph analyze ( ) throws analysis exception {  <NL> log . info ( " start of analysis . " ) ;  <NL> analysis exception exception = new analysis exception ( ) ;  <NL>  <NL> for ( module m : workflow ) {  <NL> try {  <NL> graph = m . apply ( graph ) ;  <NL>  } catch ( exception e ) {  <NL> log . error ( " error during analyzation " , e ) ;  <NL> exception . add exception ( m , e ) ;  <NL>  } catch ( out of memory error e ) {  <NL> exception . add exception ( m , e ) ;  <NL> break ;  <NL>  }  <NL>  }  <NL> workflow . clear ( ) ;  <NL> if ( exception . get exception count ( ) ! = 0 ) {  <NL> exception . set graph ( graph ) ;  <NL> throw exception ;  <NL>  }  <NL> return graph ;  <NL>  }  COM: <s> performs all actions in workflow on the graph </s>