TDAT: public intersection intersect at ( ray ray ) {  <NL> ray . transform ( this . get transform ( true ) . get inverse ( ) ) ;  <NL>  <NL> double b = ray . o dotd ( ) ;  <NL> double c = ray . o doto ( ) ;  <NL> double g = ray . d dotd ( ) ;  <NL>  <NL> double discriminant = ( b * b ) - ( g ) * ( c - 1 ) ;  <NL> double discriminant sqrt = math . sqrt ( discriminant ) ;  <NL>  <NL> double t [ ] = new double [ 2 ] ;  <NL>  <NL> t [ 0 ] = ( - b + discriminant sqrt ) / ( g ) ;  <NL> t [ 1 ] = ( - b - discriminant sqrt ) / ( g ) ;  <NL>  <NL> return new intersection ( ray , this , t ) ;  <NL>  }  COM: <s> returns an intersection object representing the points along the ray represented </s>