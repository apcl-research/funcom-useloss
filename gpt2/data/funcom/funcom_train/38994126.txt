TDAT: protected optimization problem build optimization problem ( ) {  <NL> this . log . trace ( " constructing optimization problem to find a root of the function ' " + this . get functions ( ) + " ' . " ) ;  <NL> optimization problem problem = new optimization problem ( optimization problem . minimize ) ;  <NL> term target = null ;  <NL> for ( term f : this . get functions ( ) )  <NL> if ( target = = null )  <NL> target = f . mult ( f ) ;  <NL> else target = target . add ( f . mult ( f ) ) ;  <NL> problem . set target function ( target ) ;  <NL> this . log . trace ( " constructing optimization problem finished ; the target function is ' " + target + " ' . " ) ;  <NL> return problem ;  <NL>  }  COM: <s> builds an optimization problem for the task of root finding </s>