TDAT: private void call ( final method method , final object obj ) {  <NL> try {  <NL> method . set accessible ( true ) ;  <NL> method . invoke ( obj ) ;  <NL>  } catch ( illegal access exception e ) {  <NL> throw assertion error for ( method , e ) ;  <NL>  } catch ( invocation target exception e ) {  <NL> throwable t = e . get target exception ( ) ;  <NL> if ( e ! = null ) {  <NL> thrower . provoke ( t ) ;  <NL>  } else {  <NL> throw assertion error for ( method , e ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> calls the method but throws an assertion error if an exception happens </s>