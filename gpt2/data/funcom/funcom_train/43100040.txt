TDAT: private void get children ( collection current children , m generalization gen , collection generalizations ) {  <NL>  <NL> m generalizable element child = gen . get child ( ) ;  <NL> if ( current children . contains ( child ) & & generalizations . contains ( gen ) ) {  <NL> throw new illegal state exception ( " circular inheritance occured . " ) ;  <NL>  }  <NL> else {  <NL> current children . add ( child ) ;  <NL> generalizations . add ( gen ) ;  <NL>  }  <NL> iterator it = child . get specializations ( ) . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> get children ( current children , ( m generalization ) it . next ( ) , generalizations ) ;  <NL>  }  <NL>  }  COM: <s> adds all children recursively to the collection in the first argument </s>