TDAT: public void run io task ( io runnable io task , long node id ) {  <NL> check non transactional context ( ) ;  <NL> do {  <NL> try {  <NL> io task . run ( ) ;  <NL> return ;  <NL>  } catch ( io exception e ) {  <NL> if ( logger . is loggable ( level . finest ) ) {  <NL> logger . log throw (  <NL> level . finest , e ,  <NL>  " io runnable { 0 } throws " , io task ) ;  <NL>  }  <NL> try {  <NL>  / / tbd : what back - off policy do we want here ?  <NL> thread . sleep ( wait _ time _ before _ retry ) ;  <NL>  } catch ( interrupted exception ie ) {  <NL>  }  <NL>  }  <NL>  } while ( is alive ( node id ) ) ;  <NL>  }  COM: <s> executes the specified </s>