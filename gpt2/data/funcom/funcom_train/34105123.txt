TDAT: private void check expression ( ) {  <NL> if ( is boolean term ( ) ) {  <NL> return ;  <NL>  }  <NL> check arithmetic expression ( ) ;  <NL> if ( is operand ( ) ) {  <NL>  <NL> string symbol = peek token ( ) . get token ( ) ;  <NL>  <NL> check composite expression ( ) ;  <NL> semantic analyser . verify relational type compatibility ( ) ;  <NL>  <NL>  / / code generation action to a relational expression <NL> string result = code generator . make temp ( ) ;  <NL> code generator . emit ( result , symbol , code generator . pop ( code generator . stack . pc o ) ,  <NL> peek token ( ) . get token ( ) ) ;  <NL> code generator . push ( code generator . stack . pc o , result ) ;  <NL>  <NL> as push type ( key word . boolean ) ;  <NL> push new token ( ) ;  <NL>  } else {  <NL> return ;  <NL>  }  <NL>  }  COM: <s> check if the next construction in the source code is a logic expression </s>