TDAT: private void update particles ( ) {  <NL> list < thread > workerthreads = new array list < thread > ( ) ;  <NL> for ( final alignment particle a : particles ) {  <NL>  <NL> thread help = new thread ( new runnable ( ) {  <NL>  @ override <NL> public void run ( ) {  <NL> try {  <NL> a . update ( ) ;  <NL>  } catch ( exception e ) {  <NL> throw new runtime exception ( e ) ;  <NL>  }  <NL>  }  <NL>  } ) ;  <NL> help . start ( ) ;  <NL> workerthreads . add ( help ) ;  <NL> logger . trace ( " started a thread . " ) ;  <NL>  }  <NL>  <NL> for ( thread a : workerthreads ) {  <NL> boolean asleep = true ;  <NL> while ( asleep ) {  <NL> try {  <NL> a . join ( ) ;  <NL> asleep = false ;  <NL>  } catch ( interrupted exception e ) {  <NL>  / / resume to wait for the thread <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> this method creates for each </s>