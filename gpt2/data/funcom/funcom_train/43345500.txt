TDAT: public void unregister context ( context worker context ) {  <NL> synchronized ( this . contexts ) {  <NL> this . contexts . remove ( context . get receiver ( ) ) ;  <NL>  }  <NL>  / / remove all unreaded messages <NL> this . lock . lock ( ) ;  <NL> try {  <NL> linked list < acl message > list = this . messages . get ( context <NL>  . get receiver ( ) ) ;  <NL>  / / there are no messages ? return !  <NL> if ( list = = null ) {  <NL> return ;  <NL>  }  <NL>  / / remove each message in new messages set <NL> for ( acl message msg : list ) {  <NL> this . new messages . remove ( msg ) ;  <NL>  }  <NL> this . messages . remove ( context . get receiver ( ) ) ;  <NL>  } finally {  <NL> this . lock . unlock ( ) ;  <NL>  }  <NL>  }  COM: <s> manages the unregistration of a given context </s>