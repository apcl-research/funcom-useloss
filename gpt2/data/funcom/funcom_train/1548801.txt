TDAT: protected void update current iterator ( ) {  <NL> if ( has next ) {  <NL> return ;  <NL>  }  <NL> if ( current iterator = = null ) {  <NL> if ( root = = null ) {  <NL>  / / do nothing , has next will be false <NL>  } else {  <NL> if ( transformer = = null ) {  <NL> find next ( root ) ;  <NL>  } else {  <NL> find next ( transformer . transform ( root ) ) ;  <NL>  }  <NL> root = null ;  <NL>  }  <NL>  } else {  <NL> find next by iterator ( current iterator ) ;  <NL>  }  <NL>  }  COM: <s> loops around the iterators to find the next value to return </s>