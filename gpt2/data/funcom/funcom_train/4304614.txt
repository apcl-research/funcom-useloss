TDAT: public person get client ( string name ) {  <NL> vector < person > v p = new vector < person > ( ) ;  <NL> v p = ( vector < person > ) get clients ( ) ;  <NL> for ( int i = 0 ; i < v p . size ( ) ; i + + ) {  <NL> if ( v p . get ( i ) . get name ( ) . equals ( name ) )  <NL> return v p . get ( i ) ;  <NL>  }  <NL> return null ;  <NL>  / * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  <NL> iterator it = this . clients iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> person p = ( person ) it . next ( ) ;  <NL>  / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  <NL> system . out . println ( p . get name ( ) ) ;  <NL>  <NL> if ( p . get name ( ) = = name ) {  <NL> return p ;  <NL>  }  <NL>  <NL>  }  <NL> return null ;  <NL>  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * /  <NL>  }  COM: <s> looks for a person named name in the set of clients </s>