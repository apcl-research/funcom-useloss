TDAT: private void end visit ( final list arguments , final i method binding binding ) {  <NL> expression expression = null ;  <NL> constraint variable2 ancestor = null ;  <NL> constraint variable2 descendant = null ;  <NL> for ( int index = 0 ; index < arguments . size ( ) ; index + + ) {  <NL> expression = ( expression ) arguments . get ( index ) ;  <NL> descendant = ( constraint variable2 ) expression . get property ( property _ constraint _ variable ) ;  <NL> ancestor = f model . create method parameter variable ( binding , index ) ;  <NL> if ( ancestor ! = null & & descendant ! = null )  <NL> f model . create subtype constraint ( descendant , ancestor ) ;  <NL>  }  <NL>  }  COM: <s> end of visit the method argument list </s>