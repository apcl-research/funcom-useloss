TDAT: private collection subinterfaces ( class doc cd ) {  <NL> collection ret = ( collection ) class to subinterface . get ( cd ) ;  <NL> if ( ret = = null ) {  <NL> ret = new tree set ( ) ;  <NL> list subs = classtree . subinterfaces ( cd ) ;  <NL> if ( subs ! = null ) {  <NL> ret . add all ( subs ) ;  <NL> for ( iterator it = subs . iterator ( ) ; it . has next ( ) ; ) {  <NL> ret . add all ( subinterfaces ( ( class doc ) it . next ( ) ) ) ;  <NL>  }  <NL>  }  <NL> add all ( class to subinterface , cd , ret ) ;  <NL>  }  <NL> return ret ;  <NL>  }  COM: <s> return all subinterfaces of an interface and fill in class to subinterface map </s>