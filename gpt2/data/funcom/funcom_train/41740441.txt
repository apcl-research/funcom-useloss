TDAT: public t new instance ( ) {  <NL> try {  <NL> if ( this . clazz . is interface ( ) || this . clazz . is primitive ( ) ) {  <NL> throw new reflection exception (  <NL>  " illegal to instantiate an interface or primitive . " ) ;  <NL>  }  <NL> return this . clazz . new instance ( ) ;  <NL>  } catch ( instantiation exception e ) {  <NL> throw new reflection exception (  <NL>  " an exception was throwed while instantiating the class : "  <NL>  + this . name ( ) , e ) ;  <NL>  } catch ( illegal access exception e ) {  <NL> throw new reflection exception (  <NL>  " access denied to access this constructor : " + this . name ( ) ,  <NL> e ) ;  <NL>  }  <NL>  }  COM: <s> creates and return an instance of the wrapped class </s>