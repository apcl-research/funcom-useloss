TDAT: public void process transform ( ) {  <NL> md5importer instance = md5importer . get instance ( ) ;  <NL> quaternion parent orien = null ;  <NL> vector3f parent trans = null ;  <NL> if ( this . parent > = 0 )  <NL>  {  <NL> parent orien = instance . get joint ( this . parent ) . get orientation ( ) ;  <NL> parent trans = instance . get joint ( this . parent ) . get translation ( ) ;  <NL>  }  <NL> else <NL>  {  <NL> parent orien = new quaternion ( ) ;  <NL> parent trans = new vector3f ( ) ;  <NL>  }  <NL> this . orientation . set ( parent orien . inverse ( ) . mult local ( this . orientation ) ) ;  <NL> this . translation . subtract local ( parent trans ) ;  <NL> parent orien . inverse ( ) . mult local ( this . translation ) ;  <NL> if ( this . parent < 0 )  <NL>  {  <NL> this . orientation . set ( md5importer . base . mult ( this . orientation ) ) ;  <NL>  }  <NL>  }  COM: <s> process the translation and orientation of this joint into local space </s>