TDAT: private set expected ( state state ) {  <NL> int state _ size = state . size ;  <NL> context [ ] state _ contexts = state . contexts ;  <NL> set expected = new set ( - 50 ) ;  <NL>  <NL> for ( int i = 0 ; i < state _ size ; i + + ) {  <NL> context context = state _ contexts [ i ] ;  <NL> production production = context . production ;  <NL> int position = context . position ;  <NL> object [ ] phrase = production . phrase ;  <NL>  <NL> if ( position < phrase . length ) {  <NL> object symbol = phrase [ position ] ;  <NL> if ( terminal ( symbol ) ) expected . add ( symbol ) ;  <NL>  }  <NL> else {  <NL> set follow = context . follow ;  <NL> expected . add ( ( follow ! = null ) ? follow : follow ( production . nonterminal ) , 0 ) ;  <NL>  }  <NL>  }  <NL> return expected ;  <NL>  }  COM: <s> p computes the terminals expected in a code state code </s>