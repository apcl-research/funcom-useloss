TDAT: public void propagate scc ( ) {  <NL> set visited = new hash set ( ) ;  <NL> visited . add ( this ) ;  <NL>  / / scan predecessors not including ourselves <NL> do visit predecessors ( new visitor ( ) {  <NL> public void visit ( graph node node , object arg1 , object arg2 ) {  <NL> set sc = ( set ) arg1 ;  <NL>  / / add closure <NL> node . succ closed . add all ( sc ) ;  <NL>  / / scan for redundant links <NL> for ( iterator i = node . succ . iterator ( ) ; i . has next ( ) ; ) {  <NL> graph node s = ( graph node ) i . next ( ) ;  <NL> if ( sc . contains ( s ) ) {  <NL> i . remove ( ) ;  <NL> s . pred . remove ( node ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  } , succ closed , null , visited ) ;  <NL>  }  COM: <s> propagate the results of creating a new scc with this </s>