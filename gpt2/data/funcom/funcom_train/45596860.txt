TDAT: public void delete node upwards ( hashtable layouts , layer state node node ) {  <NL>  <NL>  / / first remove from hashtable .  <NL> layouts . remove ( node . squares ) ;  <NL>  <NL>  / / now go to all parents and delete as far up as possible .  <NL> layer state node parent ;  <NL> state edge edge ;  <NL>  <NL>  / / has only one parent <NL>  <NL> parent = node . parent ;  <NL> if ( parent ! = null ) {  <NL> parent . remove child with parent ( node ) ;  <NL>  / / subtract since not in tree anymore <NL> if ( parent . children states . size ( ) = = 0 ) {  <NL> delete node upwards ( layouts , parent ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> the function deletes the node given from hashtable and </s>