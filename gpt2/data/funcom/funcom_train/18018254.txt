TDAT: private void verify kind ( type kind kind , type mirror type ) {  <NL> class vis extends type kind visitor6 < type kind , void > {  <NL>  @ override <NL> public type kind visit no type as void ( no type t , void p ) {  <NL> return void ;  <NL>  }  <NL>  @ override <NL> public type kind visit no type as package ( no type t , void p ) {  <NL> return package ;  <NL>  }  <NL>  @ override <NL> public type kind visit no type as none ( no type t , void p ) {  <NL> return none ;  <NL>  }  <NL>  }  <NL> if ( kind ! = type . get kind ( ) || kind ! = new vis ( ) . visit ( type ) )  <NL> throw new assertion error ( ) ;  <NL>  }  COM: <s> verify that a no type instance is of a particular kind </s>