TDAT: private void build list ( list < t > list , t node ) {  <NL> if ( get edges to ( node ) . is empty ( ) ) {  <NL> list . add ( node ) ;  <NL>  / / iterator is needed here so that we can safely <NL>  / / remove the iterated node from the underlying list <NL> iterator < t > it = get edges from ( node ) . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> t target = it . next ( ) ;  <NL> it . remove ( ) ;  <NL> get edges to ( target ) . remove ( node ) ;  <NL> build list ( list , target ) ;  <NL>  }  <NL>  }  <NL>  }  COM: <s> if the node has no more incoming edges add it to the list </s>