TDAT: public double get function val at ( double [ ] x ) {  <NL> calc local likelihoods ( x ) ;  <NL>  <NL> double f val = 0 . 0 ;  <NL> for ( discrete variable v : graph . get unobserved ( ) ) {  <NL> f val - = local ll map . get ( v ) [ ( integer ) labels . get ( v ) ] ;  <NL> f val + = math . log ( local z ( v ) ) ;  <NL>  }  <NL>  <NL>  / / shrinkage prior <NL> double prior = 0 . 0 ;  <NL> for ( int i = 0 ; i < x . length ; i + + )  <NL> prior + = x [ i ] * x [ i ] ;  <NL> f val + = prior / ( 2 * sigma2 ) ;  <NL>  <NL> return f val ;  <NL>  }  COM: <s> returns the evaluation of the function at points values </s>