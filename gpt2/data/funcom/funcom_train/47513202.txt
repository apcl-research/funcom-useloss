TDAT: private vector path ( vector dest , vector init , a star astar ) {  <NL> int y = astar . end h ;  <NL> int x = astar . end w ;  <NL> int rx = 0 ;  <NL> int ry = 0 ;  <NL>  <NL> while ( ( x ! = ( int ) init . x ) || ( y ! = ( int ) init . y ) ) {  <NL> rx = x ;  <NL> ry = y ;  <NL> switch ( astar . open list [ y ] [ x ] [ a star . father _ dir ] ) {  <NL> case a star . dir _ down :  <NL> y - - ;  <NL> break ;  <NL> case a star . dir _ left :  <NL> x + + ;  <NL> break ;  <NL> case a star . dir _ right :  <NL> x - - ;  <NL> break ;  <NL> case a star . dir _ up :  <NL> y + + ;  <NL> break ;  <NL> default :  <NL> break ;  <NL>  }  <NL>  }  <NL>  <NL> return new vector ( rx , ry ) ;  <NL>  }  COM: <s> return the destination of the closest route </s>