TDAT: private i status long running read ( i progress monitor monitor ) {  <NL> for ( int i = 0 ; i < 60 ; i + + ) {  <NL>  / / every half - second , check for cancellation .  <NL>  / / yield to other readers five times in each interval <NL> console util . println (  <NL> console ,  <NL> nls . bind (  <NL> messages . read job _ msg ,  <NL> new integer ( id ) ,  <NL> new integer ( i ) ) ) ;  <NL> for ( int j = 0 ; j < 5 ; j + + ) {  <NL> try {  <NL> thread . sleep ( 100 ) ;  <NL>  } catch ( interrupted exception e ) {  <NL>  / / assume cancellation <NL> return status . cancel _ status ;  <NL>  }  <NL> domain . yield ( ) ;  <NL>  }  <NL>  <NL> if ( monitor . is canceled ( ) ) {  <NL> return status . cancel _ status ;  <NL>  }  <NL>  }  <NL>  <NL> return status . ok _ status ;  <NL>  }  COM: <s> called within a read transaction to perform the long running </s>