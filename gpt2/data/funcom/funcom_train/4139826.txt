TDAT: protected void remove type frags ( map < element , list < fragment > > map , fragment type type ) {  <NL> iterator < element > mit = map . key set ( ) . iterator ( ) ;  <NL> while ( mit . has next ( ) ) {  <NL> element e = mit . next ( ) ;  <NL> list < fragment > frags = map . get ( e ) ;  <NL> iterator < fragment > it = frags . iterator ( ) ;  <NL> while ( it . has next ( ) ) {  <NL> fragment f = it . next ( ) ;  <NL> if ( f . get type ( ) . equals ( type ) ) {  <NL> it . remove ( ) ; / / frags . remove ( f ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> remove all fragments that belong to the type type </s>