TDAT: private boolean until token ( char [ ] stop tokens )  <NL>  {  <NL> buffer . delete ( 0 , buffer . length ( ) ) ;  <NL>  <NL> try <NL>  {  <NL> int temp = input file . read ( ) ;  <NL>  <NL> while ( temp ! = - 1 )  <NL>  {  <NL> token = ( char ) temp ;  <NL>  <NL> for ( int i = 0 ; i < stop tokens . length ; i + + )  <NL>  {  <NL> if ( token = = stop tokens [ i ] )  <NL> return true ;  <NL>  }  <NL>  <NL>  <NL>  <NL> if ( ! character . is whitespace ( token ) )  <NL> buffer . append ( token ) ;  <NL>  <NL> temp = input file . read ( ) ;  <NL>  }  <NL>  <NL>  }  <NL> catch ( io exception ioe )  <NL>  {  <NL> system . out . print ( ioe . get message ( ) ) ;  <NL> system . exit ( 1 ) ;  <NL>  }  <NL>  <NL> return false ;  <NL>  }  COM: <s> parses the input file until a stop token is found </s>