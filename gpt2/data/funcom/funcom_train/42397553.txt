TDAT: protected void visit type ( final type type ) {  <NL> checker . not null ( " parameter : type " , type ) ;  <NL>  <NL> while ( true ) {  <NL> if ( this . has already been visited ( type ) ) {  <NL> break ;  <NL>  }  <NL>  <NL> this . add type ( type ) ;  <NL>  <NL> if ( this . skip type ( type ) ) {  <NL> break ;  <NL>  }  <NL>  <NL> if ( type . is primitive ( ) ) {  <NL> break ;  <NL>  }  <NL>  <NL> if ( type . is array ( ) ) {  <NL> this . process array ( type ) ;  <NL> break ;  <NL>  }  <NL>  <NL> if ( type . is interface ( ) ) {  <NL> this . process interface ( type ) ;  <NL> break ;  <NL>  }  <NL>  <NL> this . process type ( type ) ;  <NL> break ;  <NL>  }  <NL>  }  COM: <s> attempts to find all reachable types for the given type </s>