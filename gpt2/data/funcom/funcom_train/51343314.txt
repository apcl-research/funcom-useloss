TDAT: final private t get ( ) {  <NL> final thread t = thread . current thread ( ) ;  <NL> t tmp = map . get ( t ) ;  <NL> if ( tmp = = null ) {  <NL> if ( map . put ( t , tmp = initial value ( ) ) ! = null ) {  <NL>  / *  <NL>  * note : since the key is the thread it is not possible for <NL>  * there to be a concurrent put of an entry under the same <NL>  * key so we do not have to use put if absent ( ) .  <NL>  * /  <NL> throw new assertion error ( ) ;  <NL>  }  <NL>  / / add to list .  <NL> synchronized ( list ) {  <NL> list . add ( tmp ) ;  <NL>  }  <NL>  }  <NL> if ( halt )  <NL> throw new runtime exception ( first cause . get ( ) ) ;  <NL> return tmp ;  <NL>  }  COM: <s> return a thread local buffer </s>