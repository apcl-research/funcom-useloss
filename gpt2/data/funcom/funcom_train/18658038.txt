TDAT: public collection get covered gaps ( long start , long end ) {  <NL> gap gap = new gap ( start , end ) ;  <NL> array list result = new array list ( ) ;  <NL> for ( iterator i = this . gaps . iterator ( ) ; i . has next ( ) ; ) {  <NL> gap current gap = ( gap ) i . next ( ) ;  <NL> if ( gap . covers ( current gap ) )  <NL> result . add ( current gap ) ;  <NL>  }  <NL> return result ;  <NL>  }  COM: <s> returns the gaps stored in the gap list that are completely inside </s>