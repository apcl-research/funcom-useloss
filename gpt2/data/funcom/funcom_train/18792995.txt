TDAT: public alloy expr visit exists pred ( exists pred exists pred ) {  <NL> pair < list < expr var > , alloy expr > decls = process quant pred decls ( exists pred ) ;  <NL> alloy expr pred = process quant pred ( exists pred , true , decls . get second ( ) ) ;  <NL> return pred . for some ( decls . get first ( ) ) ;  <NL>  }  COM: <s> uses visit to recursively translate variables and predicates </s>