TDAT: public void walk ( definition definition ) {  <NL> if ( definition = = null ) {  <NL> throw new illegal argument exception ( " definition must not be null . " ) ;  <NL>  }  <NL> if ( definition instanceof class def ) {  <NL> walk class def ( ( class def ) definition ) ;  <NL> return ;  <NL>  }  <NL> if ( definition instanceof constructor ) {  <NL> walk constructor ( ( constructor ) definition ) ;  <NL> return ;  <NL>  }  <NL> if ( definition instanceof function ) {  <NL> walk function ( ( function ) definition ) ;  <NL> return ;  <NL>  }  <NL> if ( definition instanceof record ) {  <NL> walk record ( ( record ) definition ) ;  <NL> return ;  <NL>  }  <NL> if ( definition instanceof typed name ) {  <NL> walk typed name ( ( typed name ) definition ) ;  <NL> return ;  <NL>  }  <NL> if ( definition instanceof unit ) {  <NL> walk unit ( ( unit ) definition ) ;  <NL> return ;  <NL>  }  <NL> throw new assertion error ( definition . get class ( ) . get name ( ) ) ;  <NL>  }  COM: <s> walks the given definition </s>