TDAT: public string to math piper string ( expression value ev , boolean substitute variables ) {  <NL> string math piper string ;  <NL>  <NL> if ( ! ev . is expression node ( ) ) {  <NL> ev = new expression node ( kernel , ev ) ;  <NL>  }  <NL>  <NL> math piper string = ( ( expression node ) ev ) . get ca sstring ( expression node . string _ type _ math _ piper , ! substitute variables ) ;  <NL>  <NL> return math piper string ;  <NL>  }  COM: <s> returns the given expression as a string in math piper syntax </s>