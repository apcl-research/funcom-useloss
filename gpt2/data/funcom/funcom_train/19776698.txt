TDAT: public double double pow ( int exp ) {  <NL> if ( exp = = 0 . 0 )  <NL> return value of ( 1 . 0 ) ;  <NL>  <NL> double double r = new double double ( this ) ;  <NL> double double s = value of ( 1 . 0 ) ;  <NL> int n = math . abs ( exp ) ;  <NL>  <NL> if ( n > 1 ) {  <NL>  / * use binary exponentiation * /  <NL> while ( n > 0 ) {  <NL> if ( n % 2 = = 1 ) {  <NL> s . self multiply ( r ) ;  <NL>  }  <NL> n / = 2 ;  <NL> if ( n > 0 )  <NL> r = r . sqr ( ) ;  <NL>  }  <NL>  } else {  <NL> s = r ;  <NL>  }  <NL>  <NL>  / * compute the reciprocal if n is negative . * /  <NL> if ( exp < 0 )  <NL> return s . reciprocal ( ) ;  <NL> return s ;  <NL>  }  COM: <s> computes the value of this number raised to an integral power </s>