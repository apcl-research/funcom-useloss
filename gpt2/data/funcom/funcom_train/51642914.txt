TDAT: protected statement create method invocation ( final method declaration declaration , final method invocation invocation ) {  <NL> assert . is not null ( declaration ) ;  <NL> assert . is not null ( invocation ) ;  <NL> statement statement = null ;  <NL> final type type = declaration . get return type2 ( ) ;  <NL> if ( type = = null )  <NL> statement = create expression statement ( invocation ) ;  <NL> else {  <NL> if ( type instanceof primitive type ) {  <NL> final primitive type primitive = ( primitive type ) type ;  <NL> if ( primitive . get primitive type code ( ) . equals ( primitive type . void ) )  <NL> statement = create expression statement ( invocation ) ;  <NL> else <NL> statement = create return statement ( invocation ) ;  <NL>  } else <NL> statement = create return statement ( invocation ) ;  <NL>  }  <NL> return statement ;  <NL>  }  COM: <s> creates the corresponding statement for the method invocation based on </s>