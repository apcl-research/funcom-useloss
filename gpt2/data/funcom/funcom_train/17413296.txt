TDAT: private string apply rules ( list < inflection rule > rules , string word ) {  <NL> string ret val = word ;  <NL> if ( ! uncountables . contains ( word . to lower case ( ) ) ) {  <NL> list iterator < inflection rule > i = rules . list iterator ( rules . size ( ) ) ;  <NL> while ( i . has previous ( ) ) {  <NL> inflection rule rule = i . previous ( ) ;  <NL> if ( rule . is match ( word ) ) {  <NL> ret val = rule . apply ( word ) ;  <NL> break ;  <NL>  }  <NL>  }  <NL>  }  <NL> return ret val ;  <NL>  }  COM: <s> attempts to apply the rules against the specified word </s>