TDAT: private node expr ( node end ) {  <NL> node prev = null ;  <NL> for ( ; ; ) {  <NL> node node = sequence ( end ) ;  <NL> if ( prev = = null ) {  <NL> prev = node ;  <NL>  } else {  <NL> prev = new branch ( prev , node ) ;  <NL>  }  <NL> if ( peek ( ) ! = ' | ' ) {  <NL> return prev ;  <NL>  }  <NL> next ( ) ;  <NL>  }  <NL>  }  COM: <s> the expression is parsed with branch nodes added for alternations </s>