TDAT: public void bf sdist ( node n , vector to do , int [ ] indir conn ) {  <NL> node n2 = null ;  <NL> for ( enumeration es = n . adj edges . elements ( ) ; es . has more elements ( ) ; ) {  <NL> n2 = n . adj node ( ( edge ) es . next element ( ) ) ;  <NL> if ( n2 . dist < 0 ) {  <NL> n2 . dist = n . dist + 1 ;  <NL> indir conn [ n2 . dist ] + + ;  <NL>  <NL>  / / important add adds to the end of the list <NL> to do . add ( n2 ) ;  <NL>  }  <NL>  }  <NL> if ( ! to do . is empty ( ) ) {  <NL> n2 = ( node ) to do . remove ( 0 ) ;  <NL> bf sdist ( n2 , to do , indir conn ) ;  <NL>  }  <NL>  }  COM: <s> traverses the graph breadth first and updates the distance </s>