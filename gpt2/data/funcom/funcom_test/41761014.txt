TDAT: public tree node create new node ( ) {  <NL> tree node t = syntax tree . make new node ( token ) ;  <NL> if ( ( t ! = null ) ) {  <NL> if ( token . get type ( ) = = token . token type . begin ) {  <NL> begin first = false ;  <NL>  } else if ( token . get type ( ) = = token . token type . end ) {  <NL> end first = false ;  <NL>  }  <NL>  }  <NL> try match ( token . get type ( ) ) ;  <NL> return t ;  <NL>  }  COM: <s> creates a new tree node based on the current token </s>