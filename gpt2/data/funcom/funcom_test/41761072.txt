TDAT: private tree node parse expression list ( ) {  <NL> tree node t = parse expression ( ) ;  <NL> tree node p = t ;  <NL>  <NL> while ( token . get type ( ) ! = token . token type . rparens ) {  <NL> tree node q ;  <NL> try match ( token . token type . sep ) ;  <NL> q = parse expression ( ) ;  <NL> if ( q ! = null ) {  <NL> if ( t = = null ) {  <NL> t = p = q ;  <NL>  } else {  <NL> p . set sibling ( q ) ;  <NL> p = q ;  <NL>  }  <NL>  } else {  <NL> break ;  <NL>  }  <NL>  }  <NL>  <NL> return t ;  <NL>  }  COM: <s> parses a list of expressions </s>