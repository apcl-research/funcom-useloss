TDAT: public object invoke ( object proxy , method method , object [ ] args ) throws throwable {  <NL> try {  <NL> url method url = new url ( object url + " / " + method . get name ( ) ) ;  <NL> if ( method . is annotation present ( timeout . class ) ) {  <NL> return server . get timeout invocator ( ) . invoke ( method url , args , method . get annotation ( timeout . class ) . value ( ) ) ;  <NL>  } else {  <NL> return server . get timeout invocator ( ) . invoke ( method url , args ) ;  <NL>  }  <NL>  } catch ( invocation target exception e ) {  <NL> throw e . get target exception ( ) ;  <NL>  }  <NL>  }  COM: <s> handles calls performed on proxy object and passes them to the local </s>