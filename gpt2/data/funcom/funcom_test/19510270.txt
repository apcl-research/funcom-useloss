TDAT: public void test product type left right specialization ( ) {  <NL> try {  <NL> final product type p type = ff . make product type ( s , t ) ;  <NL> spec . put ( s , u ) ;  <NL> spec . put ( t , v ) ;  <NL> final type special type = p type . specialize ( spec ) ;  <NL> assert equals ( ff . make product type ( u , v ) , special type ) ;  <NL>  } catch ( illegal argument exception e ) {  <NL> fail ( " should not have raised an exception " ) ;  <NL>  }  <NL>  }  COM: <s> ensures that given types appearing as left and right members of a product </s>