TDAT: public vector get extension parts ( extension point epoint ) {  <NL> vector vexp = new vector ( ) ;  <NL> for ( iterator i = extend _ ucases . iterator ( ) ; i . has next ( ) ; ) {  <NL> extend relation rel = ( extend relation ) i . next ( ) ;  <NL> extend use case euc = rel . get extend use case ( ) ;  <NL> part p = euc . find part ( epoint . get value ( ) ) ;  <NL> if ( p ! = null ) {  <NL> vector vexpi = new vector ( ) ;  <NL> condition extcond = rel . get extend condition ( ) ;  <NL> if ( extcond ! = null ) {  <NL> vexpi . add ( extcond ) ;  <NL>  } else {  <NL> vexpi . add ( null condition . get default ( ) ) ;  <NL>  }  <NL> vexpi . add ( p ) ;  <NL> vexp . add ( vexpi ) ;  <NL>  }  <NL>  }  <NL> return vexp ;  <NL>  }  COM: <s> return all extension parts that apply at the given extension point </s>