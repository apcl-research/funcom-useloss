TDAT: public space read minimum distance ( space vec r ) {  <NL> if ( r . equals ( read start ( ) ) ) {  <NL> return space . origin ;  <NL>  }  <NL>  <NL> space vec delta = r . minus ( read space vec ( read start time ( ) ) ) ;  <NL> space alpha = delta . abs ( ) . times ( delta . direction ( ) . dot ( read direction ( ) ) ) ;  <NL> double d = delta . abs ( ) . amount ( space . m ) ;  <NL> double a = alpha . amount ( space . m ) ;  <NL>  <NL> return space . m . times ( math . sqrt ( ( d * d ) - ( a * a ) ) ) ;  <NL>  }  COM: <s> get the minimum distance from a given vector of a location in space </s>