TDAT: private void sink ( node cur ) {  <NL> node max ;  <NL> do {  <NL> max = cur ;  <NL> node left = left child ( cur ) ;  <NL> if ( left ! = null & & left . get similarity ( ) > max . get similarity ( ) ) {  <NL> max = left ;  <NL>  }  <NL> node right = right child ( cur ) ;  <NL> if ( right ! = null <NL>  & & right . get similarity ( ) > max . get similarity ( ) ) {  <NL> max = right ;  <NL>  }  <NL> if ( max ! = cur ) {  <NL> swap ( max , cur ) ;  <NL>  }  <NL>  } while ( max ! = cur ) ;  <NL>  }  COM: <s> moves a node downwards until the node satisfies the heap condition </s>