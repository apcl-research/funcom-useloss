TDAT: public void visit _ astore ( final instruction inst ) {  <NL> final local variable operand = ( local variable ) inst . operand ( ) ;  <NL>  <NL> expr expr = stack . peek ( ) ;  <NL>  <NL> if ( expr . type ( ) . is address ( ) ) {  <NL> assert . is true ( sub ! = null ) ;  <NL> assert . is true ( ! save value ) ;  <NL> expr = stack . pop ( type . address ) ;  <NL> sub . set return address ( operand ) ;  <NL> add stmt ( new address store stmt ( sub ) ) ;  <NL>  } else {  <NL> expr = stack . pop ( type . object ) ;  <NL> final local expr target = new local expr ( operand . index ( ) , expr . type ( ) ) ;  <NL> add store ( target , expr ) ;  <NL>  }  <NL>  }  COM: <s> visit an i astore i instruction </s>