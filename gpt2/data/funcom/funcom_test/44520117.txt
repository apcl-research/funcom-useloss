TDAT: public list inter set faces ( list s1 , list s2 ) {  <NL> list faces = get faces ( ) ;  <NL> list x faces = new array list ( ) ;  <NL>  <NL> for ( iterator e = faces . iterator ( ) ; e . has next ( ) ; ) {  <NL> triangle t = ( triangle ) e . next ( ) ;  <NL> list v = t . get vertices ( ) ;  <NL> vertex v1 = ( vertex ) v . get ( 0 ) ;  <NL> vertex v2 = ( vertex ) v . get ( 1 ) ;  <NL> vertex v3 = ( vertex ) v . get ( v . size ( ) - 1 ) ;  <NL> if ( ( s1 . contains ( v1 ) || s1 . contains ( v2 ) || s1 . contains ( v3 ) ) & &  <NL>  ( s2 . contains ( v1 ) || s2 . contains ( v2 ) || s2 . contains ( v3 ) ) )  <NL>  {  <NL> x faces . add ( t ) ;  <NL>  }  <NL>  }  <NL> return x faces ;  <NL>  }  COM: <s> determine the hull faces that have vertices in each of two sets </s>