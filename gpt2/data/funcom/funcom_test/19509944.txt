TDAT: public void test associative predicate ( ) {  <NL> te = m type environment ( " s " , " s " , " t " , " t " ) ;  <NL> assert predicate specialization ( te , / /  <NL>  " s ∈ s ∧ t ∈ t " , / /  <NL> m spec ( te , / /  <NL> m list ( " s " , " y " , / /  <NL>  " t " , " z " ) , / /  <NL> m list ( " s " , " s " , " y " , " y " , / /  <NL>  " t " , " t " , " z " , " z " ) ) ) ;  <NL>  }  COM: <s> ensures that an associative predicate with two children gets specialized </s>