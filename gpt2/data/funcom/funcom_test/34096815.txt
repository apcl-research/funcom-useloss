TDAT: public void delete obligation ( final obligation obligation , int basic block id ) throws obligation acquired or released in loop exception {  <NL> map < obligation set , state > updated state map = new hash map < obligation set , state > ( ) ;  <NL> for ( iterator < state > i = state iterator ( ) ; i . has next ( ) ; ) {  <NL> state state = i . next ( ) ;  <NL> check circularity ( state , obligation , basic block id ) ;  <NL> state . get obligation set ( ) . remove ( obligation ) ;  <NL> updated state map . put ( state . get obligation set ( ) , state ) ;  <NL>  }  <NL> replace map ( updated state map ) ;  <NL>  }  COM: <s> remove an obligation from every state in the state set </s>