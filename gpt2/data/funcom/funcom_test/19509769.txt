TDAT: public void test quantified predicate ( ) {  <NL> final bound ident decl [ ] decls = m list ( m bound ident decl ( " x " , t s ) ) ;  <NL> final bound identifier use = m bound identifier ( 0 , t s ) ;  <NL> final predicate pred = m associative predicate ( land ,  <NL> m relational predicate ( in , use , e s ) ,  <NL> pe t ,  <NL> pi u <NL>  ) ;  <NL> do test ( m quantified predicate ( exists , decls , pred ) , t s , t t , t u ) ;  <NL>  }  COM: <s> ensures that given types in a quantified predicate are propagated </s>