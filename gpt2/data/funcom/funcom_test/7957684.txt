TDAT: private node find node ( node node ) {  <NL> final stack stack = new stack ( ) ;  <NL>  <NL>  / / find the child of the root element .  <NL> while ( node . parent . child = = null ) {  <NL> stack . push ( node ) ;  <NL> node = node . parent ;  <NL>  }  <NL>  <NL>  / / do path compression on the way back down .  <NL> final node root child = node ;  <NL>  <NL> while ( ! stack . empty ( ) ) {  <NL> node = ( node ) stack . pop ( ) ;  <NL> node . parent = root child ;  <NL>  }  <NL>  <NL> assert . is true ( root child . parent . child ! = null ) ;  <NL>  <NL> return root child . parent ;  <NL>  }  COM: <s> finds the set containing a given node </s>