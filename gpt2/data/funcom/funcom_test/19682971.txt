TDAT: public void sleep ( ) {  <NL> lib . assert true ( condition lock . is held by current thread ( ) ) ;  <NL> boolean prev status = machine . interrupt ( ) . disable ( ) ;  <NL>  <NL> wait queue . wait for access ( k thread . current thread ( ) ) ; / / make the current <NL>  / / thread accessible <NL>  / / to a call to <NL>  / / wake ( )  <NL>  <NL> condition lock . release ( ) ; / / allow wake to be called <NL> k thread . sleep ( ) ;  <NL> condition lock . acquire ( ) ; / / continue from where we were <NL>  <NL> machine . interrupt ( ) . restore ( prev status ) ;  <NL>  }  COM: <s> atomically release the associated lock and go to sleep on this condition </s>