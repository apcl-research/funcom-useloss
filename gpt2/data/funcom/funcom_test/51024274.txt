TDAT: private default mutable tree node make node ( concept class cc ) {  <NL> default mutable tree node node = cc2node . get ( cc . get id ( ) ) ;  <NL> if ( node = = null ) {  <NL> node = new default mutable tree node ( cc ) ;  <NL>  <NL> if ( ! cc . equals ( root cc ) ) {  <NL> if ( cc . get specialisation of ( ) = = null ) {  <NL> cc . set specialisation of ( root cc ) ;  <NL>  }  <NL> default mutable tree node parent = make node ( cc . get specialisation of ( ) ) ;  <NL> parent . add ( node ) ;  <NL>  }  <NL>  <NL> cc2node . put ( cc . get id ( ) , node ) ;  <NL>  }  <NL> return node ;  <NL>  }  COM: <s> creates a node from a concept class </s>