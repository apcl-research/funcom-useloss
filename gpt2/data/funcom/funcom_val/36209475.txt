TDAT: private expression operator ( ) {  <NL> expression expression = atomic ( ) ;  <NL>  <NL>  / / keep building operator expressions as long as we have operators .  <NL> while ( match ( token type . operator ) || <NL> match ( token type . equals ) ) {  <NL> char operator = last ( 1 ) . text . char at ( 0 ) ;  <NL> expression right = atomic ( ) ;  <NL> expression = new operator expression ( expression , operator , right ) ;  <NL>  }  <NL>  <NL> return expression ;  <NL>  }  COM: <s> parses a series of binary operator expressions into a single </s>