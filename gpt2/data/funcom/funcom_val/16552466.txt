TDAT: protected void destroy object ( persistent obj ) {  <NL> if ( ( obj . state & persistent . destructed ) = = 0 ) {  <NL> try {  <NL> field descriptor fd ;  <NL> for ( fd = obj . desc . ref fields ; fd ! = null ; fd = fd . next ref ) {  <NL> fd . field . set ( obj , null ) ;  <NL>  }  <NL>  } catch ( exception x ) {  <NL> throw new error ( x . get message ( ) ) ;  <NL>  }  <NL> obj . state | = persistent . destructed|persistent . raw ;  <NL> obj . storage . throw object ( obj ) ;  <NL>  }  <NL>  }  COM: <s> destoroy all object references to make it possible to provide </s>