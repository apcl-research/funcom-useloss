TDAT: protected boolean elimine ( sub network adj ) {  <NL> system . out . println ( " elimine " ) ;  <NL>  <NL> oe . clear ( ) ;  <NL> array list < node > inter = set toolkit . intersection ( copia nos , adj . copia nos ) ;  <NL> array list < node > aux nos = set toolkit . clone ( copia nos ) ;  <NL>  <NL> int size ant = aux nos . size ( ) ;  <NL>  <NL> aux nos . remove all ( inter ) ;  <NL>  <NL>  / / assert inter . size ( ) + aux nos . size ( ) = = size ant ;  <NL>  <NL> boolean inseriu = false ;  <NL> while ( minimum weight elimination ( aux nos ) ) {  <NL> inseriu = true ;  <NL>  }  <NL>  <NL> while ( minimum weight elimination ( inter ) ) {  <NL> inseriu = true ;  <NL>  }  <NL>  <NL> make adjacents ( ) ;  <NL>  <NL> return inseriu ;  <NL>  }  COM: <s> minimum weight triangulation </s>