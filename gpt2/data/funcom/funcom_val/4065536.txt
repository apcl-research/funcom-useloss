TDAT: public square get move ( board board ) {  <NL> set < square > empty squares = board . get ( board . player . empty ) ;  <NL> list < square > winning squares = new array list < square > ( ) ;  <NL> int max = - 1 ;  <NL> for ( square s : empty squares ) {  <NL> int score = check square ( s ) ;  <NL> if ( score = = max ) {  <NL> winning squares . add ( s ) ;  <NL>  } else if ( score > max ) {  <NL> winning squares . clear ( ) ;  <NL> max = score ;  <NL> winning squares . add ( s ) ;  <NL>  }  <NL>  }  <NL>  <NL>  / / returns a random square with the highest value .  <NL> return winning squares . get ( ( int ) ( math . random ( ) * winning squares . size ( ) ) ) ;  <NL>  <NL>  <NL>  }  COM: <s> returns a random square that represents the most valuable move to make according </s>