TDAT: private void populate reaction lists ( map < string , reaction > map ) {  <NL> set < reaction > bi = new hash set < reaction > ( ) ;  <NL>  / / set < reaction > zero = new hash set < reaction > ( ) ;  <NL> set < reaction > uni = new hash set < reaction > ( ) ;  <NL> for ( reaction r : map . values ( ) ) {  <NL> r . set system ( this ) ;  <NL> switch ( r . get type ( ) ) {  <NL> case bi :  <NL> bi . add ( r ) ;  <NL> break ;  <NL> case uni :  <NL> uni . add ( r ) ;  <NL>  / / register state effect ( r ) ;  <NL> break ;  <NL> case zero :  <NL> precompute zeroth order reactions ( r ) ;  <NL> break ;  <NL> default :  <NL> break ;  <NL>  }  <NL>  }  <NL> bi molecular reactions = new hash set < reaction > ( bi ) ;  <NL> uni molecular reactions = new hash set < reaction > ( uni ) ;  <NL>  / / zero orderreactions = new hash set < reaction > ( zero ) ;  <NL>  }  COM: <s> populates the three lists containing the 3 types of reactions that can </s>