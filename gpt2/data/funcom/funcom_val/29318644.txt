TDAT: private void throw events ( ) throws io exception {  <NL> while ( ! event queue . is empty ( ) ) {  <NL> try {  <NL> io event event = event queue . remove first ( ) ;  <NL> list < event listener > to notify = listeners . get ( event ) ;  <NL> if ( to notify = = null ) {  <NL> continue ;  <NL>  }  <NL> for ( event listener listener : to notify ) {  <NL> listener . notify ( event , this ) ;  <NL>  }  <NL>  / / if ( should close ( ) ) {  <NL>  / / do close ( null ) ;  <NL>  / / }  <NL>  } finally {  <NL> for ( byte buffer empty : buffer util . scrub buffer list ( in list ) ) {  <NL> buffer cache . return buffer ( empty ) ;  <NL>  }  <NL>  }  <NL>  }  <NL>  }  COM: <s> notifies all event listeners of any events on the queue </s>