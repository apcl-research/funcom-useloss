TDAT: public double get upper bound ( double total weight , double total positive weight , hypothesis hypo , double delta ) {  <NL> double p0 ;  <NL> if ( hypo . get prediction ( ) = = hypothesis . positive _ class ) {  <NL> p0 = this . priors [ hypothesis . positive _ class ] ;  <NL>  }  <NL> else {  <NL> p0 = this . priors [ hypothesis . negative _ class ] ;  <NL>  }  <NL> utility cov = new coverage ( this . priors , this . large ) ;  <NL> hypothesis h = hypo . clone ( ) ;  <NL> h . set covered weight ( hypo . get positive weight ( ) ) ; / / all fp become tn <NL> double g = cov . utility ( total weight , total positive weight , h ) ;  <NL> double conf = cov . confidence intervall ( total weight , delta ) ;  <NL> return ( ( g + conf ) * ( g + conf ) * ( 1 . 0d - p0 ) ) ;  <NL>  }  COM: <s> returns an upper bound for the utility of refinements for the given hypothesis </s>